/**************************************************************************
 ** INTEL CONFIDENTIAL
 ** Copyright 2008 - 2015 Intel Corporation All Rights Reserved.
 **
 ** The source code contained or described herein and all documents related to 
 ** the source code ("Material") are owned by Intel Corporation or its 
 ** suppliers or licensors. Title to the Material remains with 
 ** Intel Corporation or its suppliers and licensors. 
 ** The Material contains trade secrets and proprietary and confidential
 ** information of Intel or its suppliers and licensors. The Material is 
 ** protected by worldwide copyright and trade secret laws and treaty 
 ** provisions. No part of the Material may be used, copied, reproduced, 
 ** modified, published, uploaded, posted, transmitted, distributed, or 
 ** disclosed in any way without Intel's prior express written permission.
 **
 ** No license under any patent, copyright, trade secret or other 
 ** intellectual property right is granted to or conferred upon you by 
 ** disclosure or delivery of the Materials, either expressly, by implication, 
 ** inducement, estoppel or otherwise. Any license under such intellectual 
 ** property rights must be express and approved by Intel in writing.
 **  **********************************************************************/


#ifndef _NCP_NCA_MTP_REGS_H_
#define _NCP_NCA_MTP_REGS_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "ncp_sal_types.h"

/*! @struct ncp_nca_mtp_fifo_state_ram_r_t
 *  @brief Per Prefetch Stripe Current State RAM for Shared Pointer FIFO RAM
 *  @details Autoinitialized to zeros with good ECC.
		Current depth, read pointer, and write pointer values for the pointer allocation prefetch FIFOs, where
		the offset from this base address divided by 4 maps to the entry in the RAM for the FIFO associated
		with {pool[4:0], size[1:0]}.
		These state RAMs must be initialized to all 0s and the associated configuration RAMs must also
		be setup prior to setting the NCA's global prefetch init bit that will initiate a series of one-time
		MCIP fetches to fill all of the configured pointer FIFOs with prefetched pointers.  The NCA's global
		prefetch complete status bit will be set once the prefetch operation has been completed.
		Note that all copies of the state RAM (1 per prefetch stripe) MUST be setup exactly the
		same way, so using the All Stripe Write Prefetch State RAM for Shared Pointer FIFO RAM address
		range for writes is stongly advised.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_fifo_state_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_depth </td>
 *     <td width="20%" align="center"> 11 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> FIFO Depth </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_rptr </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> FIFO Read Pointer </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_wptr </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> FIFO Write Pointer </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_state_ram_r_t
 *
 * Implemented by: 
 *      prefetch_fifo_state_ram_stripe_0
 *      prefetch_fifo_state_ram_stripe_1
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  1;
     unsigned      fifo_depth                                : 11;
     unsigned      fifo_rptr                                 : 10;
     unsigned      fifo_wptr                                 : 10;
#else    /* Little Endian */
     unsigned      fifo_wptr                                 : 10;
     unsigned      fifo_rptr                                 : 10;
     unsigned      fifo_depth                                : 11;
     unsigned      reserved0                                 :  1;
#endif
} ncp_nca_mtp_fifo_state_ram_r_t;

/*! @struct ncp_nca_mtp_fifo_state_ram_write_r_t
 *  @brief Per Prefetch Stripe Current State RAM for Shared Pointer FIFO RAM
 *  @details This address range can be used to write all of the Per Stripe Prefetch State RAMs in parallel to save
		setup time.  A write to a location of the RAM in this address range writes to that same
		location in all of the stripes in parallel.  A read returns the data from stripe 0.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_fifo_state_ram_write_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_depth </td>
 *     <td width="20%" align="center"> 11 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> FIFO Depth </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_rptr </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> FIFO Read Pointer </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_wptr </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> FIFO Write Pointer </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_state_ram_write_r_t
 *
 * Implemented by: 
 *      prefetch_fifo_state_ram_stripe_write
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  1;
     unsigned      fifo_depth                                : 11;
     unsigned      fifo_rptr                                 : 10;
     unsigned      fifo_wptr                                 : 10;
#else    /* Little Endian */
     unsigned      fifo_wptr                                 : 10;
     unsigned      fifo_rptr                                 : 10;
     unsigned      fifo_depth                                : 11;
     unsigned      reserved0                                 :  1;
#endif
} ncp_nca_mtp_fifo_state_ram_write_r_t;

/*! @struct ncp_nca_mtp_fifo_data_ram_r_t
 *  @brief Per Prefetch Stripe Shared Pointer FIFO RAM
 *  @details Autoinitialized to zeros with good ECC.
		The actual pointer data stored in the shared pointer FIFO RAM. This structure is initialized by the
		hardware sequence initiated by setting the NCA's global prefetch init bit.  The NCA's global
		prefetch complete bit is set once the initialization has been completed.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_fifo_data_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param vi </td>
 *     <td width="20%" align="center"> 28 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Virtual index </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_data_ram_r_t
 *
 * Implemented by: 
 *      prefetch_fifo_data_ram_stripe_1
 *      prefetch_fifo_data_ram_stripe_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  4;
     unsigned      vi                                        : 28;
#else    /* Little Endian */
     unsigned      vi                                        : 28;
     unsigned      reserved0                                 :  4;
#endif
} ncp_nca_mtp_fifo_data_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_count_256B_ram_r_t
 *  @brief Memory Quota Group (MQG) 256B Block Allocation Counter Memory
 *  @details Count of currently allocated 256B pointers within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
		initialized to 0 after reset by the hardware.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_count_256B_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param count_256b </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Count of currently allocated 256B blocks for this
 *        MQG/pool.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_count_256B_ram_r_t
 *
 * Implemented by: 
 *      mqg_count_256B_ram
 */
 
typedef struct
{
     unsigned  int                count_256b;
} ncp_nca_mtp_mqg_count_256B_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_count_2KB_ram_r_t
 *  @brief Memory Quota Group (MQG) 2KB Block Allocation Counter Memory
 *  @details Count of currently allocated 2KB within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
		initialized to 0 after reset by the hardware.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_count_2KB_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param count_2kb </td>
 *     <td width="20%" align="center"> 29 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Count of currently allocated 2KB blocks for this MQG/pool. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_count_2KB_ram_r_t
 *
 * Implemented by: 
 *      mqg_count_2KB_ram
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  3;
     unsigned      count_2kb                                 : 29;
#else    /* Little Endian */
     unsigned      count_2kb                                 : 29;
     unsigned      reserved0                                 :  3;
#endif
} ncp_nca_mtp_mqg_count_2KB_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_count_16KB_ram_r_t
 *  @brief Memory Quota Group (MQG) 16KB Block Allocation Counter Memory
 *  @details Count of currently allocated 16KB pointers within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
		initialized to 0 after reset by the hardware.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_count_16KB_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 6 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param count_16kb </td>
 *     <td width="20%" align="center"> 26 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Count of currently allocated 16KB blocks for this
 *        MQG/pool.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_count_16KB_ram_r_t
 *
 * Implemented by: 
 *      mqg_count_16KB_ram
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  6;
     unsigned      count_16kb                                : 26;
#else    /* Little Endian */
     unsigned      count_16kb                                : 26;
     unsigned      reserved0                                 :  6;
#endif
} ncp_nca_mtp_mqg_count_16KB_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_count_64KB_ram_r_t
 *  @brief Memory Quota Group (MQG) 64K Block Allocation Counter Memory
 *  @details Count of currently allocated 64KB pointers within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
		initialized to 0 after reset by the hardware.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_count_64KB_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param count_64kb </td>
 *     <td width="20%" align="center"> 24 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Count of currently allocated 64KB blocks for this
 *        MQG/pool.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_count_64KB_ram_r_t
 *
 * Implemented by: 
 *      mqg_count_64KB_ram
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  8;
     unsigned      count_64kb                                : 24;
#else    /* Little Endian */
     unsigned      count_64kb                                : 24;
     unsigned      reserved0                                 :  8;
#endif
} ncp_nca_mtp_mqg_count_64KB_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_thresh_256B_ram_r_t
 *  @brief Memory Quota Group (MQG) 256B Block Allocation Threshold Memory
 *  @details Threshold limit for allocated 256B pointers within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
		initialized to one half of the maximum available system memory size after reset by the hardware
		and should be set to a more reasonable value if memory quota group limits are to be enforced.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_thresh_256B_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param threshold_256b </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Maximum number of 256B blocks that can be allocated
 *        for this MQG/pool
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_thresh_256B_ram_r_t
 *
 * Implemented by: 
 *      mqg_thresh_256B_ram
 */
 
typedef struct
{
     unsigned  int            threshold_256b;
} ncp_nca_mtp_mqg_thresh_256B_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_thresh_2KB_ram_r_t
 *  @brief Memory Quota Group (MQG) 2KB Block Allocation Threshold Memory
 *  @details Threshold limit for allocated 2KB pointers within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
                initialized to one half of the maximum available system memory size after reset by the hardware
                and should be set to a more reasonable value if memory quota group limits are to be enforced.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_thresh_2KB_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param threshold_2kb </td>
 *     <td width="20%" align="center"> 29 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Maximum number of 2KB blocks that can be allocated
 *        for this MQG/pool
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_thresh_2KB_ram_r_t
 *
 * Implemented by: 
 *      mqg_thresh_2KB_ram
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  3;
     unsigned      threshold_2kb                             : 29;
#else    /* Little Endian */
     unsigned      threshold_2kb                             : 29;
     unsigned      reserved0                                 :  3;
#endif
} ncp_nca_mtp_mqg_thresh_2KB_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_thresh_16KB_ram_r_t
 *  @brief Memory Quota Group (MQG) 16KB Block Allocation Threshold Memory
 *  @details Threshold limit for allocated 16KB pointers within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
                initialized to one half of the maximum available system memory size after reset by the hardware
                and should be set to a more reasonable value if memory quota group limits are to be enforced.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_thresh_16KB_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 6 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param threshold_16kb </td>
 *     <td width="20%" align="center"> 26 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Maximum number of 16KB blocks that can be allocated
 *        for this MQG/pool
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_thresh_16KB_ram_r_t
 *
 * Implemented by: 
 *      mqg_thresh_16KB_ram
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  6;
     unsigned      threshold_16kb                            : 26;
#else    /* Little Endian */
     unsigned      threshold_16kb                            : 26;
     unsigned      reserved0                                 :  6;
#endif
} ncp_nca_mtp_mqg_thresh_16KB_ram_r_t;

/*! @struct ncp_nca_mtp_mqg_thresh_64KB_ram_r_t
 *  @brief Memory Quota Group (MQG) Block Allocation Threshold Memory
 *  @details Threshold limit for allocated 64KB pointers within a given MQG/pool, where the offset from this
		base address divided by 4 maps to the {(pool-2), MQG} entry in the RAM. This structure is
                initialized to one half of the maximum available system memory size after reset by the hardware
                and should be set to a more reasonable value if memory quota group limits are to be enforced.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg_thresh_64KB_ram_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param threshold_64kb </td>
 *     <td width="20%" align="center"> 24 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Maximum number of 64KB blocks that can be allocated
 *        for this MQG/pool
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg_thresh_64KB_ram_r_t
 *
 * Implemented by: 
 *      mqg_thresh_64KB_ram
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  8;
     unsigned      threshold_64kb                            : 24;
#else    /* Little Endian */
     unsigned      threshold_64kb                            : 24;
     unsigned      reserved0                                 :  8;
#endif
} ncp_nca_mtp_mqg_thresh_64KB_ram_r_t;

/*! @struct ncp_nca_mtp_mtp_dmm_lu_r_t
 *  @brief Direct Memory Map Lookup Table
 *  @details Maps the 8b PGIT provided by direct memory mapped pointer allocations or deallocations to 1 of 32 memory
		quota groups and 1 of 16 virtual address regions.
		The setup of this structure and the MPCQ Lookup Table must be identical is their mappings.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mtp_dmm_lu_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 22 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param valid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Table entry valid. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Memory Qutoa Group. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param trans_id </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Virtual region translation ID. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mtp_dmm_lu_r_t
 *
 * Implemented by: 
 *      dmm_lookup
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 22;
     unsigned      valid                                     :  1;
     unsigned      mqg                                       :  5;
     unsigned      trans_id                                  :  4;
#else    /* Little Endian */
     unsigned      trans_id                                  :  4;
     unsigned      mqg                                       :  5;
     unsigned      valid                                     :  1;
     unsigned      reserved0                                 : 22;
#endif
} ncp_nca_mtp_mtp_dmm_lu_r_t;

/*! @struct ncp_nca_mtp_mtp_mpcq_lu_r_t
 *  @brief MPCQ Lookup Table
 *  @details Maps the 4b source ID and 3b PGIT provided by mPCQ allocations to 1 of 32 memory quota groups and 1 of
		16 virtual address regions. The table addresses are {SRC_ID[3:0], PGIT[2:0], 1'b0}.
		The setup of this structure and the Direct Memory Map Lookup Table must be identical is their mappings.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mtp_mpcq_lu_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 22 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param valid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Table entry valid. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Memory Qutoa Group. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param trans_id </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Virtual region translation ID. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mtp_mpcq_lu_r_t
 *
 * Implemented by: 
 *      mpcq_lookup
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 22;
     unsigned      valid                                     :  1;
     unsigned      mqg                                       :  5;
     unsigned      trans_id                                  :  4;
#else    /* Little Endian */
     unsigned      trans_id                                  :  4;
     unsigned      mqg                                       :  5;
     unsigned      valid                                     :  1;
     unsigned      reserved0                                 : 22;
#endif
} ncp_nca_mtp_mtp_mpcq_lu_r_t;

/*! @struct ncp_nca_mtp_interface_95_64_r_t
 *  @brief Interface [95:64] Register
 *  @details This register holds the read-only current status of the interface control signals.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interface_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 17 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mmba_req_bp </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mmbr_req_bp </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mmbr_eng_bp </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_core_arready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_core_arvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_core_rready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_core_rvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_core_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_core_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_core_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_core_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interface_95_64_r_t
 *
 * Implemented by: 
 *      interface_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 17;
     unsigned      mmba_req_bp                               :  1;
     unsigned      mmbr_req_bp                               :  1;
     unsigned      mmbr_eng_bp                               :  1;
     unsigned      itp_mtp_req_core_arready                  :  1;
     unsigned      itp_mtp_req_core_arvalid                  :  1;
     unsigned      itp_mtp_req_core_rready                   :  1;
     unsigned      itp_mtp_req_core_rvalid                   :  1;
     unsigned      itp_mtp_tx_core_bready                    :  1;
     unsigned      itp_mtp_tx_core_bvalid                    :  1;
     unsigned      itp_mtp_tx_core_awready                   :  1;
     unsigned      itp_mtp_tx_core_awvalid                   :  1;
     unsigned      ncav3_dmm_core_awready                    :  1;
     unsigned      ncav3_dmm_core_awvalid                    :  1;
     unsigned      ncav3_dmm_core_bready                     :  1;
     unsigned      ncav3_dmm_core_bvalid                     :  1;
#else    /* Little Endian */
     unsigned      ncav3_dmm_core_bvalid                     :  1;
     unsigned      ncav3_dmm_core_bready                     :  1;
     unsigned      ncav3_dmm_core_awvalid                    :  1;
     unsigned      ncav3_dmm_core_awready                    :  1;
     unsigned      itp_mtp_tx_core_awvalid                   :  1;
     unsigned      itp_mtp_tx_core_awready                   :  1;
     unsigned      itp_mtp_tx_core_bvalid                    :  1;
     unsigned      itp_mtp_tx_core_bready                    :  1;
     unsigned      itp_mtp_req_core_rvalid                   :  1;
     unsigned      itp_mtp_req_core_rready                   :  1;
     unsigned      itp_mtp_req_core_arvalid                  :  1;
     unsigned      itp_mtp_req_core_arready                  :  1;
     unsigned      mmbr_eng_bp                               :  1;
     unsigned      mmbr_req_bp                               :  1;
     unsigned      mmba_req_bp                               :  1;
     unsigned      reserved0                                 : 17;
#endif
} ncp_nca_mtp_interface_95_64_r_t;

/*! @struct ncp_nca_mtp_interface_63_32_r_t
 *  @brief Interface [63:32] Register
 *  @details This register holds the read-only current status of the interface control signals.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interface_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_arready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_arvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_rready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_core_rvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_core_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_core_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_core_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_core_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_core_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_core_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_core_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_core_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_core_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_core_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_core_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_core_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_core_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_core_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_core_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_core_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_arready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_arvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_rready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_req_rvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_wready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_wvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_mtp_tx_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interface_63_32_r_t
 *
 * Implemented by: 
 *      interface_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      ncav3_dmm_core_arready                    :  1;
     unsigned      ncav3_dmm_core_arvalid                    :  1;
     unsigned      ncav3_dmm_core_rready                     :  1;
     unsigned      ncav3_dmm_core_rvalid                     :  1;
     unsigned      ncav3_mpcq_req_core_bready                :  1;
     unsigned      ncav3_mpcq_req_core_bvalid                :  1;
     unsigned      ncav3_mpcq_req_core_awready               :  1;
     unsigned      ncav3_mpcq_req_core_awvalid               :  1;
     unsigned      ncav3_mpcq_res_core_bready                :  1;
     unsigned      ncav3_mpcq_res_core_bvalid                :  1;
     unsigned      ncav3_mpcq_res_core_awready               :  1;
     unsigned      ncav3_mpcq_res_core_awvalid               :  1;
     unsigned      otp_mtp_req_core_bready                   :  1;
     unsigned      otp_mtp_req_core_bvalid                   :  1;
     unsigned      otp_mtp_req_core_awready                  :  1;
     unsigned      otp_mtp_req_core_awvalid                  :  1;
     unsigned      mtp_otp_res_core_awready                  :  1;
     unsigned      mtp_otp_res_core_awvalid                  :  1;
     unsigned      mtp_otp_res_core_bready                   :  1;
     unsigned      mtp_otp_res_core_bvalid                   :  1;
     unsigned      itp_mtp_req_arready                       :  1;
     unsigned      itp_mtp_req_arvalid                       :  1;
     unsigned      itp_mtp_req_rready                        :  1;
     unsigned      itp_mtp_req_rvalid                        :  1;
     unsigned      itp_mtp_tx_awready                        :  1;
     unsigned      itp_mtp_tx_awvalid                        :  1;
     unsigned      itp_mtp_tx_wready                         :  1;
     unsigned      itp_mtp_tx_wvalid                         :  1;
     unsigned      itp_mtp_tx_bready                         :  1;
     unsigned      itp_mtp_tx_bvalid                         :  1;
     unsigned      ncav3_dmm_awready                         :  1;
     unsigned      ncav3_dmm_awvalid                         :  1;
#else    /* Little Endian */
     unsigned      ncav3_dmm_awvalid                         :  1;
     unsigned      ncav3_dmm_awready                         :  1;
     unsigned      itp_mtp_tx_bvalid                         :  1;
     unsigned      itp_mtp_tx_bready                         :  1;
     unsigned      itp_mtp_tx_wvalid                         :  1;
     unsigned      itp_mtp_tx_wready                         :  1;
     unsigned      itp_mtp_tx_awvalid                        :  1;
     unsigned      itp_mtp_tx_awready                        :  1;
     unsigned      itp_mtp_req_rvalid                        :  1;
     unsigned      itp_mtp_req_rready                        :  1;
     unsigned      itp_mtp_req_arvalid                       :  1;
     unsigned      itp_mtp_req_arready                       :  1;
     unsigned      mtp_otp_res_core_bvalid                   :  1;
     unsigned      mtp_otp_res_core_bready                   :  1;
     unsigned      mtp_otp_res_core_awvalid                  :  1;
     unsigned      mtp_otp_res_core_awready                  :  1;
     unsigned      otp_mtp_req_core_awvalid                  :  1;
     unsigned      otp_mtp_req_core_awready                  :  1;
     unsigned      otp_mtp_req_core_bvalid                   :  1;
     unsigned      otp_mtp_req_core_bready                   :  1;
     unsigned      ncav3_mpcq_res_core_awvalid               :  1;
     unsigned      ncav3_mpcq_res_core_awready               :  1;
     unsigned      ncav3_mpcq_res_core_bvalid                :  1;
     unsigned      ncav3_mpcq_res_core_bready                :  1;
     unsigned      ncav3_mpcq_req_core_awvalid               :  1;
     unsigned      ncav3_mpcq_req_core_awready               :  1;
     unsigned      ncav3_mpcq_req_core_bvalid                :  1;
     unsigned      ncav3_mpcq_req_core_bready                :  1;
     unsigned      ncav3_dmm_core_rvalid                     :  1;
     unsigned      ncav3_dmm_core_rready                     :  1;
     unsigned      ncav3_dmm_core_arvalid                    :  1;
     unsigned      ncav3_dmm_core_arready                    :  1;
#endif
} ncp_nca_mtp_interface_63_32_r_t;

/*! @struct ncp_nca_mtp_interface_31_0_r_t
 *  @brief Interface [31:0] Register
 *  @details This register holds the read-only current status of the interface control signals.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interface_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_wready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_wvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_arready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_arvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_rready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_dmm_rvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_wready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_wvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_req_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_wready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_wvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_wready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_wvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_mtp_req_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_awready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_awvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_wready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_wvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_bready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_bvalid </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Current interface signal value. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interface_31_0_r_t
 *
 * Implemented by: 
 *      interface_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      ncav3_dmm_wready                          :  1;
     unsigned      ncav3_dmm_wvalid                          :  1;
     unsigned      ncav3_dmm_bready                          :  1;
     unsigned      ncav3_dmm_bvalid                          :  1;
     unsigned      ncav3_dmm_arready                         :  1;
     unsigned      ncav3_dmm_arvalid                         :  1;
     unsigned      ncav3_dmm_rready                          :  1;
     unsigned      ncav3_dmm_rvalid                          :  1;
     unsigned      ncav3_mpcq_req_awready                    :  1;
     unsigned      ncav3_mpcq_req_awvalid                    :  1;
     unsigned      ncav3_mpcq_req_wready                     :  1;
     unsigned      ncav3_mpcq_req_wvalid                     :  1;
     unsigned      ncav3_mpcq_req_bready                     :  1;
     unsigned      ncav3_mpcq_req_bvalid                     :  1;
     unsigned      ncav3_mpcq_res_awready                    :  1;
     unsigned      ncav3_mpcq_res_awvalid                    :  1;
     unsigned      ncav3_mpcq_res_wready                     :  1;
     unsigned      ncav3_mpcq_res_wvalid                     :  1;
     unsigned      ncav3_mpcq_res_bready                     :  1;
     unsigned      ncav3_mpcq_res_bvalid                     :  1;
     unsigned      otp_mtp_req_awready                       :  1;
     unsigned      otp_mtp_req_awvalid                       :  1;
     unsigned      otp_mtp_req_wready                        :  1;
     unsigned      otp_mtp_req_wvalid                        :  1;
     unsigned      otp_mtp_req_bready                        :  1;
     unsigned      otp_mtp_req_bvalid                        :  1;
     unsigned      mtp_otp_res_awready                       :  1;
     unsigned      mtp_otp_res_awvalid                       :  1;
     unsigned      mtp_otp_res_wready                        :  1;
     unsigned      mtp_otp_res_wvalid                        :  1;
     unsigned      mtp_otp_res_bready                        :  1;
     unsigned      mtp_otp_res_bvalid                        :  1;
#else    /* Little Endian */
     unsigned      mtp_otp_res_bvalid                        :  1;
     unsigned      mtp_otp_res_bready                        :  1;
     unsigned      mtp_otp_res_wvalid                        :  1;
     unsigned      mtp_otp_res_wready                        :  1;
     unsigned      mtp_otp_res_awvalid                       :  1;
     unsigned      mtp_otp_res_awready                       :  1;
     unsigned      otp_mtp_req_bvalid                        :  1;
     unsigned      otp_mtp_req_bready                        :  1;
     unsigned      otp_mtp_req_wvalid                        :  1;
     unsigned      otp_mtp_req_wready                        :  1;
     unsigned      otp_mtp_req_awvalid                       :  1;
     unsigned      otp_mtp_req_awready                       :  1;
     unsigned      ncav3_mpcq_res_bvalid                     :  1;
     unsigned      ncav3_mpcq_res_bready                     :  1;
     unsigned      ncav3_mpcq_res_wvalid                     :  1;
     unsigned      ncav3_mpcq_res_wready                     :  1;
     unsigned      ncav3_mpcq_res_awvalid                    :  1;
     unsigned      ncav3_mpcq_res_awready                    :  1;
     unsigned      ncav3_mpcq_req_bvalid                     :  1;
     unsigned      ncav3_mpcq_req_bready                     :  1;
     unsigned      ncav3_mpcq_req_wvalid                     :  1;
     unsigned      ncav3_mpcq_req_wready                     :  1;
     unsigned      ncav3_mpcq_req_awvalid                    :  1;
     unsigned      ncav3_mpcq_req_awready                    :  1;
     unsigned      ncav3_dmm_rvalid                          :  1;
     unsigned      ncav3_dmm_rready                          :  1;
     unsigned      ncav3_dmm_arvalid                         :  1;
     unsigned      ncav3_dmm_arready                         :  1;
     unsigned      ncav3_dmm_bvalid                          :  1;
     unsigned      ncav3_dmm_bready                          :  1;
     unsigned      ncav3_dmm_wvalid                          :  1;
     unsigned      ncav3_dmm_wready                          :  1;
#endif
} ncp_nca_mtp_interface_31_0_r_t;

/*! @struct ncp_nca_mtp_parameters_95_64_r_t
 *  @brief Parameter [95:64] Register
 *  @details This register holds the read-only value of the parameters used to build the MTP.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_parameters_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 30 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param read_byte_swap </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Read data byte swap enable. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param write_byte_swap </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Write data byte swap enable. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_parameters_95_64_r_t
 *
 * Implemented by: 
 *      parameters_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 30;
     unsigned      read_byte_swap                            :  1;
     unsigned      write_byte_swap                           :  1;
#else    /* Little Endian */
     unsigned      write_byte_swap                           :  1;
     unsigned      read_byte_swap                            :  1;
     unsigned      reserved0                                 : 30;
#endif
} ncp_nca_mtp_parameters_95_64_r_t;

/*! @struct ncp_nca_mtp_parameters_63_32_r_t
 *  @brief Parameter [63:32] Register
 *  @details This register holds the read-only value of the parameters used to build the MTP.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_parameters_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param aceif_id_width </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> ACE-Lite interface ID width. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param aceif_addr_width </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> ACE-Lite interface address width. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param aceif_awuser_width </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> ACE-Lite interface awuser width. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param aceif_buser_width </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> ACE-Lite interface buser width. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_parameters_63_32_r_t
 *
 * Implemented by: 
 *      parameters_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      aceif_id_width                            :  8;
     unsigned      aceif_addr_width                          :  8;
     unsigned      aceif_awuser_width                        :  8;
     unsigned      aceif_buser_width                         :  8;
#else    /* Little Endian */
     unsigned      aceif_buser_width                         :  8;
     unsigned      aceif_awuser_width                        :  8;
     unsigned      aceif_addr_width                          :  8;
     unsigned      aceif_id_width                            :  8;
#endif
} ncp_nca_mtp_parameters_63_32_r_t;

/*! @struct ncp_nca_mtp_parameters_31_0_r_t
 *  @brief Parameter [31:0] Register
 *  @details This register holds the read-only value of the parameters used to build the MTP.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_parameters_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param aceif_aruser_width </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> ACE-Lite interface aruser width. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param aceif_ruser_width </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> ACE-Lite interface ruser width. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param aceif_data_width </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> ACE-Lite interface data width. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_num_mqg </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Number (0-32) of memory quota groups. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_parameters_31_0_r_t
 *
 * Implemented by: 
 *      parameters_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      aceif_aruser_width                        :  8;
     unsigned      aceif_ruser_width                         :  8;
     unsigned      aceif_data_width                          :  8;
     unsigned      mtp_num_mqg                               :  8;
#else    /* Little Endian */
     unsigned      mtp_num_mqg                               :  8;
     unsigned      aceif_data_width                          :  8;
     unsigned      aceif_ruser_width                         :  8;
     unsigned      aceif_aruser_width                        :  8;
#endif
} ncp_nca_mtp_parameters_31_0_r_t;

/*! @struct ncp_nca_mtp_control_r_t
 *  @brief Control Register
 *  @details This register holds control fields for the MTP.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_control_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_in_fifo_hwm </td>
 *     <td width="20%" align="center"> 6 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MPCQ input FIFO high water mark. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_in_arb_mode </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MPCQ input FIFO arbitration mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_int_pulse_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> If set, the mqg_int interrupts are pulses instead
 *        of sticky levels.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_int_pulse_width </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Pulse width for mqg_int interrupts when in pulse mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reset_counters </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Reset configuration global counter. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param disable_snarf </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> If set, disables address snarfing. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_in_par_enable </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> NLINK MPCQ input parity check enable. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_in_par_odd </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> NLINK MPCQ input parity mode (0:even, 1:odd). </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_out_par_odd </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> NLINK MPCQ output parity mode (0:even, 1:odd). </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_nonack_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> If set, DMM allocation requests will always wait if
 *        not enough pointers are available irrespective of
 *         the current setting of the per FIFO nack_mode bit
 *        set by a nack from the MCIP or the dmm_nack_mode bit.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_nonack_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> If set, ITP allocation requests will always wait if
 *        not enough pointers are available irrespective of
 *         the current setting of the per FIFO nack_mode bit
 *        set by a nack from the MCIP or the itp_nack_mode bit.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_nonack_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> If set, MPCQ allocation requests will always wait
 *        if not enough pointers are available irrespective
 *        of  the current setting of the per FIFO nack_mode
 *        bit set by a nack from the MCIP or the mpcq_nack_mode
 *        bit.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_nack_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> If set, DMM allocation requests will never wait and
 *        will nack imediately if not enough pointers are 
 *        available irrespective of the current setting of the
 *        per FIFO nack_mode bit set by a nack from  the MCIP.
 *        This bit is overridden by the dmm_nonack_mode bit.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_nack_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> If set, ITP allocation requests will never wait and
 *        will nack imediately if not enough pointers are 
 *        available irrespective of the current setting of the
 *        per FIFO nack_mode bit set by a nack from  the MCIP.
 *        This bit is overridden by the itp_nonack_mode bit.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_nack_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> If set, MPCQ allocation requests will never wait and
 *        will nack imediately if not enough pointers are 
 *        available irrespective of the current setting of the
 *        per FIFO nack_mode bit set by a nack from  the MCIP.
 *        This bit is overridden by the mpcq_nonack_mode bit.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param lifo_mode </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> If set, the prefetch storage is in LIFO mode instead
 *        of FIFO mode.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param stripe_arb_mode </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Stripe service arbitration mode. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_control_r_t
 *
 * Implemented by: 
 *      control
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  5;
     unsigned      mpcq_in_fifo_hwm                          :  6;
     unsigned      mpcq_in_arb_mode                          :  2;
     unsigned      mqg_int_pulse_mode                        :  1;
     unsigned      mqg_int_pulse_width                       :  4;
     unsigned      reset_counters                            :  1;
     unsigned      disable_snarf                             :  1;
     unsigned      mpcq_in_par_enable                        :  1;
     unsigned      mpcq_in_par_odd                           :  1;
     unsigned      mpcq_out_par_odd                          :  1;
     unsigned      dmm_nonack_mode                           :  1;
     unsigned      itp_nonack_mode                           :  1;
     unsigned      mpcq_nonack_mode                          :  1;
     unsigned      dmm_nack_mode                             :  1;
     unsigned      itp_nack_mode                             :  1;
     unsigned      mpcq_nack_mode                            :  1;
     unsigned      lifo_mode                                 :  1;
     unsigned      stripe_arb_mode                           :  2;
#else    /* Little Endian */
     unsigned      stripe_arb_mode                           :  2;
     unsigned      lifo_mode                                 :  1;
     unsigned      mpcq_nack_mode                            :  1;
     unsigned      itp_nack_mode                             :  1;
     unsigned      dmm_nack_mode                             :  1;
     unsigned      mpcq_nonack_mode                          :  1;
     unsigned      itp_nonack_mode                           :  1;
     unsigned      dmm_nonack_mode                           :  1;
     unsigned      mpcq_out_par_odd                          :  1;
     unsigned      mpcq_in_par_odd                           :  1;
     unsigned      mpcq_in_par_enable                        :  1;
     unsigned      disable_snarf                             :  1;
     unsigned      reset_counters                            :  1;
     unsigned      mqg_int_pulse_width                       :  4;
     unsigned      mqg_int_pulse_mode                        :  1;
     unsigned      mpcq_in_arb_mode                          :  2;
     unsigned      mpcq_in_fifo_hwm                          :  6;
     unsigned      reserved0                                 :  5;
#endif
} ncp_nca_mtp_control_r_t;

/*! @struct ncp_nca_mtp_pf_service_select_r_t
 *  @brief Prefetch Service Select Register
 *  @details This register holds control fields for the MTP.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_pf_service_select_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param service_select </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch service selection control. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_pf_service_select_r_t
 *
 * Implemented by: 
 *      pf_service_select
 */
 
typedef struct
{
     unsigned  int            service_select;
} ncp_nca_mtp_pf_service_select_r_t;

/*! @struct ncp_nca_mtp_pf_request_select_r_t
 *  @brief Prefetch Request Select Register
 *  @details This register holds control fields for the MTP.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_pf_request_select_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param request_select </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch request selection control. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_pf_request_select_r_t
 *
 * Implemented by: 
 *      pf_request_select
 */
 
typedef struct
{
     unsigned  int            request_select;
} ncp_nca_mtp_pf_request_select_r_t;

/*! @struct ncp_nca_mtp_status_r_t
 *  @brief Status Register
 *  @details This register holds read-only status for the MTP.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param lu_init_done </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Lookup table init done. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_req_sm_state_enc </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Encoded prefetch request state machine state. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_init_sm_state_enc </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Encoded prefetch init state machine state. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_init_done </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch init done. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wreq_v </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> DMM dealloc lookup pipeline level is valid. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rreq_v </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> DMM alloc lookup pipeline level is valid. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_req_v </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MPCQ lookup pipeline level is valid. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_db_out_ready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> ITP double buffer output ready signal status. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_db_depth </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> ITP double buffer depth. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cow_mcip_resp_cnt </td>
 *     <td width="20%" align="center"> 7 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> COW MCIP reference count increment pending response
 *        count.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mcip_resp_cnt </td>
 *     <td width="20%" align="center"> 7 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MCIP reference count increment pending response count. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_va_v </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MPCQ first virtual address save register is valid. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_db_out_ready </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> OTP double buffer output ready signal status. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_db_depth </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> OTP double buffer depth. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_status_r_t
 *
 * Implemented by: 
 *      status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  1;
     unsigned      lu_init_done                              :  1;
     unsigned      pf_req_sm_state_enc                       :  2;
     unsigned      pf_init_sm_state_enc                      :  3;
     unsigned      pf_init_done                              :  1;
     unsigned      dmm_wreq_v                                :  1;
     unsigned      dmm_rreq_v                                :  1;
     unsigned      mpcq_req_v                                :  1;
     unsigned      itp_db_out_ready                          :  1;
     unsigned      itp_db_depth                              :  2;
     unsigned      cow_mcip_resp_cnt                         :  7;
     unsigned      mcip_resp_cnt                             :  7;
     unsigned      mpcq_va_v                                 :  1;
     unsigned      otp_db_out_ready                          :  1;
     unsigned      otp_db_depth                              :  2;
#else    /* Little Endian */
     unsigned      otp_db_depth                              :  2;
     unsigned      otp_db_out_ready                          :  1;
     unsigned      mpcq_va_v                                 :  1;
     unsigned      mcip_resp_cnt                             :  7;
     unsigned      cow_mcip_resp_cnt                         :  7;
     unsigned      itp_db_depth                              :  2;
     unsigned      itp_db_out_ready                          :  1;
     unsigned      mpcq_req_v                                :  1;
     unsigned      dmm_rreq_v                                :  1;
     unsigned      dmm_wreq_v                                :  1;
     unsigned      pf_init_done                              :  1;
     unsigned      pf_init_sm_state_enc                      :  3;
     unsigned      pf_req_sm_state_enc                       :  2;
     unsigned      lu_init_done                              :  1;
     unsigned      reserved0                                 :  1;
#endif
} ncp_nca_mtp_status_r_t;

/*! @struct ncp_nca_mtp_fifo_v_31_0_r_t
 *  @brief Prefetch FIFO Valid Register 0
 *  @details This register holds the read-only valid status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_fifo_v_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p7_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer for pool7/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p7_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer for pool7/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p7_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer for pool7/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p7_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer for pool7/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p6_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer for pool6/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p6_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer for pool6/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p6_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer for pool6/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p6_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer for pool6/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p5_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer for pool5/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p5_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer for pool5/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p5_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer for pool5/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p5_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer for pool5/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p4_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer for pool4/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p4_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer for pool4/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p4_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer for pool4/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p4_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer for pool4/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p3_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer for pool3/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p3_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer for pool3/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p3_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer for pool3/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p3_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer for pool3/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p2_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer for pool2/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p2_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer for pool2/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p2_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer for pool2/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p2_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer for pool2/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p1_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer for pool1/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p1_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer for pool1/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p1_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer for pool1/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p1_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer for pool1/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p0_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer for pool0/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p0_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer for pool0/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p0_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer for pool0/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p0_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer for pool0/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_v_31_0_r_t
 *
 * Implemented by: 
 *      pf_fifo_v_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_fifo_v_p7_s3                           :  1;
     unsigned      pf_fifo_v_p7_s2                           :  1;
     unsigned      pf_fifo_v_p7_s1                           :  1;
     unsigned      pf_fifo_v_p7_s0                           :  1;
     unsigned      pf_fifo_v_p6_s3                           :  1;
     unsigned      pf_fifo_v_p6_s2                           :  1;
     unsigned      pf_fifo_v_p6_s1                           :  1;
     unsigned      pf_fifo_v_p6_s0                           :  1;
     unsigned      pf_fifo_v_p5_s3                           :  1;
     unsigned      pf_fifo_v_p5_s2                           :  1;
     unsigned      pf_fifo_v_p5_s1                           :  1;
     unsigned      pf_fifo_v_p5_s0                           :  1;
     unsigned      pf_fifo_v_p4_s3                           :  1;
     unsigned      pf_fifo_v_p4_s2                           :  1;
     unsigned      pf_fifo_v_p4_s1                           :  1;
     unsigned      pf_fifo_v_p4_s0                           :  1;
     unsigned      pf_fifo_v_p3_s3                           :  1;
     unsigned      pf_fifo_v_p3_s2                           :  1;
     unsigned      pf_fifo_v_p3_s1                           :  1;
     unsigned      pf_fifo_v_p3_s0                           :  1;
     unsigned      pf_fifo_v_p2_s3                           :  1;
     unsigned      pf_fifo_v_p2_s2                           :  1;
     unsigned      pf_fifo_v_p2_s1                           :  1;
     unsigned      pf_fifo_v_p2_s0                           :  1;
     unsigned      pf_fifo_v_p1_s3                           :  1;
     unsigned      pf_fifo_v_p1_s2                           :  1;
     unsigned      pf_fifo_v_p1_s1                           :  1;
     unsigned      pf_fifo_v_p1_s0                           :  1;
     unsigned      pf_fifo_v_p0_s3                           :  1;
     unsigned      pf_fifo_v_p0_s2                           :  1;
     unsigned      pf_fifo_v_p0_s1                           :  1;
     unsigned      pf_fifo_v_p0_s0                           :  1;
#else    /* Little Endian */
     unsigned      pf_fifo_v_p0_s0                           :  1;
     unsigned      pf_fifo_v_p0_s1                           :  1;
     unsigned      pf_fifo_v_p0_s2                           :  1;
     unsigned      pf_fifo_v_p0_s3                           :  1;
     unsigned      pf_fifo_v_p1_s0                           :  1;
     unsigned      pf_fifo_v_p1_s1                           :  1;
     unsigned      pf_fifo_v_p1_s2                           :  1;
     unsigned      pf_fifo_v_p1_s3                           :  1;
     unsigned      pf_fifo_v_p2_s0                           :  1;
     unsigned      pf_fifo_v_p2_s1                           :  1;
     unsigned      pf_fifo_v_p2_s2                           :  1;
     unsigned      pf_fifo_v_p2_s3                           :  1;
     unsigned      pf_fifo_v_p3_s0                           :  1;
     unsigned      pf_fifo_v_p3_s1                           :  1;
     unsigned      pf_fifo_v_p3_s2                           :  1;
     unsigned      pf_fifo_v_p3_s3                           :  1;
     unsigned      pf_fifo_v_p4_s0                           :  1;
     unsigned      pf_fifo_v_p4_s1                           :  1;
     unsigned      pf_fifo_v_p4_s2                           :  1;
     unsigned      pf_fifo_v_p4_s3                           :  1;
     unsigned      pf_fifo_v_p5_s0                           :  1;
     unsigned      pf_fifo_v_p5_s1                           :  1;
     unsigned      pf_fifo_v_p5_s2                           :  1;
     unsigned      pf_fifo_v_p5_s3                           :  1;
     unsigned      pf_fifo_v_p6_s0                           :  1;
     unsigned      pf_fifo_v_p6_s1                           :  1;
     unsigned      pf_fifo_v_p6_s2                           :  1;
     unsigned      pf_fifo_v_p6_s3                           :  1;
     unsigned      pf_fifo_v_p7_s0                           :  1;
     unsigned      pf_fifo_v_p7_s1                           :  1;
     unsigned      pf_fifo_v_p7_s2                           :  1;
     unsigned      pf_fifo_v_p7_s3                           :  1;
#endif
} ncp_nca_mtp_fifo_v_31_0_r_t;

/*! @struct ncp_nca_mtp_fifo_v_63_32_r_t
 *  @brief Prefetch FIFO Valid Register 1
 *  @details This register holds the read-only valid status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_fifo_v_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p15_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer for pool15/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p15_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer for pool15/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p15_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer for pool15/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p15_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer for pool15/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p14_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer for pool14/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p14_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer for pool14/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p14_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer for pool14/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p14_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer for pool14/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p13_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer for pool13/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p13_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer for pool13/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p13_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer for pool13/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p13_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer for pool13/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p12_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer for pool12/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p12_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer for pool12/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p12_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer for pool12/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p12_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer for pool12/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p11_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer for pool11/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p11_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer for pool11/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p11_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer for pool11/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p11_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer for pool11/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p10_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer for pool10/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p10_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer for pool10/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p10_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer for pool10/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p10_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer for pool10/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p9_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer for pool9/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p9_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer for pool9/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p9_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer for pool9/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p9_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer for pool9/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p8_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer for pool8/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p8_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer for pool8/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p8_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer for pool8/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p8_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer for pool8/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_v_63_32_r_t
 *
 * Implemented by: 
 *      pf_fifo_v_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_fifo_v_p15_s3                          :  1;
     unsigned      pf_fifo_v_p15_s2                          :  1;
     unsigned      pf_fifo_v_p15_s1                          :  1;
     unsigned      pf_fifo_v_p15_s0                          :  1;
     unsigned      pf_fifo_v_p14_s3                          :  1;
     unsigned      pf_fifo_v_p14_s2                          :  1;
     unsigned      pf_fifo_v_p14_s1                          :  1;
     unsigned      pf_fifo_v_p14_s0                          :  1;
     unsigned      pf_fifo_v_p13_s3                          :  1;
     unsigned      pf_fifo_v_p13_s2                          :  1;
     unsigned      pf_fifo_v_p13_s1                          :  1;
     unsigned      pf_fifo_v_p13_s0                          :  1;
     unsigned      pf_fifo_v_p12_s3                          :  1;
     unsigned      pf_fifo_v_p12_s2                          :  1;
     unsigned      pf_fifo_v_p12_s1                          :  1;
     unsigned      pf_fifo_v_p12_s0                          :  1;
     unsigned      pf_fifo_v_p11_s3                          :  1;
     unsigned      pf_fifo_v_p11_s2                          :  1;
     unsigned      pf_fifo_v_p11_s1                          :  1;
     unsigned      pf_fifo_v_p11_s0                          :  1;
     unsigned      pf_fifo_v_p10_s3                          :  1;
     unsigned      pf_fifo_v_p10_s2                          :  1;
     unsigned      pf_fifo_v_p10_s1                          :  1;
     unsigned      pf_fifo_v_p10_s0                          :  1;
     unsigned      pf_fifo_v_p9_s3                           :  1;
     unsigned      pf_fifo_v_p9_s2                           :  1;
     unsigned      pf_fifo_v_p9_s1                           :  1;
     unsigned      pf_fifo_v_p9_s0                           :  1;
     unsigned      pf_fifo_v_p8_s3                           :  1;
     unsigned      pf_fifo_v_p8_s2                           :  1;
     unsigned      pf_fifo_v_p8_s1                           :  1;
     unsigned      pf_fifo_v_p8_s0                           :  1;
#else    /* Little Endian */
     unsigned      pf_fifo_v_p8_s0                           :  1;
     unsigned      pf_fifo_v_p8_s1                           :  1;
     unsigned      pf_fifo_v_p8_s2                           :  1;
     unsigned      pf_fifo_v_p8_s3                           :  1;
     unsigned      pf_fifo_v_p9_s0                           :  1;
     unsigned      pf_fifo_v_p9_s1                           :  1;
     unsigned      pf_fifo_v_p9_s2                           :  1;
     unsigned      pf_fifo_v_p9_s3                           :  1;
     unsigned      pf_fifo_v_p10_s0                          :  1;
     unsigned      pf_fifo_v_p10_s1                          :  1;
     unsigned      pf_fifo_v_p10_s2                          :  1;
     unsigned      pf_fifo_v_p10_s3                          :  1;
     unsigned      pf_fifo_v_p11_s0                          :  1;
     unsigned      pf_fifo_v_p11_s1                          :  1;
     unsigned      pf_fifo_v_p11_s2                          :  1;
     unsigned      pf_fifo_v_p11_s3                          :  1;
     unsigned      pf_fifo_v_p12_s0                          :  1;
     unsigned      pf_fifo_v_p12_s1                          :  1;
     unsigned      pf_fifo_v_p12_s2                          :  1;
     unsigned      pf_fifo_v_p12_s3                          :  1;
     unsigned      pf_fifo_v_p13_s0                          :  1;
     unsigned      pf_fifo_v_p13_s1                          :  1;
     unsigned      pf_fifo_v_p13_s2                          :  1;
     unsigned      pf_fifo_v_p13_s3                          :  1;
     unsigned      pf_fifo_v_p14_s0                          :  1;
     unsigned      pf_fifo_v_p14_s1                          :  1;
     unsigned      pf_fifo_v_p14_s2                          :  1;
     unsigned      pf_fifo_v_p14_s3                          :  1;
     unsigned      pf_fifo_v_p15_s0                          :  1;
     unsigned      pf_fifo_v_p15_s1                          :  1;
     unsigned      pf_fifo_v_p15_s2                          :  1;
     unsigned      pf_fifo_v_p15_s3                          :  1;
#endif
} ncp_nca_mtp_fifo_v_63_32_r_t;

/*! @struct ncp_nca_mtp_fifo_v_95_64_r_t
 *  @brief Prefetch FIFO Valid Register 2
 *  @details This register holds the read-only valid status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_fifo_v_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p23_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer for pool23/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p23_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer for pool23/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p23_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer for pool23/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p23_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer for pool23/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p22_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer for pool22/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p22_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer for pool22/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p22_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer for pool22/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p22_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer for pool22/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p21_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer for pool21/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p21_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer for pool21/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p21_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer for pool21/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p21_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer for pool21/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p20_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer for pool20/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p20_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer for pool20/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p20_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer for pool20/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p20_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer for pool20/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p19_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer for pool19/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p19_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer for pool19/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p19_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer for pool19/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p19_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer for pool19/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p18_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer for pool18/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p18_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer for pool18/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p18_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer for pool18/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p18_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer for pool18/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p17_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer for pool17/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p17_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer for pool17/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p17_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer for pool17/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p17_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer for pool17/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p16_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer for pool16/size3 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p16_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer for pool16/size2 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p16_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer for pool16/size1 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_fifo_v_p16_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer for pool16/size0 is configured with
 *        valid #locs>0.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_v_95_64_r_t
 *
 * Implemented by: 
 *      pf_fifo_v_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_fifo_v_p23_s3                          :  1;
     unsigned      pf_fifo_v_p23_s2                          :  1;
     unsigned      pf_fifo_v_p23_s1                          :  1;
     unsigned      pf_fifo_v_p23_s0                          :  1;
     unsigned      pf_fifo_v_p22_s3                          :  1;
     unsigned      pf_fifo_v_p22_s2                          :  1;
     unsigned      pf_fifo_v_p22_s1                          :  1;
     unsigned      pf_fifo_v_p22_s0                          :  1;
     unsigned      pf_fifo_v_p21_s3                          :  1;
     unsigned      pf_fifo_v_p21_s2                          :  1;
     unsigned      pf_fifo_v_p21_s1                          :  1;
     unsigned      pf_fifo_v_p21_s0                          :  1;
     unsigned      pf_fifo_v_p20_s3                          :  1;
     unsigned      pf_fifo_v_p20_s2                          :  1;
     unsigned      pf_fifo_v_p20_s1                          :  1;
     unsigned      pf_fifo_v_p20_s0                          :  1;
     unsigned      pf_fifo_v_p19_s3                          :  1;
     unsigned      pf_fifo_v_p19_s2                          :  1;
     unsigned      pf_fifo_v_p19_s1                          :  1;
     unsigned      pf_fifo_v_p19_s0                          :  1;
     unsigned      pf_fifo_v_p18_s3                          :  1;
     unsigned      pf_fifo_v_p18_s2                          :  1;
     unsigned      pf_fifo_v_p18_s1                          :  1;
     unsigned      pf_fifo_v_p18_s0                          :  1;
     unsigned      pf_fifo_v_p17_s3                          :  1;
     unsigned      pf_fifo_v_p17_s2                          :  1;
     unsigned      pf_fifo_v_p17_s1                          :  1;
     unsigned      pf_fifo_v_p17_s0                          :  1;
     unsigned      pf_fifo_v_p16_s3                          :  1;
     unsigned      pf_fifo_v_p16_s2                          :  1;
     unsigned      pf_fifo_v_p16_s1                          :  1;
     unsigned      pf_fifo_v_p16_s0                          :  1;
#else    /* Little Endian */
     unsigned      pf_fifo_v_p16_s0                          :  1;
     unsigned      pf_fifo_v_p16_s1                          :  1;
     unsigned      pf_fifo_v_p16_s2                          :  1;
     unsigned      pf_fifo_v_p16_s3                          :  1;
     unsigned      pf_fifo_v_p17_s0                          :  1;
     unsigned      pf_fifo_v_p17_s1                          :  1;
     unsigned      pf_fifo_v_p17_s2                          :  1;
     unsigned      pf_fifo_v_p17_s3                          :  1;
     unsigned      pf_fifo_v_p18_s0                          :  1;
     unsigned      pf_fifo_v_p18_s1                          :  1;
     unsigned      pf_fifo_v_p18_s2                          :  1;
     unsigned      pf_fifo_v_p18_s3                          :  1;
     unsigned      pf_fifo_v_p19_s0                          :  1;
     unsigned      pf_fifo_v_p19_s1                          :  1;
     unsigned      pf_fifo_v_p19_s2                          :  1;
     unsigned      pf_fifo_v_p19_s3                          :  1;
     unsigned      pf_fifo_v_p20_s0                          :  1;
     unsigned      pf_fifo_v_p20_s1                          :  1;
     unsigned      pf_fifo_v_p20_s2                          :  1;
     unsigned      pf_fifo_v_p20_s3                          :  1;
     unsigned      pf_fifo_v_p21_s0                          :  1;
     unsigned      pf_fifo_v_p21_s1                          :  1;
     unsigned      pf_fifo_v_p21_s2                          :  1;
     unsigned      pf_fifo_v_p21_s3                          :  1;
     unsigned      pf_fifo_v_p22_s0                          :  1;
     unsigned      pf_fifo_v_p22_s1                          :  1;
     unsigned      pf_fifo_v_p22_s2                          :  1;
     unsigned      pf_fifo_v_p22_s3                          :  1;
     unsigned      pf_fifo_v_p23_s0                          :  1;
     unsigned      pf_fifo_v_p23_s1                          :  1;
     unsigned      pf_fifo_v_p23_s2                          :  1;
     unsigned      pf_fifo_v_p23_s3                          :  1;
#endif
} ncp_nca_mtp_fifo_v_95_64_r_t;

/*! @struct ncp_nca_mtp_nack_mode_31_0_r_t
 *  @brief Prefetch FIFO Valid Register 0
 *  @details This register holds the read-only nack_mode status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_nack_mode_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p7_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p7_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p7_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p7_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p6_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p6_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p6_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p6_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p5_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p5_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p5_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p5_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p4_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p4_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p4_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p4_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p3_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p3_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p3_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p3_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p2_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p2_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p2_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p2_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p1_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p1_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p1_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p1_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p0_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p0_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p0_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p0_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size0 is in NACK mode. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_nack_mode_31_0_r_t
 *
 * Implemented by: 
 *      pf_nack_mode_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_nack_mode_p7_s3                        :  1;
     unsigned      pf_nack_mode_p7_s2                        :  1;
     unsigned      pf_nack_mode_p7_s1                        :  1;
     unsigned      pf_nack_mode_p7_s0                        :  1;
     unsigned      pf_nack_mode_p6_s3                        :  1;
     unsigned      pf_nack_mode_p6_s2                        :  1;
     unsigned      pf_nack_mode_p6_s1                        :  1;
     unsigned      pf_nack_mode_p6_s0                        :  1;
     unsigned      pf_nack_mode_p5_s3                        :  1;
     unsigned      pf_nack_mode_p5_s2                        :  1;
     unsigned      pf_nack_mode_p5_s1                        :  1;
     unsigned      pf_nack_mode_p5_s0                        :  1;
     unsigned      pf_nack_mode_p4_s3                        :  1;
     unsigned      pf_nack_mode_p4_s2                        :  1;
     unsigned      pf_nack_mode_p4_s1                        :  1;
     unsigned      pf_nack_mode_p4_s0                        :  1;
     unsigned      pf_nack_mode_p3_s3                        :  1;
     unsigned      pf_nack_mode_p3_s2                        :  1;
     unsigned      pf_nack_mode_p3_s1                        :  1;
     unsigned      pf_nack_mode_p3_s0                        :  1;
     unsigned      pf_nack_mode_p2_s3                        :  1;
     unsigned      pf_nack_mode_p2_s2                        :  1;
     unsigned      pf_nack_mode_p2_s1                        :  1;
     unsigned      pf_nack_mode_p2_s0                        :  1;
     unsigned      pf_nack_mode_p1_s3                        :  1;
     unsigned      pf_nack_mode_p1_s2                        :  1;
     unsigned      pf_nack_mode_p1_s1                        :  1;
     unsigned      pf_nack_mode_p1_s0                        :  1;
     unsigned      pf_nack_mode_p0_s3                        :  1;
     unsigned      pf_nack_mode_p0_s2                        :  1;
     unsigned      pf_nack_mode_p0_s1                        :  1;
     unsigned      pf_nack_mode_p0_s0                        :  1;
#else    /* Little Endian */
     unsigned      pf_nack_mode_p0_s0                        :  1;
     unsigned      pf_nack_mode_p0_s1                        :  1;
     unsigned      pf_nack_mode_p0_s2                        :  1;
     unsigned      pf_nack_mode_p0_s3                        :  1;
     unsigned      pf_nack_mode_p1_s0                        :  1;
     unsigned      pf_nack_mode_p1_s1                        :  1;
     unsigned      pf_nack_mode_p1_s2                        :  1;
     unsigned      pf_nack_mode_p1_s3                        :  1;
     unsigned      pf_nack_mode_p2_s0                        :  1;
     unsigned      pf_nack_mode_p2_s1                        :  1;
     unsigned      pf_nack_mode_p2_s2                        :  1;
     unsigned      pf_nack_mode_p2_s3                        :  1;
     unsigned      pf_nack_mode_p3_s0                        :  1;
     unsigned      pf_nack_mode_p3_s1                        :  1;
     unsigned      pf_nack_mode_p3_s2                        :  1;
     unsigned      pf_nack_mode_p3_s3                        :  1;
     unsigned      pf_nack_mode_p4_s0                        :  1;
     unsigned      pf_nack_mode_p4_s1                        :  1;
     unsigned      pf_nack_mode_p4_s2                        :  1;
     unsigned      pf_nack_mode_p4_s3                        :  1;
     unsigned      pf_nack_mode_p5_s0                        :  1;
     unsigned      pf_nack_mode_p5_s1                        :  1;
     unsigned      pf_nack_mode_p5_s2                        :  1;
     unsigned      pf_nack_mode_p5_s3                        :  1;
     unsigned      pf_nack_mode_p6_s0                        :  1;
     unsigned      pf_nack_mode_p6_s1                        :  1;
     unsigned      pf_nack_mode_p6_s2                        :  1;
     unsigned      pf_nack_mode_p6_s3                        :  1;
     unsigned      pf_nack_mode_p7_s0                        :  1;
     unsigned      pf_nack_mode_p7_s1                        :  1;
     unsigned      pf_nack_mode_p7_s2                        :  1;
     unsigned      pf_nack_mode_p7_s3                        :  1;
#endif
} ncp_nca_mtp_nack_mode_31_0_r_t;

/*! @struct ncp_nca_mtp_nack_mode_63_32_r_t
 *  @brief Prefetch FIFO Valid Register 1
 *  @details This register holds the read-only nack_mode status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_nack_mode_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p15_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p15_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p15_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p15_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p14_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p14_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p14_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p14_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p13_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p13_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p13_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p13_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p12_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p12_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p12_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p12_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p11_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p11_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p11_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p11_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p10_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p10_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p10_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p10_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p9_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p9_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p9_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p9_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p8_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p8_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p8_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p8_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size0 is in NACK mode. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_nack_mode_63_32_r_t
 *
 * Implemented by: 
 *      pf_nack_mode_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_nack_mode_p15_s3                       :  1;
     unsigned      pf_nack_mode_p15_s2                       :  1;
     unsigned      pf_nack_mode_p15_s1                       :  1;
     unsigned      pf_nack_mode_p15_s0                       :  1;
     unsigned      pf_nack_mode_p14_s3                       :  1;
     unsigned      pf_nack_mode_p14_s2                       :  1;
     unsigned      pf_nack_mode_p14_s1                       :  1;
     unsigned      pf_nack_mode_p14_s0                       :  1;
     unsigned      pf_nack_mode_p13_s3                       :  1;
     unsigned      pf_nack_mode_p13_s2                       :  1;
     unsigned      pf_nack_mode_p13_s1                       :  1;
     unsigned      pf_nack_mode_p13_s0                       :  1;
     unsigned      pf_nack_mode_p12_s3                       :  1;
     unsigned      pf_nack_mode_p12_s2                       :  1;
     unsigned      pf_nack_mode_p12_s1                       :  1;
     unsigned      pf_nack_mode_p12_s0                       :  1;
     unsigned      pf_nack_mode_p11_s3                       :  1;
     unsigned      pf_nack_mode_p11_s2                       :  1;
     unsigned      pf_nack_mode_p11_s1                       :  1;
     unsigned      pf_nack_mode_p11_s0                       :  1;
     unsigned      pf_nack_mode_p10_s3                       :  1;
     unsigned      pf_nack_mode_p10_s2                       :  1;
     unsigned      pf_nack_mode_p10_s1                       :  1;
     unsigned      pf_nack_mode_p10_s0                       :  1;
     unsigned      pf_nack_mode_p9_s3                        :  1;
     unsigned      pf_nack_mode_p9_s2                        :  1;
     unsigned      pf_nack_mode_p9_s1                        :  1;
     unsigned      pf_nack_mode_p9_s0                        :  1;
     unsigned      pf_nack_mode_p8_s3                        :  1;
     unsigned      pf_nack_mode_p8_s2                        :  1;
     unsigned      pf_nack_mode_p8_s1                        :  1;
     unsigned      pf_nack_mode_p8_s0                        :  1;
#else    /* Little Endian */
     unsigned      pf_nack_mode_p8_s0                        :  1;
     unsigned      pf_nack_mode_p8_s1                        :  1;
     unsigned      pf_nack_mode_p8_s2                        :  1;
     unsigned      pf_nack_mode_p8_s3                        :  1;
     unsigned      pf_nack_mode_p9_s0                        :  1;
     unsigned      pf_nack_mode_p9_s1                        :  1;
     unsigned      pf_nack_mode_p9_s2                        :  1;
     unsigned      pf_nack_mode_p9_s3                        :  1;
     unsigned      pf_nack_mode_p10_s0                       :  1;
     unsigned      pf_nack_mode_p10_s1                       :  1;
     unsigned      pf_nack_mode_p10_s2                       :  1;
     unsigned      pf_nack_mode_p10_s3                       :  1;
     unsigned      pf_nack_mode_p11_s0                       :  1;
     unsigned      pf_nack_mode_p11_s1                       :  1;
     unsigned      pf_nack_mode_p11_s2                       :  1;
     unsigned      pf_nack_mode_p11_s3                       :  1;
     unsigned      pf_nack_mode_p12_s0                       :  1;
     unsigned      pf_nack_mode_p12_s1                       :  1;
     unsigned      pf_nack_mode_p12_s2                       :  1;
     unsigned      pf_nack_mode_p12_s3                       :  1;
     unsigned      pf_nack_mode_p13_s0                       :  1;
     unsigned      pf_nack_mode_p13_s1                       :  1;
     unsigned      pf_nack_mode_p13_s2                       :  1;
     unsigned      pf_nack_mode_p13_s3                       :  1;
     unsigned      pf_nack_mode_p14_s0                       :  1;
     unsigned      pf_nack_mode_p14_s1                       :  1;
     unsigned      pf_nack_mode_p14_s2                       :  1;
     unsigned      pf_nack_mode_p14_s3                       :  1;
     unsigned      pf_nack_mode_p15_s0                       :  1;
     unsigned      pf_nack_mode_p15_s1                       :  1;
     unsigned      pf_nack_mode_p15_s2                       :  1;
     unsigned      pf_nack_mode_p15_s3                       :  1;
#endif
} ncp_nca_mtp_nack_mode_63_32_r_t;

/*! @struct ncp_nca_mtp_nack_mode_95_64_r_t
 *  @brief Prefetch FIFO Valid Register 2
 *  @details This register holds the read-only nack_mode status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_nack_mode_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p23_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p23_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p23_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p23_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p22_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p22_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p22_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p22_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p21_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p21_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p21_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p21_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p20_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p20_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p20_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p20_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p19_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p19_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p19_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p19_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p18_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p18_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p18_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p18_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p17_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p17_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p17_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p17_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size0 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p16_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size3 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p16_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size2 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p16_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size1 is in NACK mode. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_nack_mode_p16_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size0 is in NACK mode. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_nack_mode_95_64_r_t
 *
 * Implemented by: 
 *      pf_nack_mode_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_nack_mode_p23_s3                       :  1;
     unsigned      pf_nack_mode_p23_s2                       :  1;
     unsigned      pf_nack_mode_p23_s1                       :  1;
     unsigned      pf_nack_mode_p23_s0                       :  1;
     unsigned      pf_nack_mode_p22_s3                       :  1;
     unsigned      pf_nack_mode_p22_s2                       :  1;
     unsigned      pf_nack_mode_p22_s1                       :  1;
     unsigned      pf_nack_mode_p22_s0                       :  1;
     unsigned      pf_nack_mode_p21_s3                       :  1;
     unsigned      pf_nack_mode_p21_s2                       :  1;
     unsigned      pf_nack_mode_p21_s1                       :  1;
     unsigned      pf_nack_mode_p21_s0                       :  1;
     unsigned      pf_nack_mode_p20_s3                       :  1;
     unsigned      pf_nack_mode_p20_s2                       :  1;
     unsigned      pf_nack_mode_p20_s1                       :  1;
     unsigned      pf_nack_mode_p20_s0                       :  1;
     unsigned      pf_nack_mode_p19_s3                       :  1;
     unsigned      pf_nack_mode_p19_s2                       :  1;
     unsigned      pf_nack_mode_p19_s1                       :  1;
     unsigned      pf_nack_mode_p19_s0                       :  1;
     unsigned      pf_nack_mode_p18_s3                       :  1;
     unsigned      pf_nack_mode_p18_s2                       :  1;
     unsigned      pf_nack_mode_p18_s1                       :  1;
     unsigned      pf_nack_mode_p18_s0                       :  1;
     unsigned      pf_nack_mode_p17_s3                       :  1;
     unsigned      pf_nack_mode_p17_s2                       :  1;
     unsigned      pf_nack_mode_p17_s1                       :  1;
     unsigned      pf_nack_mode_p17_s0                       :  1;
     unsigned      pf_nack_mode_p16_s3                       :  1;
     unsigned      pf_nack_mode_p16_s2                       :  1;
     unsigned      pf_nack_mode_p16_s1                       :  1;
     unsigned      pf_nack_mode_p16_s0                       :  1;
#else    /* Little Endian */
     unsigned      pf_nack_mode_p16_s0                       :  1;
     unsigned      pf_nack_mode_p16_s1                       :  1;
     unsigned      pf_nack_mode_p16_s2                       :  1;
     unsigned      pf_nack_mode_p16_s3                       :  1;
     unsigned      pf_nack_mode_p17_s0                       :  1;
     unsigned      pf_nack_mode_p17_s1                       :  1;
     unsigned      pf_nack_mode_p17_s2                       :  1;
     unsigned      pf_nack_mode_p17_s3                       :  1;
     unsigned      pf_nack_mode_p18_s0                       :  1;
     unsigned      pf_nack_mode_p18_s1                       :  1;
     unsigned      pf_nack_mode_p18_s2                       :  1;
     unsigned      pf_nack_mode_p18_s3                       :  1;
     unsigned      pf_nack_mode_p19_s0                       :  1;
     unsigned      pf_nack_mode_p19_s1                       :  1;
     unsigned      pf_nack_mode_p19_s2                       :  1;
     unsigned      pf_nack_mode_p19_s3                       :  1;
     unsigned      pf_nack_mode_p20_s0                       :  1;
     unsigned      pf_nack_mode_p20_s1                       :  1;
     unsigned      pf_nack_mode_p20_s2                       :  1;
     unsigned      pf_nack_mode_p20_s3                       :  1;
     unsigned      pf_nack_mode_p21_s0                       :  1;
     unsigned      pf_nack_mode_p21_s1                       :  1;
     unsigned      pf_nack_mode_p21_s2                       :  1;
     unsigned      pf_nack_mode_p21_s3                       :  1;
     unsigned      pf_nack_mode_p22_s0                       :  1;
     unsigned      pf_nack_mode_p22_s1                       :  1;
     unsigned      pf_nack_mode_p22_s2                       :  1;
     unsigned      pf_nack_mode_p22_s3                       :  1;
     unsigned      pf_nack_mode_p23_s0                       :  1;
     unsigned      pf_nack_mode_p23_s1                       :  1;
     unsigned      pf_nack_mode_p23_s2                       :  1;
     unsigned      pf_nack_mode_p23_s3                       :  1;
#endif
} ncp_nca_mtp_nack_mode_95_64_r_t;

/*! @struct ncp_nca_mtp_needs_service_31_0_r_t
 *  @brief Prefetch FIFO Valid Register 0
 *  @details This register holds the read-only needs_service status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_needs_service_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p7_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p7_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p7_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p7_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p6_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p6_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p6_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p6_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p5_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p5_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p5_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p5_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p4_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p4_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p4_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p4_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p3_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p3_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p3_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p3_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p2_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p2_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p2_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p2_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p1_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p1_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p1_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p1_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p0_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p0_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p0_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p0_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size0 needs service. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_needs_service_31_0_r_t
 *
 * Implemented by: 
 *      pf_needs_service_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_needs_service_p7_s3                    :  1;
     unsigned      pf_needs_service_p7_s2                    :  1;
     unsigned      pf_needs_service_p7_s1                    :  1;
     unsigned      pf_needs_service_p7_s0                    :  1;
     unsigned      pf_needs_service_p6_s3                    :  1;
     unsigned      pf_needs_service_p6_s2                    :  1;
     unsigned      pf_needs_service_p6_s1                    :  1;
     unsigned      pf_needs_service_p6_s0                    :  1;
     unsigned      pf_needs_service_p5_s3                    :  1;
     unsigned      pf_needs_service_p5_s2                    :  1;
     unsigned      pf_needs_service_p5_s1                    :  1;
     unsigned      pf_needs_service_p5_s0                    :  1;
     unsigned      pf_needs_service_p4_s3                    :  1;
     unsigned      pf_needs_service_p4_s2                    :  1;
     unsigned      pf_needs_service_p4_s1                    :  1;
     unsigned      pf_needs_service_p4_s0                    :  1;
     unsigned      pf_needs_service_p3_s3                    :  1;
     unsigned      pf_needs_service_p3_s2                    :  1;
     unsigned      pf_needs_service_p3_s1                    :  1;
     unsigned      pf_needs_service_p3_s0                    :  1;
     unsigned      pf_needs_service_p2_s3                    :  1;
     unsigned      pf_needs_service_p2_s2                    :  1;
     unsigned      pf_needs_service_p2_s1                    :  1;
     unsigned      pf_needs_service_p2_s0                    :  1;
     unsigned      pf_needs_service_p1_s3                    :  1;
     unsigned      pf_needs_service_p1_s2                    :  1;
     unsigned      pf_needs_service_p1_s1                    :  1;
     unsigned      pf_needs_service_p1_s0                    :  1;
     unsigned      pf_needs_service_p0_s3                    :  1;
     unsigned      pf_needs_service_p0_s2                    :  1;
     unsigned      pf_needs_service_p0_s1                    :  1;
     unsigned      pf_needs_service_p0_s0                    :  1;
#else    /* Little Endian */
     unsigned      pf_needs_service_p0_s0                    :  1;
     unsigned      pf_needs_service_p0_s1                    :  1;
     unsigned      pf_needs_service_p0_s2                    :  1;
     unsigned      pf_needs_service_p0_s3                    :  1;
     unsigned      pf_needs_service_p1_s0                    :  1;
     unsigned      pf_needs_service_p1_s1                    :  1;
     unsigned      pf_needs_service_p1_s2                    :  1;
     unsigned      pf_needs_service_p1_s3                    :  1;
     unsigned      pf_needs_service_p2_s0                    :  1;
     unsigned      pf_needs_service_p2_s1                    :  1;
     unsigned      pf_needs_service_p2_s2                    :  1;
     unsigned      pf_needs_service_p2_s3                    :  1;
     unsigned      pf_needs_service_p3_s0                    :  1;
     unsigned      pf_needs_service_p3_s1                    :  1;
     unsigned      pf_needs_service_p3_s2                    :  1;
     unsigned      pf_needs_service_p3_s3                    :  1;
     unsigned      pf_needs_service_p4_s0                    :  1;
     unsigned      pf_needs_service_p4_s1                    :  1;
     unsigned      pf_needs_service_p4_s2                    :  1;
     unsigned      pf_needs_service_p4_s3                    :  1;
     unsigned      pf_needs_service_p5_s0                    :  1;
     unsigned      pf_needs_service_p5_s1                    :  1;
     unsigned      pf_needs_service_p5_s2                    :  1;
     unsigned      pf_needs_service_p5_s3                    :  1;
     unsigned      pf_needs_service_p6_s0                    :  1;
     unsigned      pf_needs_service_p6_s1                    :  1;
     unsigned      pf_needs_service_p6_s2                    :  1;
     unsigned      pf_needs_service_p6_s3                    :  1;
     unsigned      pf_needs_service_p7_s0                    :  1;
     unsigned      pf_needs_service_p7_s1                    :  1;
     unsigned      pf_needs_service_p7_s2                    :  1;
     unsigned      pf_needs_service_p7_s3                    :  1;
#endif
} ncp_nca_mtp_needs_service_31_0_r_t;

/*! @struct ncp_nca_mtp_needs_service_63_32_r_t
 *  @brief Prefetch FIFO Valid Register 1
 *  @details This register holds the read-only needs_service status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_needs_service_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p15_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p15_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p15_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p15_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p14_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p14_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p14_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p14_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p13_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p13_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p13_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p13_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p12_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p12_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p12_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p12_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p11_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p11_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p11_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p11_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p10_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p10_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p10_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p10_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p9_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p9_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p9_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p9_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p8_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p8_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p8_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p8_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size0 needs service. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_needs_service_63_32_r_t
 *
 * Implemented by: 
 *      pf_needs_service_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_needs_service_p15_s3                   :  1;
     unsigned      pf_needs_service_p15_s2                   :  1;
     unsigned      pf_needs_service_p15_s1                   :  1;
     unsigned      pf_needs_service_p15_s0                   :  1;
     unsigned      pf_needs_service_p14_s3                   :  1;
     unsigned      pf_needs_service_p14_s2                   :  1;
     unsigned      pf_needs_service_p14_s1                   :  1;
     unsigned      pf_needs_service_p14_s0                   :  1;
     unsigned      pf_needs_service_p13_s3                   :  1;
     unsigned      pf_needs_service_p13_s2                   :  1;
     unsigned      pf_needs_service_p13_s1                   :  1;
     unsigned      pf_needs_service_p13_s0                   :  1;
     unsigned      pf_needs_service_p12_s3                   :  1;
     unsigned      pf_needs_service_p12_s2                   :  1;
     unsigned      pf_needs_service_p12_s1                   :  1;
     unsigned      pf_needs_service_p12_s0                   :  1;
     unsigned      pf_needs_service_p11_s3                   :  1;
     unsigned      pf_needs_service_p11_s2                   :  1;
     unsigned      pf_needs_service_p11_s1                   :  1;
     unsigned      pf_needs_service_p11_s0                   :  1;
     unsigned      pf_needs_service_p10_s3                   :  1;
     unsigned      pf_needs_service_p10_s2                   :  1;
     unsigned      pf_needs_service_p10_s1                   :  1;
     unsigned      pf_needs_service_p10_s0                   :  1;
     unsigned      pf_needs_service_p9_s3                    :  1;
     unsigned      pf_needs_service_p9_s2                    :  1;
     unsigned      pf_needs_service_p9_s1                    :  1;
     unsigned      pf_needs_service_p9_s0                    :  1;
     unsigned      pf_needs_service_p8_s3                    :  1;
     unsigned      pf_needs_service_p8_s2                    :  1;
     unsigned      pf_needs_service_p8_s1                    :  1;
     unsigned      pf_needs_service_p8_s0                    :  1;
#else    /* Little Endian */
     unsigned      pf_needs_service_p8_s0                    :  1;
     unsigned      pf_needs_service_p8_s1                    :  1;
     unsigned      pf_needs_service_p8_s2                    :  1;
     unsigned      pf_needs_service_p8_s3                    :  1;
     unsigned      pf_needs_service_p9_s0                    :  1;
     unsigned      pf_needs_service_p9_s1                    :  1;
     unsigned      pf_needs_service_p9_s2                    :  1;
     unsigned      pf_needs_service_p9_s3                    :  1;
     unsigned      pf_needs_service_p10_s0                   :  1;
     unsigned      pf_needs_service_p10_s1                   :  1;
     unsigned      pf_needs_service_p10_s2                   :  1;
     unsigned      pf_needs_service_p10_s3                   :  1;
     unsigned      pf_needs_service_p11_s0                   :  1;
     unsigned      pf_needs_service_p11_s1                   :  1;
     unsigned      pf_needs_service_p11_s2                   :  1;
     unsigned      pf_needs_service_p11_s3                   :  1;
     unsigned      pf_needs_service_p12_s0                   :  1;
     unsigned      pf_needs_service_p12_s1                   :  1;
     unsigned      pf_needs_service_p12_s2                   :  1;
     unsigned      pf_needs_service_p12_s3                   :  1;
     unsigned      pf_needs_service_p13_s0                   :  1;
     unsigned      pf_needs_service_p13_s1                   :  1;
     unsigned      pf_needs_service_p13_s2                   :  1;
     unsigned      pf_needs_service_p13_s3                   :  1;
     unsigned      pf_needs_service_p14_s0                   :  1;
     unsigned      pf_needs_service_p14_s1                   :  1;
     unsigned      pf_needs_service_p14_s2                   :  1;
     unsigned      pf_needs_service_p14_s3                   :  1;
     unsigned      pf_needs_service_p15_s0                   :  1;
     unsigned      pf_needs_service_p15_s1                   :  1;
     unsigned      pf_needs_service_p15_s2                   :  1;
     unsigned      pf_needs_service_p15_s3                   :  1;
#endif
} ncp_nca_mtp_needs_service_63_32_r_t;

/*! @struct ncp_nca_mtp_needs_service_95_64_r_t
 *  @brief Prefetch FIFO Valid Register 2
 *  @details This register holds the read-only needs_service status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_needs_service_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p23_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p23_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p23_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p23_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p22_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p22_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p22_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p22_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p21_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p21_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p21_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p21_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p20_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p20_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p20_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p20_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p19_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p19_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p19_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p19_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p18_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p18_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p18_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p18_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p17_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p17_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p17_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p17_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size0 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p16_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size3 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p16_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size2 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p16_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size1 needs service. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_needs_service_p16_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size0 needs service. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_needs_service_95_64_r_t
 *
 * Implemented by: 
 *      pf_needs_service_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_needs_service_p23_s3                   :  1;
     unsigned      pf_needs_service_p23_s2                   :  1;
     unsigned      pf_needs_service_p23_s1                   :  1;
     unsigned      pf_needs_service_p23_s0                   :  1;
     unsigned      pf_needs_service_p22_s3                   :  1;
     unsigned      pf_needs_service_p22_s2                   :  1;
     unsigned      pf_needs_service_p22_s1                   :  1;
     unsigned      pf_needs_service_p22_s0                   :  1;
     unsigned      pf_needs_service_p21_s3                   :  1;
     unsigned      pf_needs_service_p21_s2                   :  1;
     unsigned      pf_needs_service_p21_s1                   :  1;
     unsigned      pf_needs_service_p21_s0                   :  1;
     unsigned      pf_needs_service_p20_s3                   :  1;
     unsigned      pf_needs_service_p20_s2                   :  1;
     unsigned      pf_needs_service_p20_s1                   :  1;
     unsigned      pf_needs_service_p20_s0                   :  1;
     unsigned      pf_needs_service_p19_s3                   :  1;
     unsigned      pf_needs_service_p19_s2                   :  1;
     unsigned      pf_needs_service_p19_s1                   :  1;
     unsigned      pf_needs_service_p19_s0                   :  1;
     unsigned      pf_needs_service_p18_s3                   :  1;
     unsigned      pf_needs_service_p18_s2                   :  1;
     unsigned      pf_needs_service_p18_s1                   :  1;
     unsigned      pf_needs_service_p18_s0                   :  1;
     unsigned      pf_needs_service_p17_s3                   :  1;
     unsigned      pf_needs_service_p17_s2                   :  1;
     unsigned      pf_needs_service_p17_s1                   :  1;
     unsigned      pf_needs_service_p17_s0                   :  1;
     unsigned      pf_needs_service_p16_s3                   :  1;
     unsigned      pf_needs_service_p16_s2                   :  1;
     unsigned      pf_needs_service_p16_s1                   :  1;
     unsigned      pf_needs_service_p16_s0                   :  1;
#else    /* Little Endian */
     unsigned      pf_needs_service_p16_s0                   :  1;
     unsigned      pf_needs_service_p16_s1                   :  1;
     unsigned      pf_needs_service_p16_s2                   :  1;
     unsigned      pf_needs_service_p16_s3                   :  1;
     unsigned      pf_needs_service_p17_s0                   :  1;
     unsigned      pf_needs_service_p17_s1                   :  1;
     unsigned      pf_needs_service_p17_s2                   :  1;
     unsigned      pf_needs_service_p17_s3                   :  1;
     unsigned      pf_needs_service_p18_s0                   :  1;
     unsigned      pf_needs_service_p18_s1                   :  1;
     unsigned      pf_needs_service_p18_s2                   :  1;
     unsigned      pf_needs_service_p18_s3                   :  1;
     unsigned      pf_needs_service_p19_s0                   :  1;
     unsigned      pf_needs_service_p19_s1                   :  1;
     unsigned      pf_needs_service_p19_s2                   :  1;
     unsigned      pf_needs_service_p19_s3                   :  1;
     unsigned      pf_needs_service_p20_s0                   :  1;
     unsigned      pf_needs_service_p20_s1                   :  1;
     unsigned      pf_needs_service_p20_s2                   :  1;
     unsigned      pf_needs_service_p20_s3                   :  1;
     unsigned      pf_needs_service_p21_s0                   :  1;
     unsigned      pf_needs_service_p21_s1                   :  1;
     unsigned      pf_needs_service_p21_s2                   :  1;
     unsigned      pf_needs_service_p21_s3                   :  1;
     unsigned      pf_needs_service_p22_s0                   :  1;
     unsigned      pf_needs_service_p22_s1                   :  1;
     unsigned      pf_needs_service_p22_s2                   :  1;
     unsigned      pf_needs_service_p22_s3                   :  1;
     unsigned      pf_needs_service_p23_s0                   :  1;
     unsigned      pf_needs_service_p23_s1                   :  1;
     unsigned      pf_needs_service_p23_s2                   :  1;
     unsigned      pf_needs_service_p23_s3                   :  1;
#endif
} ncp_nca_mtp_needs_service_95_64_r_t;

/*! @struct ncp_nca_mtp_servicing_31_0_r_t
 *  @brief Prefetch FIFO Valid Register 0
 *  @details This register holds the read-only servicing status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_servicing_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p7_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p7_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p7_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p7_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool7/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p6_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p6_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p6_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p6_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool6/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p5_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p5_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p5_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p5_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool5/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p4_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p4_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p4_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p4_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool4/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p3_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p3_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p3_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p3_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool3/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p2_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p2_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p2_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p2_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool2/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p1_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p1_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p1_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p1_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool1/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p0_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p0_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p0_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p0_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool0/size0 is being serviced. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_servicing_31_0_r_t
 *
 * Implemented by: 
 *      pf_servicing_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_servicing_p7_s3                        :  1;
     unsigned      pf_servicing_p7_s2                        :  1;
     unsigned      pf_servicing_p7_s1                        :  1;
     unsigned      pf_servicing_p7_s0                        :  1;
     unsigned      pf_servicing_p6_s3                        :  1;
     unsigned      pf_servicing_p6_s2                        :  1;
     unsigned      pf_servicing_p6_s1                        :  1;
     unsigned      pf_servicing_p6_s0                        :  1;
     unsigned      pf_servicing_p5_s3                        :  1;
     unsigned      pf_servicing_p5_s2                        :  1;
     unsigned      pf_servicing_p5_s1                        :  1;
     unsigned      pf_servicing_p5_s0                        :  1;
     unsigned      pf_servicing_p4_s3                        :  1;
     unsigned      pf_servicing_p4_s2                        :  1;
     unsigned      pf_servicing_p4_s1                        :  1;
     unsigned      pf_servicing_p4_s0                        :  1;
     unsigned      pf_servicing_p3_s3                        :  1;
     unsigned      pf_servicing_p3_s2                        :  1;
     unsigned      pf_servicing_p3_s1                        :  1;
     unsigned      pf_servicing_p3_s0                        :  1;
     unsigned      pf_servicing_p2_s3                        :  1;
     unsigned      pf_servicing_p2_s2                        :  1;
     unsigned      pf_servicing_p2_s1                        :  1;
     unsigned      pf_servicing_p2_s0                        :  1;
     unsigned      pf_servicing_p1_s3                        :  1;
     unsigned      pf_servicing_p1_s2                        :  1;
     unsigned      pf_servicing_p1_s1                        :  1;
     unsigned      pf_servicing_p1_s0                        :  1;
     unsigned      pf_servicing_p0_s3                        :  1;
     unsigned      pf_servicing_p0_s2                        :  1;
     unsigned      pf_servicing_p0_s1                        :  1;
     unsigned      pf_servicing_p0_s0                        :  1;
#else    /* Little Endian */
     unsigned      pf_servicing_p0_s0                        :  1;
     unsigned      pf_servicing_p0_s1                        :  1;
     unsigned      pf_servicing_p0_s2                        :  1;
     unsigned      pf_servicing_p0_s3                        :  1;
     unsigned      pf_servicing_p1_s0                        :  1;
     unsigned      pf_servicing_p1_s1                        :  1;
     unsigned      pf_servicing_p1_s2                        :  1;
     unsigned      pf_servicing_p1_s3                        :  1;
     unsigned      pf_servicing_p2_s0                        :  1;
     unsigned      pf_servicing_p2_s1                        :  1;
     unsigned      pf_servicing_p2_s2                        :  1;
     unsigned      pf_servicing_p2_s3                        :  1;
     unsigned      pf_servicing_p3_s0                        :  1;
     unsigned      pf_servicing_p3_s1                        :  1;
     unsigned      pf_servicing_p3_s2                        :  1;
     unsigned      pf_servicing_p3_s3                        :  1;
     unsigned      pf_servicing_p4_s0                        :  1;
     unsigned      pf_servicing_p4_s1                        :  1;
     unsigned      pf_servicing_p4_s2                        :  1;
     unsigned      pf_servicing_p4_s3                        :  1;
     unsigned      pf_servicing_p5_s0                        :  1;
     unsigned      pf_servicing_p5_s1                        :  1;
     unsigned      pf_servicing_p5_s2                        :  1;
     unsigned      pf_servicing_p5_s3                        :  1;
     unsigned      pf_servicing_p6_s0                        :  1;
     unsigned      pf_servicing_p6_s1                        :  1;
     unsigned      pf_servicing_p6_s2                        :  1;
     unsigned      pf_servicing_p6_s3                        :  1;
     unsigned      pf_servicing_p7_s0                        :  1;
     unsigned      pf_servicing_p7_s1                        :  1;
     unsigned      pf_servicing_p7_s2                        :  1;
     unsigned      pf_servicing_p7_s3                        :  1;
#endif
} ncp_nca_mtp_servicing_31_0_r_t;

/*! @struct ncp_nca_mtp_servicing_63_32_r_t
 *  @brief Prefetch FIFO Valid Register 1
 *  @details This register holds the read-only servicing status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_servicing_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p15_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p15_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p15_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p15_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool15/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p14_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p14_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p14_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p14_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool14/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p13_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p13_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p13_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p13_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool13/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p12_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p12_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p12_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p12_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool12/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p11_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p11_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p11_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p11_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool11/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p10_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p10_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p10_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p10_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool10/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p9_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p9_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p9_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p9_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool9/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p8_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p8_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p8_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p8_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool8/size0 is being serviced. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_servicing_63_32_r_t
 *
 * Implemented by: 
 *      pf_servicing_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_servicing_p15_s3                       :  1;
     unsigned      pf_servicing_p15_s2                       :  1;
     unsigned      pf_servicing_p15_s1                       :  1;
     unsigned      pf_servicing_p15_s0                       :  1;
     unsigned      pf_servicing_p14_s3                       :  1;
     unsigned      pf_servicing_p14_s2                       :  1;
     unsigned      pf_servicing_p14_s1                       :  1;
     unsigned      pf_servicing_p14_s0                       :  1;
     unsigned      pf_servicing_p13_s3                       :  1;
     unsigned      pf_servicing_p13_s2                       :  1;
     unsigned      pf_servicing_p13_s1                       :  1;
     unsigned      pf_servicing_p13_s0                       :  1;
     unsigned      pf_servicing_p12_s3                       :  1;
     unsigned      pf_servicing_p12_s2                       :  1;
     unsigned      pf_servicing_p12_s1                       :  1;
     unsigned      pf_servicing_p12_s0                       :  1;
     unsigned      pf_servicing_p11_s3                       :  1;
     unsigned      pf_servicing_p11_s2                       :  1;
     unsigned      pf_servicing_p11_s1                       :  1;
     unsigned      pf_servicing_p11_s0                       :  1;
     unsigned      pf_servicing_p10_s3                       :  1;
     unsigned      pf_servicing_p10_s2                       :  1;
     unsigned      pf_servicing_p10_s1                       :  1;
     unsigned      pf_servicing_p10_s0                       :  1;
     unsigned      pf_servicing_p9_s3                        :  1;
     unsigned      pf_servicing_p9_s2                        :  1;
     unsigned      pf_servicing_p9_s1                        :  1;
     unsigned      pf_servicing_p9_s0                        :  1;
     unsigned      pf_servicing_p8_s3                        :  1;
     unsigned      pf_servicing_p8_s2                        :  1;
     unsigned      pf_servicing_p8_s1                        :  1;
     unsigned      pf_servicing_p8_s0                        :  1;
#else    /* Little Endian */
     unsigned      pf_servicing_p8_s0                        :  1;
     unsigned      pf_servicing_p8_s1                        :  1;
     unsigned      pf_servicing_p8_s2                        :  1;
     unsigned      pf_servicing_p8_s3                        :  1;
     unsigned      pf_servicing_p9_s0                        :  1;
     unsigned      pf_servicing_p9_s1                        :  1;
     unsigned      pf_servicing_p9_s2                        :  1;
     unsigned      pf_servicing_p9_s3                        :  1;
     unsigned      pf_servicing_p10_s0                       :  1;
     unsigned      pf_servicing_p10_s1                       :  1;
     unsigned      pf_servicing_p10_s2                       :  1;
     unsigned      pf_servicing_p10_s3                       :  1;
     unsigned      pf_servicing_p11_s0                       :  1;
     unsigned      pf_servicing_p11_s1                       :  1;
     unsigned      pf_servicing_p11_s2                       :  1;
     unsigned      pf_servicing_p11_s3                       :  1;
     unsigned      pf_servicing_p12_s0                       :  1;
     unsigned      pf_servicing_p12_s1                       :  1;
     unsigned      pf_servicing_p12_s2                       :  1;
     unsigned      pf_servicing_p12_s3                       :  1;
     unsigned      pf_servicing_p13_s0                       :  1;
     unsigned      pf_servicing_p13_s1                       :  1;
     unsigned      pf_servicing_p13_s2                       :  1;
     unsigned      pf_servicing_p13_s3                       :  1;
     unsigned      pf_servicing_p14_s0                       :  1;
     unsigned      pf_servicing_p14_s1                       :  1;
     unsigned      pf_servicing_p14_s2                       :  1;
     unsigned      pf_servicing_p14_s3                       :  1;
     unsigned      pf_servicing_p15_s0                       :  1;
     unsigned      pf_servicing_p15_s1                       :  1;
     unsigned      pf_servicing_p15_s2                       :  1;
     unsigned      pf_servicing_p15_s3                       :  1;
#endif
} ncp_nca_mtp_servicing_63_32_r_t;

/*! @struct ncp_nca_mtp_servicing_95_64_r_t
 *  @brief Prefetch FIFO Valid Register 2
 *  @details This register holds the read-only servicing status for the MTP Prefetch Buffer FIFOs.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_servicing_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p23_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p23_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p23_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p23_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool23/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p22_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p22_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p22_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p22_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool22/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p21_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p21_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p21_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p21_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool21/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p20_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p20_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p20_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p20_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool20/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p19_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p19_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p19_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p19_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool19/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p18_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p18_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p18_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p18_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool18/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p17_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p17_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p17_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p17_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool17/size0 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p16_s3 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size3 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p16_s2 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size2 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p16_s1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size1 is being serviced. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_servicing_p16_s0 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Prefetch buffer FIFO for pool16/size0 is being serviced. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_servicing_95_64_r_t
 *
 * Implemented by: 
 *      pf_servicing_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      pf_servicing_p23_s3                       :  1;
     unsigned      pf_servicing_p23_s2                       :  1;
     unsigned      pf_servicing_p23_s1                       :  1;
     unsigned      pf_servicing_p23_s0                       :  1;
     unsigned      pf_servicing_p22_s3                       :  1;
     unsigned      pf_servicing_p22_s2                       :  1;
     unsigned      pf_servicing_p22_s1                       :  1;
     unsigned      pf_servicing_p22_s0                       :  1;
     unsigned      pf_servicing_p21_s3                       :  1;
     unsigned      pf_servicing_p21_s2                       :  1;
     unsigned      pf_servicing_p21_s1                       :  1;
     unsigned      pf_servicing_p21_s0                       :  1;
     unsigned      pf_servicing_p20_s3                       :  1;
     unsigned      pf_servicing_p20_s2                       :  1;
     unsigned      pf_servicing_p20_s1                       :  1;
     unsigned      pf_servicing_p20_s0                       :  1;
     unsigned      pf_servicing_p19_s3                       :  1;
     unsigned      pf_servicing_p19_s2                       :  1;
     unsigned      pf_servicing_p19_s1                       :  1;
     unsigned      pf_servicing_p19_s0                       :  1;
     unsigned      pf_servicing_p18_s3                       :  1;
     unsigned      pf_servicing_p18_s2                       :  1;
     unsigned      pf_servicing_p18_s1                       :  1;
     unsigned      pf_servicing_p18_s0                       :  1;
     unsigned      pf_servicing_p17_s3                       :  1;
     unsigned      pf_servicing_p17_s2                       :  1;
     unsigned      pf_servicing_p17_s1                       :  1;
     unsigned      pf_servicing_p17_s0                       :  1;
     unsigned      pf_servicing_p16_s3                       :  1;
     unsigned      pf_servicing_p16_s2                       :  1;
     unsigned      pf_servicing_p16_s1                       :  1;
     unsigned      pf_servicing_p16_s0                       :  1;
#else    /* Little Endian */
     unsigned      pf_servicing_p16_s0                       :  1;
     unsigned      pf_servicing_p16_s1                       :  1;
     unsigned      pf_servicing_p16_s2                       :  1;
     unsigned      pf_servicing_p16_s3                       :  1;
     unsigned      pf_servicing_p17_s0                       :  1;
     unsigned      pf_servicing_p17_s1                       :  1;
     unsigned      pf_servicing_p17_s2                       :  1;
     unsigned      pf_servicing_p17_s3                       :  1;
     unsigned      pf_servicing_p18_s0                       :  1;
     unsigned      pf_servicing_p18_s1                       :  1;
     unsigned      pf_servicing_p18_s2                       :  1;
     unsigned      pf_servicing_p18_s3                       :  1;
     unsigned      pf_servicing_p19_s0                       :  1;
     unsigned      pf_servicing_p19_s1                       :  1;
     unsigned      pf_servicing_p19_s2                       :  1;
     unsigned      pf_servicing_p19_s3                       :  1;
     unsigned      pf_servicing_p20_s0                       :  1;
     unsigned      pf_servicing_p20_s1                       :  1;
     unsigned      pf_servicing_p20_s2                       :  1;
     unsigned      pf_servicing_p20_s3                       :  1;
     unsigned      pf_servicing_p21_s0                       :  1;
     unsigned      pf_servicing_p21_s1                       :  1;
     unsigned      pf_servicing_p21_s2                       :  1;
     unsigned      pf_servicing_p21_s3                       :  1;
     unsigned      pf_servicing_p22_s0                       :  1;
     unsigned      pf_servicing_p22_s1                       :  1;
     unsigned      pf_servicing_p22_s2                       :  1;
     unsigned      pf_servicing_p22_s3                       :  1;
     unsigned      pf_servicing_p23_s0                       :  1;
     unsigned      pf_servicing_p23_s1                       :  1;
     unsigned      pf_servicing_p23_s2                       :  1;
     unsigned      pf_servicing_p23_s3                       :  1;
#endif
} ncp_nca_mtp_servicing_95_64_r_t;

/*! @struct ncp_nca_mtp_misc_smon_comp_mask_r_t
 *  @brief Miscellaneous SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting pointer snarf or MCIP events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_misc_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 9 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param snarf_smon_comp_otp </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> If set, only OTP snarf requests are counted by SMON. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param snarf_smon_comp_dmm </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> If set, only DMM snarf requests are counted by SMON. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param snarf_smon_comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the pool
 *        field for snarf requests is compared by SMON.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param snarf_smon_comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the size
 *        field for snarf requests is compared by SMON.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mmba_smon_comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the pool
 *        field for MCIP allocation requests or responses is
 *        compared by SMON.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mmba_smon_comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the size
 *        field for MCIP allocation requests or responses is
 *        compared by SMON.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mmbr_smon_comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the pool
 *        field for MCIP pointer requests or responses is compared
 *        by SMON.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mmbr_smon_comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the size
 *        field for MCIP pointer requests or responses is compared
 *        by SMON.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_misc_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      misc_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  9;
     unsigned      snarf_smon_comp_otp                       :  1;
     unsigned      snarf_smon_comp_dmm                       :  1;
     unsigned      snarf_smon_comp_pool                      :  5;
     unsigned      snarf_smon_comp_size                      :  2;
     unsigned      mmba_smon_comp_pool                       :  5;
     unsigned      mmba_smon_comp_size                       :  2;
     unsigned      mmbr_smon_comp_pool                       :  5;
     unsigned      mmbr_smon_comp_size                       :  2;
#else    /* Little Endian */
     unsigned      mmbr_smon_comp_size                       :  2;
     unsigned      mmbr_smon_comp_pool                       :  5;
     unsigned      mmba_smon_comp_size                       :  2;
     unsigned      mmba_smon_comp_pool                       :  5;
     unsigned      snarf_smon_comp_size                      :  2;
     unsigned      snarf_smon_comp_pool                      :  5;
     unsigned      snarf_smon_comp_dmm                       :  1;
     unsigned      snarf_smon_comp_otp                       :  1;
     unsigned      reserved0                                 :  9;
#endif
} ncp_nca_mtp_misc_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_inject_nack_prob_r_t
 *  @brief inject NACK probability register
 *  @details This register holds 8b values used to randomlly inject NACK on the MTP allocate requestor interfaces.  A value of 0x00 gives 0% chance of injecting a NACK,  A value of 0x80 gives a 50% chance of injecting a nack. A value of 0xff gives a 99.5% chance of injecting a nack
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_inject_nack_prob_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param inject_nack_prob_req3 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> 8b probablity to inject NACK on MTP requestor 3 </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param inject_nack_prob_req2 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> 8b probablity to inject NACK on MTP requestor 2 </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param inject_nack_prob_req1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> 8b probablity to inject NACK on MTP requestor 1 </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param inject_nack_prob_req0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 8b probablity to inject NACK on MTP requestor 0 </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_inject_nack_prob_r_t
 *
 * Implemented by: 
 *      inject_nack_prob
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      inject_nack_prob_req3                     :  8;
     unsigned      inject_nack_prob_req2                     :  8;
     unsigned      inject_nack_prob_req1                     :  8;
     unsigned      inject_nack_prob_req0                     :  8;
#else    /* Little Endian */
     unsigned      inject_nack_prob_req0                     :  8;
     unsigned      inject_nack_prob_req1                     :  8;
     unsigned      inject_nack_prob_req2                     :  8;
     unsigned      inject_nack_prob_req3                     :  8;
#endif
} ncp_nca_mtp_inject_nack_prob_r_t;

/*! @struct ncp_nca_mtp_dmm_rreq_smon_comp_mask_r_t
 *  @brief DMM Allocation Request SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting DMM allocation request events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_dmm_rreq_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pgit </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        PGIT is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pool </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        pool is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        size is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_id </td>
 *     <td width="20%" align="center"> 16 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        ID is compared.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_dmm_rreq_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      dmm_rreq_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      comp_pgit                                 :  8;
     unsigned      reserved0                                 :  3;
     unsigned      comp_pool                                 :  3;
     unsigned      comp_size                                 :  2;
     unsigned      comp_id                                   : 16;
#else    /* Little Endian */
     unsigned      comp_id                                   : 16;
     unsigned      comp_size                                 :  2;
     unsigned      comp_pool                                 :  3;
     unsigned      reserved0                                 :  3;
     unsigned      comp_pgit                                 :  8;
#endif
} ncp_nca_mtp_dmm_rreq_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_dmm_wreq_smon_comp_mask_r_t
 *  @brief DMM Deallocation Request SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting DMM deallocation request events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_dmm_wreq_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pgit </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        PGIT is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pool </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        pool is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        size is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_id </td>
 *     <td width="20%" align="center"> 16 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        ID is compared.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_dmm_wreq_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      dmm_wreq_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      comp_pgit                                 :  8;
     unsigned      reserved0                                 :  3;
     unsigned      comp_pool                                 :  3;
     unsigned      comp_size                                 :  2;
     unsigned      comp_id                                   : 16;
#else    /* Little Endian */
     unsigned      comp_id                                   : 16;
     unsigned      comp_size                                 :  2;
     unsigned      comp_pool                                 :  3;
     unsigned      reserved0                                 :  3;
     unsigned      comp_pgit                                 :  8;
#endif
} ncp_nca_mtp_dmm_wreq_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_otp_req_smon_comp_mask_r_t
 *  @brief OTP Request SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting OTP request events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_otp_req_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_needs_resp </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        needs response is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_dst_cmd </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        destination command is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_dst_mqg </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        destination MQG is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_src_cmd </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        source command is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_src_mqg </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        source MQG is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved2 </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_cmd </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        command is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_inc_occ </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        inc_occurred is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        pool is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        size is compared.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_otp_req_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      otp_req_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  5;
     unsigned      comp_needs_resp                           :  1;
     unsigned      comp_dst_cmd                              :  1;
     unsigned      comp_dst_mqg                              :  5;
     unsigned      reserved1                                 :  2;
     unsigned      comp_src_cmd                              :  1;
     unsigned      comp_src_mqg                              :  5;
     unsigned      reserved2                                 :  2;
     unsigned      comp_cmd                                  :  2;
     unsigned      comp_inc_occ                              :  1;
     unsigned      comp_pool                                 :  5;
     unsigned      comp_size                                 :  2;
#else    /* Little Endian */
     unsigned      comp_size                                 :  2;
     unsigned      comp_pool                                 :  5;
     unsigned      comp_inc_occ                              :  1;
     unsigned      comp_cmd                                  :  2;
     unsigned      reserved2                                 :  2;
     unsigned      comp_src_mqg                              :  5;
     unsigned      comp_src_cmd                              :  1;
     unsigned      reserved1                                 :  2;
     unsigned      comp_dst_mqg                              :  5;
     unsigned      comp_dst_cmd                              :  1;
     unsigned      comp_needs_resp                           :  1;
     unsigned      reserved0                                 :  5;
#endif
} ncp_nca_mtp_otp_req_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_itp_tx_smon_comp_mask_r_t
 *  @brief ITP Transmit SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting ITP transmit events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_itp_tx_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 18 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_cmd </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        command is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_src_mqg </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        MQG is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        pool is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        size is compared.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_itp_tx_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      itp_tx_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 18;
     unsigned      comp_cmd                                  :  1;
     unsigned      comp_src_mqg                              :  5;
     unsigned      reserved1                                 :  1;
     unsigned      comp_pool                                 :  5;
     unsigned      comp_size                                 :  2;
#else    /* Little Endian */
     unsigned      comp_size                                 :  2;
     unsigned      comp_pool                                 :  5;
     unsigned      reserved1                                 :  1;
     unsigned      comp_src_mqg                              :  5;
     unsigned      comp_cmd                                  :  1;
     unsigned      reserved0                                 : 18;
#endif
} ncp_nca_mtp_itp_tx_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_itp_req_smon_comp_mask_r_t
 *  @brief ITP Allocation Request SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting ITP allocation request events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_itp_req_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 9 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        pool is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        size is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_id </td>
 *     <td width="20%" align="center"> 16 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        ID is compared.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_itp_req_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      itp_req_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  9;
     unsigned      comp_pool                                 :  5;
     unsigned      comp_size                                 :  2;
     unsigned      comp_id                                   : 16;
#else    /* Little Endian */
     unsigned      comp_id                                   : 16;
     unsigned      comp_size                                 :  2;
     unsigned      comp_pool                                 :  5;
     unsigned      reserved0                                 :  9;
#endif
} ncp_nca_mtp_itp_req_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_mpcq_res_smon_comp_mask_r_t
 *  @brief MPCQ Allocation Response SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting MPCQ allocation response events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mpcq_res_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_dst_id </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the response
 *        destination ID is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pgit </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the response
 *        PGIT is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_nack </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the response
 *        nack is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the response
 *        pool is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the response
 *        size is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pqn </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the response
 *        PQN is compared.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mpcq_res_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      mpcq_res_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  4;
     unsigned      comp_dst_id                               :  8;
     unsigned      comp_pgit                                 :  4;
     unsigned      comp_nack                                 :  1;
     unsigned      comp_pool                                 :  5;
     unsigned      comp_size                                 :  2;
     unsigned      comp_pqn                                  :  8;
#else    /* Little Endian */
     unsigned      comp_pqn                                  :  8;
     unsigned      comp_size                                 :  2;
     unsigned      comp_pool                                 :  5;
     unsigned      comp_nack                                 :  1;
     unsigned      comp_pgit                                 :  4;
     unsigned      comp_dst_id                               :  8;
     unsigned      reserved0                                 :  4;
#endif
} ncp_nca_mtp_mpcq_res_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_mpcq_req_smon_comp_mask_r_t
 *  @brief MPCQ Allocation Response SMON Compare Mask Register
 *  @details This register holds the mask ANDed with the signals before the SMON compare when counting MPCQ allocation response events.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mpcq_req_smon_comp_mask_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_src_id </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        source ID is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pgit </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        PGIT is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pool </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        pool is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_size </td>
 *     <td width="20%" align="center"> 2 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        size is compared.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param comp_pqn </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> If a bit is set, the corresponding bit of the request
 *        PQN is compared.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mpcq_req_smon_comp_mask_r_t
 *
 * Implemented by: 
 *      mpcq_req_smon_comp_mask
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 :  4;
     unsigned      comp_src_id                               :  8;
     unsigned      comp_pgit                                 :  4;
     unsigned      reserved1                                 :  1;
     unsigned      comp_pool                                 :  5;
     unsigned      comp_size                                 :  2;
     unsigned      comp_pqn                                  :  8;
#else    /* Little Endian */
     unsigned      comp_pqn                                  :  8;
     unsigned      comp_size                                 :  2;
     unsigned      comp_pool                                 :  5;
     unsigned      reserved1                                 :  1;
     unsigned      comp_pgit                                 :  4;
     unsigned      comp_src_id                               :  8;
     unsigned      reserved0                                 :  4;
#endif
} ncp_nca_mtp_mpcq_req_smon_comp_mask_r_t;

/*! @struct ncp_nca_mtp_mqg0_gtt_status_r_t
 *  @brief Memory Quota Group 0 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg0_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 0 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg0_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg0_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg0_pool7_64kb                           :  1;
     unsigned      mqg0_pool7_16kb                           :  1;
     unsigned      mqg0_pool7_2kb                            :  1;
     unsigned      mqg0_pool7_256b                           :  1;
     unsigned      mqg0_pool6_64kb                           :  1;
     unsigned      mqg0_pool6_16kb                           :  1;
     unsigned      mqg0_pool6_2kb                            :  1;
     unsigned      mqg0_pool6_256b                           :  1;
     unsigned      mqg0_pool5_64kb                           :  1;
     unsigned      mqg0_pool5_16kb                           :  1;
     unsigned      mqg0_pool5_2kb                            :  1;
     unsigned      mqg0_pool5_256b                           :  1;
     unsigned      mqg0_pool4_64kb                           :  1;
     unsigned      mqg0_pool4_16kb                           :  1;
     unsigned      mqg0_pool4_2kb                            :  1;
     unsigned      mqg0_pool4_256b                           :  1;
     unsigned      mqg0_pool3_64kb                           :  1;
     unsigned      mqg0_pool3_16kb                           :  1;
     unsigned      mqg0_pool3_2kb                            :  1;
     unsigned      mqg0_pool3_256b                           :  1;
     unsigned      mqg0_pool2_64kb                           :  1;
     unsigned      mqg0_pool2_16kb                           :  1;
     unsigned      mqg0_pool2_2kb                            :  1;
     unsigned      mqg0_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg0_pool2_256b                           :  1;
     unsigned      mqg0_pool2_2kb                            :  1;
     unsigned      mqg0_pool2_16kb                           :  1;
     unsigned      mqg0_pool2_64kb                           :  1;
     unsigned      mqg0_pool3_256b                           :  1;
     unsigned      mqg0_pool3_2kb                            :  1;
     unsigned      mqg0_pool3_16kb                           :  1;
     unsigned      mqg0_pool3_64kb                           :  1;
     unsigned      mqg0_pool4_256b                           :  1;
     unsigned      mqg0_pool4_2kb                            :  1;
     unsigned      mqg0_pool4_16kb                           :  1;
     unsigned      mqg0_pool4_64kb                           :  1;
     unsigned      mqg0_pool5_256b                           :  1;
     unsigned      mqg0_pool5_2kb                            :  1;
     unsigned      mqg0_pool5_16kb                           :  1;
     unsigned      mqg0_pool5_64kb                           :  1;
     unsigned      mqg0_pool6_256b                           :  1;
     unsigned      mqg0_pool6_2kb                            :  1;
     unsigned      mqg0_pool6_16kb                           :  1;
     unsigned      mqg0_pool6_64kb                           :  1;
     unsigned      mqg0_pool7_256b                           :  1;
     unsigned      mqg0_pool7_2kb                            :  1;
     unsigned      mqg0_pool7_16kb                           :  1;
     unsigned      mqg0_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg0_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg1_gtt_status_r_t
 *  @brief Memory Quota Group 1 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg1_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 1 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg1_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg1_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg1_pool7_64kb                           :  1;
     unsigned      mqg1_pool7_16kb                           :  1;
     unsigned      mqg1_pool7_2kb                            :  1;
     unsigned      mqg1_pool7_256b                           :  1;
     unsigned      mqg1_pool6_64kb                           :  1;
     unsigned      mqg1_pool6_16kb                           :  1;
     unsigned      mqg1_pool6_2kb                            :  1;
     unsigned      mqg1_pool6_256b                           :  1;
     unsigned      mqg1_pool5_64kb                           :  1;
     unsigned      mqg1_pool5_16kb                           :  1;
     unsigned      mqg1_pool5_2kb                            :  1;
     unsigned      mqg1_pool5_256b                           :  1;
     unsigned      mqg1_pool4_64kb                           :  1;
     unsigned      mqg1_pool4_16kb                           :  1;
     unsigned      mqg1_pool4_2kb                            :  1;
     unsigned      mqg1_pool4_256b                           :  1;
     unsigned      mqg1_pool3_64kb                           :  1;
     unsigned      mqg1_pool3_16kb                           :  1;
     unsigned      mqg1_pool3_2kb                            :  1;
     unsigned      mqg1_pool3_256b                           :  1;
     unsigned      mqg1_pool2_64kb                           :  1;
     unsigned      mqg1_pool2_16kb                           :  1;
     unsigned      mqg1_pool2_2kb                            :  1;
     unsigned      mqg1_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg1_pool2_256b                           :  1;
     unsigned      mqg1_pool2_2kb                            :  1;
     unsigned      mqg1_pool2_16kb                           :  1;
     unsigned      mqg1_pool2_64kb                           :  1;
     unsigned      mqg1_pool3_256b                           :  1;
     unsigned      mqg1_pool3_2kb                            :  1;
     unsigned      mqg1_pool3_16kb                           :  1;
     unsigned      mqg1_pool3_64kb                           :  1;
     unsigned      mqg1_pool4_256b                           :  1;
     unsigned      mqg1_pool4_2kb                            :  1;
     unsigned      mqg1_pool4_16kb                           :  1;
     unsigned      mqg1_pool4_64kb                           :  1;
     unsigned      mqg1_pool5_256b                           :  1;
     unsigned      mqg1_pool5_2kb                            :  1;
     unsigned      mqg1_pool5_16kb                           :  1;
     unsigned      mqg1_pool5_64kb                           :  1;
     unsigned      mqg1_pool6_256b                           :  1;
     unsigned      mqg1_pool6_2kb                            :  1;
     unsigned      mqg1_pool6_16kb                           :  1;
     unsigned      mqg1_pool6_64kb                           :  1;
     unsigned      mqg1_pool7_256b                           :  1;
     unsigned      mqg1_pool7_2kb                            :  1;
     unsigned      mqg1_pool7_16kb                           :  1;
     unsigned      mqg1_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg1_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg2_gtt_status_r_t
 *  @brief Memory Quota Group 2 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg2_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 2 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg2_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg2_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg2_pool7_64kb                           :  1;
     unsigned      mqg2_pool7_16kb                           :  1;
     unsigned      mqg2_pool7_2kb                            :  1;
     unsigned      mqg2_pool7_256b                           :  1;
     unsigned      mqg2_pool6_64kb                           :  1;
     unsigned      mqg2_pool6_16kb                           :  1;
     unsigned      mqg2_pool6_2kb                            :  1;
     unsigned      mqg2_pool6_256b                           :  1;
     unsigned      mqg2_pool5_64kb                           :  1;
     unsigned      mqg2_pool5_16kb                           :  1;
     unsigned      mqg2_pool5_2kb                            :  1;
     unsigned      mqg2_pool5_256b                           :  1;
     unsigned      mqg2_pool4_64kb                           :  1;
     unsigned      mqg2_pool4_16kb                           :  1;
     unsigned      mqg2_pool4_2kb                            :  1;
     unsigned      mqg2_pool4_256b                           :  1;
     unsigned      mqg2_pool3_64kb                           :  1;
     unsigned      mqg2_pool3_16kb                           :  1;
     unsigned      mqg2_pool3_2kb                            :  1;
     unsigned      mqg2_pool3_256b                           :  1;
     unsigned      mqg2_pool2_64kb                           :  1;
     unsigned      mqg2_pool2_16kb                           :  1;
     unsigned      mqg2_pool2_2kb                            :  1;
     unsigned      mqg2_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg2_pool2_256b                           :  1;
     unsigned      mqg2_pool2_2kb                            :  1;
     unsigned      mqg2_pool2_16kb                           :  1;
     unsigned      mqg2_pool2_64kb                           :  1;
     unsigned      mqg2_pool3_256b                           :  1;
     unsigned      mqg2_pool3_2kb                            :  1;
     unsigned      mqg2_pool3_16kb                           :  1;
     unsigned      mqg2_pool3_64kb                           :  1;
     unsigned      mqg2_pool4_256b                           :  1;
     unsigned      mqg2_pool4_2kb                            :  1;
     unsigned      mqg2_pool4_16kb                           :  1;
     unsigned      mqg2_pool4_64kb                           :  1;
     unsigned      mqg2_pool5_256b                           :  1;
     unsigned      mqg2_pool5_2kb                            :  1;
     unsigned      mqg2_pool5_16kb                           :  1;
     unsigned      mqg2_pool5_64kb                           :  1;
     unsigned      mqg2_pool6_256b                           :  1;
     unsigned      mqg2_pool6_2kb                            :  1;
     unsigned      mqg2_pool6_16kb                           :  1;
     unsigned      mqg2_pool6_64kb                           :  1;
     unsigned      mqg2_pool7_256b                           :  1;
     unsigned      mqg2_pool7_2kb                            :  1;
     unsigned      mqg2_pool7_16kb                           :  1;
     unsigned      mqg2_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg2_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg3_gtt_status_r_t
 *  @brief Memory Quota Group 3 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg3_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 3 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg3_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg3_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg3_pool7_64kb                           :  1;
     unsigned      mqg3_pool7_16kb                           :  1;
     unsigned      mqg3_pool7_2kb                            :  1;
     unsigned      mqg3_pool7_256b                           :  1;
     unsigned      mqg3_pool6_64kb                           :  1;
     unsigned      mqg3_pool6_16kb                           :  1;
     unsigned      mqg3_pool6_2kb                            :  1;
     unsigned      mqg3_pool6_256b                           :  1;
     unsigned      mqg3_pool5_64kb                           :  1;
     unsigned      mqg3_pool5_16kb                           :  1;
     unsigned      mqg3_pool5_2kb                            :  1;
     unsigned      mqg3_pool5_256b                           :  1;
     unsigned      mqg3_pool4_64kb                           :  1;
     unsigned      mqg3_pool4_16kb                           :  1;
     unsigned      mqg3_pool4_2kb                            :  1;
     unsigned      mqg3_pool4_256b                           :  1;
     unsigned      mqg3_pool3_64kb                           :  1;
     unsigned      mqg3_pool3_16kb                           :  1;
     unsigned      mqg3_pool3_2kb                            :  1;
     unsigned      mqg3_pool3_256b                           :  1;
     unsigned      mqg3_pool2_64kb                           :  1;
     unsigned      mqg3_pool2_16kb                           :  1;
     unsigned      mqg3_pool2_2kb                            :  1;
     unsigned      mqg3_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg3_pool2_256b                           :  1;
     unsigned      mqg3_pool2_2kb                            :  1;
     unsigned      mqg3_pool2_16kb                           :  1;
     unsigned      mqg3_pool2_64kb                           :  1;
     unsigned      mqg3_pool3_256b                           :  1;
     unsigned      mqg3_pool3_2kb                            :  1;
     unsigned      mqg3_pool3_16kb                           :  1;
     unsigned      mqg3_pool3_64kb                           :  1;
     unsigned      mqg3_pool4_256b                           :  1;
     unsigned      mqg3_pool4_2kb                            :  1;
     unsigned      mqg3_pool4_16kb                           :  1;
     unsigned      mqg3_pool4_64kb                           :  1;
     unsigned      mqg3_pool5_256b                           :  1;
     unsigned      mqg3_pool5_2kb                            :  1;
     unsigned      mqg3_pool5_16kb                           :  1;
     unsigned      mqg3_pool5_64kb                           :  1;
     unsigned      mqg3_pool6_256b                           :  1;
     unsigned      mqg3_pool6_2kb                            :  1;
     unsigned      mqg3_pool6_16kb                           :  1;
     unsigned      mqg3_pool6_64kb                           :  1;
     unsigned      mqg3_pool7_256b                           :  1;
     unsigned      mqg3_pool7_2kb                            :  1;
     unsigned      mqg3_pool7_16kb                           :  1;
     unsigned      mqg3_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg3_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg4_gtt_status_r_t
 *  @brief Memory Quota Group 4 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg4_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 4 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg4_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg4_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg4_pool7_64kb                           :  1;
     unsigned      mqg4_pool7_16kb                           :  1;
     unsigned      mqg4_pool7_2kb                            :  1;
     unsigned      mqg4_pool7_256b                           :  1;
     unsigned      mqg4_pool6_64kb                           :  1;
     unsigned      mqg4_pool6_16kb                           :  1;
     unsigned      mqg4_pool6_2kb                            :  1;
     unsigned      mqg4_pool6_256b                           :  1;
     unsigned      mqg4_pool5_64kb                           :  1;
     unsigned      mqg4_pool5_16kb                           :  1;
     unsigned      mqg4_pool5_2kb                            :  1;
     unsigned      mqg4_pool5_256b                           :  1;
     unsigned      mqg4_pool4_64kb                           :  1;
     unsigned      mqg4_pool4_16kb                           :  1;
     unsigned      mqg4_pool4_2kb                            :  1;
     unsigned      mqg4_pool4_256b                           :  1;
     unsigned      mqg4_pool3_64kb                           :  1;
     unsigned      mqg4_pool3_16kb                           :  1;
     unsigned      mqg4_pool3_2kb                            :  1;
     unsigned      mqg4_pool3_256b                           :  1;
     unsigned      mqg4_pool2_64kb                           :  1;
     unsigned      mqg4_pool2_16kb                           :  1;
     unsigned      mqg4_pool2_2kb                            :  1;
     unsigned      mqg4_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg4_pool2_256b                           :  1;
     unsigned      mqg4_pool2_2kb                            :  1;
     unsigned      mqg4_pool2_16kb                           :  1;
     unsigned      mqg4_pool2_64kb                           :  1;
     unsigned      mqg4_pool3_256b                           :  1;
     unsigned      mqg4_pool3_2kb                            :  1;
     unsigned      mqg4_pool3_16kb                           :  1;
     unsigned      mqg4_pool3_64kb                           :  1;
     unsigned      mqg4_pool4_256b                           :  1;
     unsigned      mqg4_pool4_2kb                            :  1;
     unsigned      mqg4_pool4_16kb                           :  1;
     unsigned      mqg4_pool4_64kb                           :  1;
     unsigned      mqg4_pool5_256b                           :  1;
     unsigned      mqg4_pool5_2kb                            :  1;
     unsigned      mqg4_pool5_16kb                           :  1;
     unsigned      mqg4_pool5_64kb                           :  1;
     unsigned      mqg4_pool6_256b                           :  1;
     unsigned      mqg4_pool6_2kb                            :  1;
     unsigned      mqg4_pool6_16kb                           :  1;
     unsigned      mqg4_pool6_64kb                           :  1;
     unsigned      mqg4_pool7_256b                           :  1;
     unsigned      mqg4_pool7_2kb                            :  1;
     unsigned      mqg4_pool7_16kb                           :  1;
     unsigned      mqg4_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg4_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg5_gtt_status_r_t
 *  @brief Memory Quota Group 5 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg5_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 5 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg5_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg5_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg5_pool7_64kb                           :  1;
     unsigned      mqg5_pool7_16kb                           :  1;
     unsigned      mqg5_pool7_2kb                            :  1;
     unsigned      mqg5_pool7_256b                           :  1;
     unsigned      mqg5_pool6_64kb                           :  1;
     unsigned      mqg5_pool6_16kb                           :  1;
     unsigned      mqg5_pool6_2kb                            :  1;
     unsigned      mqg5_pool6_256b                           :  1;
     unsigned      mqg5_pool5_64kb                           :  1;
     unsigned      mqg5_pool5_16kb                           :  1;
     unsigned      mqg5_pool5_2kb                            :  1;
     unsigned      mqg5_pool5_256b                           :  1;
     unsigned      mqg5_pool4_64kb                           :  1;
     unsigned      mqg5_pool4_16kb                           :  1;
     unsigned      mqg5_pool4_2kb                            :  1;
     unsigned      mqg5_pool4_256b                           :  1;
     unsigned      mqg5_pool3_64kb                           :  1;
     unsigned      mqg5_pool3_16kb                           :  1;
     unsigned      mqg5_pool3_2kb                            :  1;
     unsigned      mqg5_pool3_256b                           :  1;
     unsigned      mqg5_pool2_64kb                           :  1;
     unsigned      mqg5_pool2_16kb                           :  1;
     unsigned      mqg5_pool2_2kb                            :  1;
     unsigned      mqg5_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg5_pool2_256b                           :  1;
     unsigned      mqg5_pool2_2kb                            :  1;
     unsigned      mqg5_pool2_16kb                           :  1;
     unsigned      mqg5_pool2_64kb                           :  1;
     unsigned      mqg5_pool3_256b                           :  1;
     unsigned      mqg5_pool3_2kb                            :  1;
     unsigned      mqg5_pool3_16kb                           :  1;
     unsigned      mqg5_pool3_64kb                           :  1;
     unsigned      mqg5_pool4_256b                           :  1;
     unsigned      mqg5_pool4_2kb                            :  1;
     unsigned      mqg5_pool4_16kb                           :  1;
     unsigned      mqg5_pool4_64kb                           :  1;
     unsigned      mqg5_pool5_256b                           :  1;
     unsigned      mqg5_pool5_2kb                            :  1;
     unsigned      mqg5_pool5_16kb                           :  1;
     unsigned      mqg5_pool5_64kb                           :  1;
     unsigned      mqg5_pool6_256b                           :  1;
     unsigned      mqg5_pool6_2kb                            :  1;
     unsigned      mqg5_pool6_16kb                           :  1;
     unsigned      mqg5_pool6_64kb                           :  1;
     unsigned      mqg5_pool7_256b                           :  1;
     unsigned      mqg5_pool7_2kb                            :  1;
     unsigned      mqg5_pool7_16kb                           :  1;
     unsigned      mqg5_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg5_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg6_gtt_status_r_t
 *  @brief Memory Quota Group 6 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg6_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 6 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg6_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg6_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg6_pool7_64kb                           :  1;
     unsigned      mqg6_pool7_16kb                           :  1;
     unsigned      mqg6_pool7_2kb                            :  1;
     unsigned      mqg6_pool7_256b                           :  1;
     unsigned      mqg6_pool6_64kb                           :  1;
     unsigned      mqg6_pool6_16kb                           :  1;
     unsigned      mqg6_pool6_2kb                            :  1;
     unsigned      mqg6_pool6_256b                           :  1;
     unsigned      mqg6_pool5_64kb                           :  1;
     unsigned      mqg6_pool5_16kb                           :  1;
     unsigned      mqg6_pool5_2kb                            :  1;
     unsigned      mqg6_pool5_256b                           :  1;
     unsigned      mqg6_pool4_64kb                           :  1;
     unsigned      mqg6_pool4_16kb                           :  1;
     unsigned      mqg6_pool4_2kb                            :  1;
     unsigned      mqg6_pool4_256b                           :  1;
     unsigned      mqg6_pool3_64kb                           :  1;
     unsigned      mqg6_pool3_16kb                           :  1;
     unsigned      mqg6_pool3_2kb                            :  1;
     unsigned      mqg6_pool3_256b                           :  1;
     unsigned      mqg6_pool2_64kb                           :  1;
     unsigned      mqg6_pool2_16kb                           :  1;
     unsigned      mqg6_pool2_2kb                            :  1;
     unsigned      mqg6_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg6_pool2_256b                           :  1;
     unsigned      mqg6_pool2_2kb                            :  1;
     unsigned      mqg6_pool2_16kb                           :  1;
     unsigned      mqg6_pool2_64kb                           :  1;
     unsigned      mqg6_pool3_256b                           :  1;
     unsigned      mqg6_pool3_2kb                            :  1;
     unsigned      mqg6_pool3_16kb                           :  1;
     unsigned      mqg6_pool3_64kb                           :  1;
     unsigned      mqg6_pool4_256b                           :  1;
     unsigned      mqg6_pool4_2kb                            :  1;
     unsigned      mqg6_pool4_16kb                           :  1;
     unsigned      mqg6_pool4_64kb                           :  1;
     unsigned      mqg6_pool5_256b                           :  1;
     unsigned      mqg6_pool5_2kb                            :  1;
     unsigned      mqg6_pool5_16kb                           :  1;
     unsigned      mqg6_pool5_64kb                           :  1;
     unsigned      mqg6_pool6_256b                           :  1;
     unsigned      mqg6_pool6_2kb                            :  1;
     unsigned      mqg6_pool6_16kb                           :  1;
     unsigned      mqg6_pool6_64kb                           :  1;
     unsigned      mqg6_pool7_256b                           :  1;
     unsigned      mqg6_pool7_2kb                            :  1;
     unsigned      mqg6_pool7_16kb                           :  1;
     unsigned      mqg6_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg6_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg7_gtt_status_r_t
 *  @brief Memory Quota Group 7 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg7_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 7 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg7_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg7_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg7_pool7_64kb                           :  1;
     unsigned      mqg7_pool7_16kb                           :  1;
     unsigned      mqg7_pool7_2kb                            :  1;
     unsigned      mqg7_pool7_256b                           :  1;
     unsigned      mqg7_pool6_64kb                           :  1;
     unsigned      mqg7_pool6_16kb                           :  1;
     unsigned      mqg7_pool6_2kb                            :  1;
     unsigned      mqg7_pool6_256b                           :  1;
     unsigned      mqg7_pool5_64kb                           :  1;
     unsigned      mqg7_pool5_16kb                           :  1;
     unsigned      mqg7_pool5_2kb                            :  1;
     unsigned      mqg7_pool5_256b                           :  1;
     unsigned      mqg7_pool4_64kb                           :  1;
     unsigned      mqg7_pool4_16kb                           :  1;
     unsigned      mqg7_pool4_2kb                            :  1;
     unsigned      mqg7_pool4_256b                           :  1;
     unsigned      mqg7_pool3_64kb                           :  1;
     unsigned      mqg7_pool3_16kb                           :  1;
     unsigned      mqg7_pool3_2kb                            :  1;
     unsigned      mqg7_pool3_256b                           :  1;
     unsigned      mqg7_pool2_64kb                           :  1;
     unsigned      mqg7_pool2_16kb                           :  1;
     unsigned      mqg7_pool2_2kb                            :  1;
     unsigned      mqg7_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg7_pool2_256b                           :  1;
     unsigned      mqg7_pool2_2kb                            :  1;
     unsigned      mqg7_pool2_16kb                           :  1;
     unsigned      mqg7_pool2_64kb                           :  1;
     unsigned      mqg7_pool3_256b                           :  1;
     unsigned      mqg7_pool3_2kb                            :  1;
     unsigned      mqg7_pool3_16kb                           :  1;
     unsigned      mqg7_pool3_64kb                           :  1;
     unsigned      mqg7_pool4_256b                           :  1;
     unsigned      mqg7_pool4_2kb                            :  1;
     unsigned      mqg7_pool4_16kb                           :  1;
     unsigned      mqg7_pool4_64kb                           :  1;
     unsigned      mqg7_pool5_256b                           :  1;
     unsigned      mqg7_pool5_2kb                            :  1;
     unsigned      mqg7_pool5_16kb                           :  1;
     unsigned      mqg7_pool5_64kb                           :  1;
     unsigned      mqg7_pool6_256b                           :  1;
     unsigned      mqg7_pool6_2kb                            :  1;
     unsigned      mqg7_pool6_16kb                           :  1;
     unsigned      mqg7_pool6_64kb                           :  1;
     unsigned      mqg7_pool7_256b                           :  1;
     unsigned      mqg7_pool7_2kb                            :  1;
     unsigned      mqg7_pool7_16kb                           :  1;
     unsigned      mqg7_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg7_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg8_gtt_status_r_t
 *  @brief Memory Quota Group 8 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg8_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg8_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg8_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg8_pool7_64kb                           :  1;
     unsigned      mqg8_pool7_16kb                           :  1;
     unsigned      mqg8_pool7_2kb                            :  1;
     unsigned      mqg8_pool7_256b                           :  1;
     unsigned      mqg8_pool6_64kb                           :  1;
     unsigned      mqg8_pool6_16kb                           :  1;
     unsigned      mqg8_pool6_2kb                            :  1;
     unsigned      mqg8_pool6_256b                           :  1;
     unsigned      mqg8_pool5_64kb                           :  1;
     unsigned      mqg8_pool5_16kb                           :  1;
     unsigned      mqg8_pool5_2kb                            :  1;
     unsigned      mqg8_pool5_256b                           :  1;
     unsigned      mqg8_pool4_64kb                           :  1;
     unsigned      mqg8_pool4_16kb                           :  1;
     unsigned      mqg8_pool4_2kb                            :  1;
     unsigned      mqg8_pool4_256b                           :  1;
     unsigned      mqg8_pool3_64kb                           :  1;
     unsigned      mqg8_pool3_16kb                           :  1;
     unsigned      mqg8_pool3_2kb                            :  1;
     unsigned      mqg8_pool3_256b                           :  1;
     unsigned      mqg8_pool2_64kb                           :  1;
     unsigned      mqg8_pool2_16kb                           :  1;
     unsigned      mqg8_pool2_2kb                            :  1;
     unsigned      mqg8_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg8_pool2_256b                           :  1;
     unsigned      mqg8_pool2_2kb                            :  1;
     unsigned      mqg8_pool2_16kb                           :  1;
     unsigned      mqg8_pool2_64kb                           :  1;
     unsigned      mqg8_pool3_256b                           :  1;
     unsigned      mqg8_pool3_2kb                            :  1;
     unsigned      mqg8_pool3_16kb                           :  1;
     unsigned      mqg8_pool3_64kb                           :  1;
     unsigned      mqg8_pool4_256b                           :  1;
     unsigned      mqg8_pool4_2kb                            :  1;
     unsigned      mqg8_pool4_16kb                           :  1;
     unsigned      mqg8_pool4_64kb                           :  1;
     unsigned      mqg8_pool5_256b                           :  1;
     unsigned      mqg8_pool5_2kb                            :  1;
     unsigned      mqg8_pool5_16kb                           :  1;
     unsigned      mqg8_pool5_64kb                           :  1;
     unsigned      mqg8_pool6_256b                           :  1;
     unsigned      mqg8_pool6_2kb                            :  1;
     unsigned      mqg8_pool6_16kb                           :  1;
     unsigned      mqg8_pool6_64kb                           :  1;
     unsigned      mqg8_pool7_256b                           :  1;
     unsigned      mqg8_pool7_2kb                            :  1;
     unsigned      mqg8_pool7_16kb                           :  1;
     unsigned      mqg8_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg8_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg9_gtt_status_r_t
 *  @brief Memory Quota Group 9 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg9_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 9 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg9_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg9_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg9_pool7_64kb                           :  1;
     unsigned      mqg9_pool7_16kb                           :  1;
     unsigned      mqg9_pool7_2kb                            :  1;
     unsigned      mqg9_pool7_256b                           :  1;
     unsigned      mqg9_pool6_64kb                           :  1;
     unsigned      mqg9_pool6_16kb                           :  1;
     unsigned      mqg9_pool6_2kb                            :  1;
     unsigned      mqg9_pool6_256b                           :  1;
     unsigned      mqg9_pool5_64kb                           :  1;
     unsigned      mqg9_pool5_16kb                           :  1;
     unsigned      mqg9_pool5_2kb                            :  1;
     unsigned      mqg9_pool5_256b                           :  1;
     unsigned      mqg9_pool4_64kb                           :  1;
     unsigned      mqg9_pool4_16kb                           :  1;
     unsigned      mqg9_pool4_2kb                            :  1;
     unsigned      mqg9_pool4_256b                           :  1;
     unsigned      mqg9_pool3_64kb                           :  1;
     unsigned      mqg9_pool3_16kb                           :  1;
     unsigned      mqg9_pool3_2kb                            :  1;
     unsigned      mqg9_pool3_256b                           :  1;
     unsigned      mqg9_pool2_64kb                           :  1;
     unsigned      mqg9_pool2_16kb                           :  1;
     unsigned      mqg9_pool2_2kb                            :  1;
     unsigned      mqg9_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg9_pool2_256b                           :  1;
     unsigned      mqg9_pool2_2kb                            :  1;
     unsigned      mqg9_pool2_16kb                           :  1;
     unsigned      mqg9_pool2_64kb                           :  1;
     unsigned      mqg9_pool3_256b                           :  1;
     unsigned      mqg9_pool3_2kb                            :  1;
     unsigned      mqg9_pool3_16kb                           :  1;
     unsigned      mqg9_pool3_64kb                           :  1;
     unsigned      mqg9_pool4_256b                           :  1;
     unsigned      mqg9_pool4_2kb                            :  1;
     unsigned      mqg9_pool4_16kb                           :  1;
     unsigned      mqg9_pool4_64kb                           :  1;
     unsigned      mqg9_pool5_256b                           :  1;
     unsigned      mqg9_pool5_2kb                            :  1;
     unsigned      mqg9_pool5_16kb                           :  1;
     unsigned      mqg9_pool5_64kb                           :  1;
     unsigned      mqg9_pool6_256b                           :  1;
     unsigned      mqg9_pool6_2kb                            :  1;
     unsigned      mqg9_pool6_16kb                           :  1;
     unsigned      mqg9_pool6_64kb                           :  1;
     unsigned      mqg9_pool7_256b                           :  1;
     unsigned      mqg9_pool7_2kb                            :  1;
     unsigned      mqg9_pool7_16kb                           :  1;
     unsigned      mqg9_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg9_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg10_gtt_status_r_t
 *  @brief Memory Quota Group 10 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg10_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 10 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg10_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg10_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg10_pool7_64kb                          :  1;
     unsigned      mqg10_pool7_16kb                          :  1;
     unsigned      mqg10_pool7_2kb                           :  1;
     unsigned      mqg10_pool7_256b                          :  1;
     unsigned      mqg10_pool6_64kb                          :  1;
     unsigned      mqg10_pool6_16kb                          :  1;
     unsigned      mqg10_pool6_2kb                           :  1;
     unsigned      mqg10_pool6_256b                          :  1;
     unsigned      mqg10_pool5_64kb                          :  1;
     unsigned      mqg10_pool5_16kb                          :  1;
     unsigned      mqg10_pool5_2kb                           :  1;
     unsigned      mqg10_pool5_256b                          :  1;
     unsigned      mqg10_pool4_64kb                          :  1;
     unsigned      mqg10_pool4_16kb                          :  1;
     unsigned      mqg10_pool4_2kb                           :  1;
     unsigned      mqg10_pool4_256b                          :  1;
     unsigned      mqg10_pool3_64kb                          :  1;
     unsigned      mqg10_pool3_16kb                          :  1;
     unsigned      mqg10_pool3_2kb                           :  1;
     unsigned      mqg10_pool3_256b                          :  1;
     unsigned      mqg10_pool2_64kb                          :  1;
     unsigned      mqg10_pool2_16kb                          :  1;
     unsigned      mqg10_pool2_2kb                           :  1;
     unsigned      mqg10_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg10_pool2_256b                          :  1;
     unsigned      mqg10_pool2_2kb                           :  1;
     unsigned      mqg10_pool2_16kb                          :  1;
     unsigned      mqg10_pool2_64kb                          :  1;
     unsigned      mqg10_pool3_256b                          :  1;
     unsigned      mqg10_pool3_2kb                           :  1;
     unsigned      mqg10_pool3_16kb                          :  1;
     unsigned      mqg10_pool3_64kb                          :  1;
     unsigned      mqg10_pool4_256b                          :  1;
     unsigned      mqg10_pool4_2kb                           :  1;
     unsigned      mqg10_pool4_16kb                          :  1;
     unsigned      mqg10_pool4_64kb                          :  1;
     unsigned      mqg10_pool5_256b                          :  1;
     unsigned      mqg10_pool5_2kb                           :  1;
     unsigned      mqg10_pool5_16kb                          :  1;
     unsigned      mqg10_pool5_64kb                          :  1;
     unsigned      mqg10_pool6_256b                          :  1;
     unsigned      mqg10_pool6_2kb                           :  1;
     unsigned      mqg10_pool6_16kb                          :  1;
     unsigned      mqg10_pool6_64kb                          :  1;
     unsigned      mqg10_pool7_256b                          :  1;
     unsigned      mqg10_pool7_2kb                           :  1;
     unsigned      mqg10_pool7_16kb                          :  1;
     unsigned      mqg10_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg10_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg11_gtt_status_r_t
 *  @brief Memory Quota Group 11 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg11_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 11 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg11_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg11_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg11_pool7_64kb                          :  1;
     unsigned      mqg11_pool7_16kb                          :  1;
     unsigned      mqg11_pool7_2kb                           :  1;
     unsigned      mqg11_pool7_256b                          :  1;
     unsigned      mqg11_pool6_64kb                          :  1;
     unsigned      mqg11_pool6_16kb                          :  1;
     unsigned      mqg11_pool6_2kb                           :  1;
     unsigned      mqg11_pool6_256b                          :  1;
     unsigned      mqg11_pool5_64kb                          :  1;
     unsigned      mqg11_pool5_16kb                          :  1;
     unsigned      mqg11_pool5_2kb                           :  1;
     unsigned      mqg11_pool5_256b                          :  1;
     unsigned      mqg11_pool4_64kb                          :  1;
     unsigned      mqg11_pool4_16kb                          :  1;
     unsigned      mqg11_pool4_2kb                           :  1;
     unsigned      mqg11_pool4_256b                          :  1;
     unsigned      mqg11_pool3_64kb                          :  1;
     unsigned      mqg11_pool3_16kb                          :  1;
     unsigned      mqg11_pool3_2kb                           :  1;
     unsigned      mqg11_pool3_256b                          :  1;
     unsigned      mqg11_pool2_64kb                          :  1;
     unsigned      mqg11_pool2_16kb                          :  1;
     unsigned      mqg11_pool2_2kb                           :  1;
     unsigned      mqg11_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg11_pool2_256b                          :  1;
     unsigned      mqg11_pool2_2kb                           :  1;
     unsigned      mqg11_pool2_16kb                          :  1;
     unsigned      mqg11_pool2_64kb                          :  1;
     unsigned      mqg11_pool3_256b                          :  1;
     unsigned      mqg11_pool3_2kb                           :  1;
     unsigned      mqg11_pool3_16kb                          :  1;
     unsigned      mqg11_pool3_64kb                          :  1;
     unsigned      mqg11_pool4_256b                          :  1;
     unsigned      mqg11_pool4_2kb                           :  1;
     unsigned      mqg11_pool4_16kb                          :  1;
     unsigned      mqg11_pool4_64kb                          :  1;
     unsigned      mqg11_pool5_256b                          :  1;
     unsigned      mqg11_pool5_2kb                           :  1;
     unsigned      mqg11_pool5_16kb                          :  1;
     unsigned      mqg11_pool5_64kb                          :  1;
     unsigned      mqg11_pool6_256b                          :  1;
     unsigned      mqg11_pool6_2kb                           :  1;
     unsigned      mqg11_pool6_16kb                          :  1;
     unsigned      mqg11_pool6_64kb                          :  1;
     unsigned      mqg11_pool7_256b                          :  1;
     unsigned      mqg11_pool7_2kb                           :  1;
     unsigned      mqg11_pool7_16kb                          :  1;
     unsigned      mqg11_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg11_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg12_gtt_status_r_t
 *  @brief Memory Quota Group 12 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg12_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 12 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg12_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg12_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg12_pool7_64kb                          :  1;
     unsigned      mqg12_pool7_16kb                          :  1;
     unsigned      mqg12_pool7_2kb                           :  1;
     unsigned      mqg12_pool7_256b                          :  1;
     unsigned      mqg12_pool6_64kb                          :  1;
     unsigned      mqg12_pool6_16kb                          :  1;
     unsigned      mqg12_pool6_2kb                           :  1;
     unsigned      mqg12_pool6_256b                          :  1;
     unsigned      mqg12_pool5_64kb                          :  1;
     unsigned      mqg12_pool5_16kb                          :  1;
     unsigned      mqg12_pool5_2kb                           :  1;
     unsigned      mqg12_pool5_256b                          :  1;
     unsigned      mqg12_pool4_64kb                          :  1;
     unsigned      mqg12_pool4_16kb                          :  1;
     unsigned      mqg12_pool4_2kb                           :  1;
     unsigned      mqg12_pool4_256b                          :  1;
     unsigned      mqg12_pool3_64kb                          :  1;
     unsigned      mqg12_pool3_16kb                          :  1;
     unsigned      mqg12_pool3_2kb                           :  1;
     unsigned      mqg12_pool3_256b                          :  1;
     unsigned      mqg12_pool2_64kb                          :  1;
     unsigned      mqg12_pool2_16kb                          :  1;
     unsigned      mqg12_pool2_2kb                           :  1;
     unsigned      mqg12_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg12_pool2_256b                          :  1;
     unsigned      mqg12_pool2_2kb                           :  1;
     unsigned      mqg12_pool2_16kb                          :  1;
     unsigned      mqg12_pool2_64kb                          :  1;
     unsigned      mqg12_pool3_256b                          :  1;
     unsigned      mqg12_pool3_2kb                           :  1;
     unsigned      mqg12_pool3_16kb                          :  1;
     unsigned      mqg12_pool3_64kb                          :  1;
     unsigned      mqg12_pool4_256b                          :  1;
     unsigned      mqg12_pool4_2kb                           :  1;
     unsigned      mqg12_pool4_16kb                          :  1;
     unsigned      mqg12_pool4_64kb                          :  1;
     unsigned      mqg12_pool5_256b                          :  1;
     unsigned      mqg12_pool5_2kb                           :  1;
     unsigned      mqg12_pool5_16kb                          :  1;
     unsigned      mqg12_pool5_64kb                          :  1;
     unsigned      mqg12_pool6_256b                          :  1;
     unsigned      mqg12_pool6_2kb                           :  1;
     unsigned      mqg12_pool6_16kb                          :  1;
     unsigned      mqg12_pool6_64kb                          :  1;
     unsigned      mqg12_pool7_256b                          :  1;
     unsigned      mqg12_pool7_2kb                           :  1;
     unsigned      mqg12_pool7_16kb                          :  1;
     unsigned      mqg12_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg12_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg13_gtt_status_r_t
 *  @brief Memory Quota Group 13 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg13_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 13 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg13_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg13_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg13_pool7_64kb                          :  1;
     unsigned      mqg13_pool7_16kb                          :  1;
     unsigned      mqg13_pool7_2kb                           :  1;
     unsigned      mqg13_pool7_256b                          :  1;
     unsigned      mqg13_pool6_64kb                          :  1;
     unsigned      mqg13_pool6_16kb                          :  1;
     unsigned      mqg13_pool6_2kb                           :  1;
     unsigned      mqg13_pool6_256b                          :  1;
     unsigned      mqg13_pool5_64kb                          :  1;
     unsigned      mqg13_pool5_16kb                          :  1;
     unsigned      mqg13_pool5_2kb                           :  1;
     unsigned      mqg13_pool5_256b                          :  1;
     unsigned      mqg13_pool4_64kb                          :  1;
     unsigned      mqg13_pool4_16kb                          :  1;
     unsigned      mqg13_pool4_2kb                           :  1;
     unsigned      mqg13_pool4_256b                          :  1;
     unsigned      mqg13_pool3_64kb                          :  1;
     unsigned      mqg13_pool3_16kb                          :  1;
     unsigned      mqg13_pool3_2kb                           :  1;
     unsigned      mqg13_pool3_256b                          :  1;
     unsigned      mqg13_pool2_64kb                          :  1;
     unsigned      mqg13_pool2_16kb                          :  1;
     unsigned      mqg13_pool2_2kb                           :  1;
     unsigned      mqg13_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg13_pool2_256b                          :  1;
     unsigned      mqg13_pool2_2kb                           :  1;
     unsigned      mqg13_pool2_16kb                          :  1;
     unsigned      mqg13_pool2_64kb                          :  1;
     unsigned      mqg13_pool3_256b                          :  1;
     unsigned      mqg13_pool3_2kb                           :  1;
     unsigned      mqg13_pool3_16kb                          :  1;
     unsigned      mqg13_pool3_64kb                          :  1;
     unsigned      mqg13_pool4_256b                          :  1;
     unsigned      mqg13_pool4_2kb                           :  1;
     unsigned      mqg13_pool4_16kb                          :  1;
     unsigned      mqg13_pool4_64kb                          :  1;
     unsigned      mqg13_pool5_256b                          :  1;
     unsigned      mqg13_pool5_2kb                           :  1;
     unsigned      mqg13_pool5_16kb                          :  1;
     unsigned      mqg13_pool5_64kb                          :  1;
     unsigned      mqg13_pool6_256b                          :  1;
     unsigned      mqg13_pool6_2kb                           :  1;
     unsigned      mqg13_pool6_16kb                          :  1;
     unsigned      mqg13_pool6_64kb                          :  1;
     unsigned      mqg13_pool7_256b                          :  1;
     unsigned      mqg13_pool7_2kb                           :  1;
     unsigned      mqg13_pool7_16kb                          :  1;
     unsigned      mqg13_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg13_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg14_gtt_status_r_t
 *  @brief Memory Quota Group 14 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg14_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 14 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg14_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg14_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg14_pool7_64kb                          :  1;
     unsigned      mqg14_pool7_16kb                          :  1;
     unsigned      mqg14_pool7_2kb                           :  1;
     unsigned      mqg14_pool7_256b                          :  1;
     unsigned      mqg14_pool6_64kb                          :  1;
     unsigned      mqg14_pool6_16kb                          :  1;
     unsigned      mqg14_pool6_2kb                           :  1;
     unsigned      mqg14_pool6_256b                          :  1;
     unsigned      mqg14_pool5_64kb                          :  1;
     unsigned      mqg14_pool5_16kb                          :  1;
     unsigned      mqg14_pool5_2kb                           :  1;
     unsigned      mqg14_pool5_256b                          :  1;
     unsigned      mqg14_pool4_64kb                          :  1;
     unsigned      mqg14_pool4_16kb                          :  1;
     unsigned      mqg14_pool4_2kb                           :  1;
     unsigned      mqg14_pool4_256b                          :  1;
     unsigned      mqg14_pool3_64kb                          :  1;
     unsigned      mqg14_pool3_16kb                          :  1;
     unsigned      mqg14_pool3_2kb                           :  1;
     unsigned      mqg14_pool3_256b                          :  1;
     unsigned      mqg14_pool2_64kb                          :  1;
     unsigned      mqg14_pool2_16kb                          :  1;
     unsigned      mqg14_pool2_2kb                           :  1;
     unsigned      mqg14_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg14_pool2_256b                          :  1;
     unsigned      mqg14_pool2_2kb                           :  1;
     unsigned      mqg14_pool2_16kb                          :  1;
     unsigned      mqg14_pool2_64kb                          :  1;
     unsigned      mqg14_pool3_256b                          :  1;
     unsigned      mqg14_pool3_2kb                           :  1;
     unsigned      mqg14_pool3_16kb                          :  1;
     unsigned      mqg14_pool3_64kb                          :  1;
     unsigned      mqg14_pool4_256b                          :  1;
     unsigned      mqg14_pool4_2kb                           :  1;
     unsigned      mqg14_pool4_16kb                          :  1;
     unsigned      mqg14_pool4_64kb                          :  1;
     unsigned      mqg14_pool5_256b                          :  1;
     unsigned      mqg14_pool5_2kb                           :  1;
     unsigned      mqg14_pool5_16kb                          :  1;
     unsigned      mqg14_pool5_64kb                          :  1;
     unsigned      mqg14_pool6_256b                          :  1;
     unsigned      mqg14_pool6_2kb                           :  1;
     unsigned      mqg14_pool6_16kb                          :  1;
     unsigned      mqg14_pool6_64kb                          :  1;
     unsigned      mqg14_pool7_256b                          :  1;
     unsigned      mqg14_pool7_2kb                           :  1;
     unsigned      mqg14_pool7_16kb                          :  1;
     unsigned      mqg14_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg14_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg15_gtt_status_r_t
 *  @brief Memory Quota Group 15 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg15_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 15 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg15_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg15_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg15_pool7_64kb                          :  1;
     unsigned      mqg15_pool7_16kb                          :  1;
     unsigned      mqg15_pool7_2kb                           :  1;
     unsigned      mqg15_pool7_256b                          :  1;
     unsigned      mqg15_pool6_64kb                          :  1;
     unsigned      mqg15_pool6_16kb                          :  1;
     unsigned      mqg15_pool6_2kb                           :  1;
     unsigned      mqg15_pool6_256b                          :  1;
     unsigned      mqg15_pool5_64kb                          :  1;
     unsigned      mqg15_pool5_16kb                          :  1;
     unsigned      mqg15_pool5_2kb                           :  1;
     unsigned      mqg15_pool5_256b                          :  1;
     unsigned      mqg15_pool4_64kb                          :  1;
     unsigned      mqg15_pool4_16kb                          :  1;
     unsigned      mqg15_pool4_2kb                           :  1;
     unsigned      mqg15_pool4_256b                          :  1;
     unsigned      mqg15_pool3_64kb                          :  1;
     unsigned      mqg15_pool3_16kb                          :  1;
     unsigned      mqg15_pool3_2kb                           :  1;
     unsigned      mqg15_pool3_256b                          :  1;
     unsigned      mqg15_pool2_64kb                          :  1;
     unsigned      mqg15_pool2_16kb                          :  1;
     unsigned      mqg15_pool2_2kb                           :  1;
     unsigned      mqg15_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg15_pool2_256b                          :  1;
     unsigned      mqg15_pool2_2kb                           :  1;
     unsigned      mqg15_pool2_16kb                          :  1;
     unsigned      mqg15_pool2_64kb                          :  1;
     unsigned      mqg15_pool3_256b                          :  1;
     unsigned      mqg15_pool3_2kb                           :  1;
     unsigned      mqg15_pool3_16kb                          :  1;
     unsigned      mqg15_pool3_64kb                          :  1;
     unsigned      mqg15_pool4_256b                          :  1;
     unsigned      mqg15_pool4_2kb                           :  1;
     unsigned      mqg15_pool4_16kb                          :  1;
     unsigned      mqg15_pool4_64kb                          :  1;
     unsigned      mqg15_pool5_256b                          :  1;
     unsigned      mqg15_pool5_2kb                           :  1;
     unsigned      mqg15_pool5_16kb                          :  1;
     unsigned      mqg15_pool5_64kb                          :  1;
     unsigned      mqg15_pool6_256b                          :  1;
     unsigned      mqg15_pool6_2kb                           :  1;
     unsigned      mqg15_pool6_16kb                          :  1;
     unsigned      mqg15_pool6_64kb                          :  1;
     unsigned      mqg15_pool7_256b                          :  1;
     unsigned      mqg15_pool7_2kb                           :  1;
     unsigned      mqg15_pool7_16kb                          :  1;
     unsigned      mqg15_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg15_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg16_gtt_status_r_t
 *  @brief Memory Quota Group 16 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg16_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 16 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg16_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg16_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg16_pool7_64kb                          :  1;
     unsigned      mqg16_pool7_16kb                          :  1;
     unsigned      mqg16_pool7_2kb                           :  1;
     unsigned      mqg16_pool7_256b                          :  1;
     unsigned      mqg16_pool6_64kb                          :  1;
     unsigned      mqg16_pool6_16kb                          :  1;
     unsigned      mqg16_pool6_2kb                           :  1;
     unsigned      mqg16_pool6_256b                          :  1;
     unsigned      mqg16_pool5_64kb                          :  1;
     unsigned      mqg16_pool5_16kb                          :  1;
     unsigned      mqg16_pool5_2kb                           :  1;
     unsigned      mqg16_pool5_256b                          :  1;
     unsigned      mqg16_pool4_64kb                          :  1;
     unsigned      mqg16_pool4_16kb                          :  1;
     unsigned      mqg16_pool4_2kb                           :  1;
     unsigned      mqg16_pool4_256b                          :  1;
     unsigned      mqg16_pool3_64kb                          :  1;
     unsigned      mqg16_pool3_16kb                          :  1;
     unsigned      mqg16_pool3_2kb                           :  1;
     unsigned      mqg16_pool3_256b                          :  1;
     unsigned      mqg16_pool2_64kb                          :  1;
     unsigned      mqg16_pool2_16kb                          :  1;
     unsigned      mqg16_pool2_2kb                           :  1;
     unsigned      mqg16_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg16_pool2_256b                          :  1;
     unsigned      mqg16_pool2_2kb                           :  1;
     unsigned      mqg16_pool2_16kb                          :  1;
     unsigned      mqg16_pool2_64kb                          :  1;
     unsigned      mqg16_pool3_256b                          :  1;
     unsigned      mqg16_pool3_2kb                           :  1;
     unsigned      mqg16_pool3_16kb                          :  1;
     unsigned      mqg16_pool3_64kb                          :  1;
     unsigned      mqg16_pool4_256b                          :  1;
     unsigned      mqg16_pool4_2kb                           :  1;
     unsigned      mqg16_pool4_16kb                          :  1;
     unsigned      mqg16_pool4_64kb                          :  1;
     unsigned      mqg16_pool5_256b                          :  1;
     unsigned      mqg16_pool5_2kb                           :  1;
     unsigned      mqg16_pool5_16kb                          :  1;
     unsigned      mqg16_pool5_64kb                          :  1;
     unsigned      mqg16_pool6_256b                          :  1;
     unsigned      mqg16_pool6_2kb                           :  1;
     unsigned      mqg16_pool6_16kb                          :  1;
     unsigned      mqg16_pool6_64kb                          :  1;
     unsigned      mqg16_pool7_256b                          :  1;
     unsigned      mqg16_pool7_2kb                           :  1;
     unsigned      mqg16_pool7_16kb                          :  1;
     unsigned      mqg16_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg16_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg17_gtt_status_r_t
 *  @brief Memory Quota Group 17 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg17_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 17 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg17_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg17_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg17_pool7_64kb                          :  1;
     unsigned      mqg17_pool7_16kb                          :  1;
     unsigned      mqg17_pool7_2kb                           :  1;
     unsigned      mqg17_pool7_256b                          :  1;
     unsigned      mqg17_pool6_64kb                          :  1;
     unsigned      mqg17_pool6_16kb                          :  1;
     unsigned      mqg17_pool6_2kb                           :  1;
     unsigned      mqg17_pool6_256b                          :  1;
     unsigned      mqg17_pool5_64kb                          :  1;
     unsigned      mqg17_pool5_16kb                          :  1;
     unsigned      mqg17_pool5_2kb                           :  1;
     unsigned      mqg17_pool5_256b                          :  1;
     unsigned      mqg17_pool4_64kb                          :  1;
     unsigned      mqg17_pool4_16kb                          :  1;
     unsigned      mqg17_pool4_2kb                           :  1;
     unsigned      mqg17_pool4_256b                          :  1;
     unsigned      mqg17_pool3_64kb                          :  1;
     unsigned      mqg17_pool3_16kb                          :  1;
     unsigned      mqg17_pool3_2kb                           :  1;
     unsigned      mqg17_pool3_256b                          :  1;
     unsigned      mqg17_pool2_64kb                          :  1;
     unsigned      mqg17_pool2_16kb                          :  1;
     unsigned      mqg17_pool2_2kb                           :  1;
     unsigned      mqg17_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg17_pool2_256b                          :  1;
     unsigned      mqg17_pool2_2kb                           :  1;
     unsigned      mqg17_pool2_16kb                          :  1;
     unsigned      mqg17_pool2_64kb                          :  1;
     unsigned      mqg17_pool3_256b                          :  1;
     unsigned      mqg17_pool3_2kb                           :  1;
     unsigned      mqg17_pool3_16kb                          :  1;
     unsigned      mqg17_pool3_64kb                          :  1;
     unsigned      mqg17_pool4_256b                          :  1;
     unsigned      mqg17_pool4_2kb                           :  1;
     unsigned      mqg17_pool4_16kb                          :  1;
     unsigned      mqg17_pool4_64kb                          :  1;
     unsigned      mqg17_pool5_256b                          :  1;
     unsigned      mqg17_pool5_2kb                           :  1;
     unsigned      mqg17_pool5_16kb                          :  1;
     unsigned      mqg17_pool5_64kb                          :  1;
     unsigned      mqg17_pool6_256b                          :  1;
     unsigned      mqg17_pool6_2kb                           :  1;
     unsigned      mqg17_pool6_16kb                          :  1;
     unsigned      mqg17_pool6_64kb                          :  1;
     unsigned      mqg17_pool7_256b                          :  1;
     unsigned      mqg17_pool7_2kb                           :  1;
     unsigned      mqg17_pool7_16kb                          :  1;
     unsigned      mqg17_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg17_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg18_gtt_status_r_t
 *  @brief Memory Quota Group 18 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg18_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 18 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg18_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg18_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg18_pool7_64kb                          :  1;
     unsigned      mqg18_pool7_16kb                          :  1;
     unsigned      mqg18_pool7_2kb                           :  1;
     unsigned      mqg18_pool7_256b                          :  1;
     unsigned      mqg18_pool6_64kb                          :  1;
     unsigned      mqg18_pool6_16kb                          :  1;
     unsigned      mqg18_pool6_2kb                           :  1;
     unsigned      mqg18_pool6_256b                          :  1;
     unsigned      mqg18_pool5_64kb                          :  1;
     unsigned      mqg18_pool5_16kb                          :  1;
     unsigned      mqg18_pool5_2kb                           :  1;
     unsigned      mqg18_pool5_256b                          :  1;
     unsigned      mqg18_pool4_64kb                          :  1;
     unsigned      mqg18_pool4_16kb                          :  1;
     unsigned      mqg18_pool4_2kb                           :  1;
     unsigned      mqg18_pool4_256b                          :  1;
     unsigned      mqg18_pool3_64kb                          :  1;
     unsigned      mqg18_pool3_16kb                          :  1;
     unsigned      mqg18_pool3_2kb                           :  1;
     unsigned      mqg18_pool3_256b                          :  1;
     unsigned      mqg18_pool2_64kb                          :  1;
     unsigned      mqg18_pool2_16kb                          :  1;
     unsigned      mqg18_pool2_2kb                           :  1;
     unsigned      mqg18_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg18_pool2_256b                          :  1;
     unsigned      mqg18_pool2_2kb                           :  1;
     unsigned      mqg18_pool2_16kb                          :  1;
     unsigned      mqg18_pool2_64kb                          :  1;
     unsigned      mqg18_pool3_256b                          :  1;
     unsigned      mqg18_pool3_2kb                           :  1;
     unsigned      mqg18_pool3_16kb                          :  1;
     unsigned      mqg18_pool3_64kb                          :  1;
     unsigned      mqg18_pool4_256b                          :  1;
     unsigned      mqg18_pool4_2kb                           :  1;
     unsigned      mqg18_pool4_16kb                          :  1;
     unsigned      mqg18_pool4_64kb                          :  1;
     unsigned      mqg18_pool5_256b                          :  1;
     unsigned      mqg18_pool5_2kb                           :  1;
     unsigned      mqg18_pool5_16kb                          :  1;
     unsigned      mqg18_pool5_64kb                          :  1;
     unsigned      mqg18_pool6_256b                          :  1;
     unsigned      mqg18_pool6_2kb                           :  1;
     unsigned      mqg18_pool6_16kb                          :  1;
     unsigned      mqg18_pool6_64kb                          :  1;
     unsigned      mqg18_pool7_256b                          :  1;
     unsigned      mqg18_pool7_2kb                           :  1;
     unsigned      mqg18_pool7_16kb                          :  1;
     unsigned      mqg18_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg18_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg19_gtt_status_r_t
 *  @brief Memory Quota Group 19 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg19_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 19 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg19_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg19_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg19_pool7_64kb                          :  1;
     unsigned      mqg19_pool7_16kb                          :  1;
     unsigned      mqg19_pool7_2kb                           :  1;
     unsigned      mqg19_pool7_256b                          :  1;
     unsigned      mqg19_pool6_64kb                          :  1;
     unsigned      mqg19_pool6_16kb                          :  1;
     unsigned      mqg19_pool6_2kb                           :  1;
     unsigned      mqg19_pool6_256b                          :  1;
     unsigned      mqg19_pool5_64kb                          :  1;
     unsigned      mqg19_pool5_16kb                          :  1;
     unsigned      mqg19_pool5_2kb                           :  1;
     unsigned      mqg19_pool5_256b                          :  1;
     unsigned      mqg19_pool4_64kb                          :  1;
     unsigned      mqg19_pool4_16kb                          :  1;
     unsigned      mqg19_pool4_2kb                           :  1;
     unsigned      mqg19_pool4_256b                          :  1;
     unsigned      mqg19_pool3_64kb                          :  1;
     unsigned      mqg19_pool3_16kb                          :  1;
     unsigned      mqg19_pool3_2kb                           :  1;
     unsigned      mqg19_pool3_256b                          :  1;
     unsigned      mqg19_pool2_64kb                          :  1;
     unsigned      mqg19_pool2_16kb                          :  1;
     unsigned      mqg19_pool2_2kb                           :  1;
     unsigned      mqg19_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg19_pool2_256b                          :  1;
     unsigned      mqg19_pool2_2kb                           :  1;
     unsigned      mqg19_pool2_16kb                          :  1;
     unsigned      mqg19_pool2_64kb                          :  1;
     unsigned      mqg19_pool3_256b                          :  1;
     unsigned      mqg19_pool3_2kb                           :  1;
     unsigned      mqg19_pool3_16kb                          :  1;
     unsigned      mqg19_pool3_64kb                          :  1;
     unsigned      mqg19_pool4_256b                          :  1;
     unsigned      mqg19_pool4_2kb                           :  1;
     unsigned      mqg19_pool4_16kb                          :  1;
     unsigned      mqg19_pool4_64kb                          :  1;
     unsigned      mqg19_pool5_256b                          :  1;
     unsigned      mqg19_pool5_2kb                           :  1;
     unsigned      mqg19_pool5_16kb                          :  1;
     unsigned      mqg19_pool5_64kb                          :  1;
     unsigned      mqg19_pool6_256b                          :  1;
     unsigned      mqg19_pool6_2kb                           :  1;
     unsigned      mqg19_pool6_16kb                          :  1;
     unsigned      mqg19_pool6_64kb                          :  1;
     unsigned      mqg19_pool7_256b                          :  1;
     unsigned      mqg19_pool7_2kb                           :  1;
     unsigned      mqg19_pool7_16kb                          :  1;
     unsigned      mqg19_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg19_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg20_gtt_status_r_t
 *  @brief Memory Quota Group 20 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg20_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 20 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg20_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg20_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg20_pool7_64kb                          :  1;
     unsigned      mqg20_pool7_16kb                          :  1;
     unsigned      mqg20_pool7_2kb                           :  1;
     unsigned      mqg20_pool7_256b                          :  1;
     unsigned      mqg20_pool6_64kb                          :  1;
     unsigned      mqg20_pool6_16kb                          :  1;
     unsigned      mqg20_pool6_2kb                           :  1;
     unsigned      mqg20_pool6_256b                          :  1;
     unsigned      mqg20_pool5_64kb                          :  1;
     unsigned      mqg20_pool5_16kb                          :  1;
     unsigned      mqg20_pool5_2kb                           :  1;
     unsigned      mqg20_pool5_256b                          :  1;
     unsigned      mqg20_pool4_64kb                          :  1;
     unsigned      mqg20_pool4_16kb                          :  1;
     unsigned      mqg20_pool4_2kb                           :  1;
     unsigned      mqg20_pool4_256b                          :  1;
     unsigned      mqg20_pool3_64kb                          :  1;
     unsigned      mqg20_pool3_16kb                          :  1;
     unsigned      mqg20_pool3_2kb                           :  1;
     unsigned      mqg20_pool3_256b                          :  1;
     unsigned      mqg20_pool2_64kb                          :  1;
     unsigned      mqg20_pool2_16kb                          :  1;
     unsigned      mqg20_pool2_2kb                           :  1;
     unsigned      mqg20_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg20_pool2_256b                          :  1;
     unsigned      mqg20_pool2_2kb                           :  1;
     unsigned      mqg20_pool2_16kb                          :  1;
     unsigned      mqg20_pool2_64kb                          :  1;
     unsigned      mqg20_pool3_256b                          :  1;
     unsigned      mqg20_pool3_2kb                           :  1;
     unsigned      mqg20_pool3_16kb                          :  1;
     unsigned      mqg20_pool3_64kb                          :  1;
     unsigned      mqg20_pool4_256b                          :  1;
     unsigned      mqg20_pool4_2kb                           :  1;
     unsigned      mqg20_pool4_16kb                          :  1;
     unsigned      mqg20_pool4_64kb                          :  1;
     unsigned      mqg20_pool5_256b                          :  1;
     unsigned      mqg20_pool5_2kb                           :  1;
     unsigned      mqg20_pool5_16kb                          :  1;
     unsigned      mqg20_pool5_64kb                          :  1;
     unsigned      mqg20_pool6_256b                          :  1;
     unsigned      mqg20_pool6_2kb                           :  1;
     unsigned      mqg20_pool6_16kb                          :  1;
     unsigned      mqg20_pool6_64kb                          :  1;
     unsigned      mqg20_pool7_256b                          :  1;
     unsigned      mqg20_pool7_2kb                           :  1;
     unsigned      mqg20_pool7_16kb                          :  1;
     unsigned      mqg20_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg20_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg21_gtt_status_r_t
 *  @brief Memory Quota Group 21 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg21_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 21 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg21_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg21_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg21_pool7_64kb                          :  1;
     unsigned      mqg21_pool7_16kb                          :  1;
     unsigned      mqg21_pool7_2kb                           :  1;
     unsigned      mqg21_pool7_256b                          :  1;
     unsigned      mqg21_pool6_64kb                          :  1;
     unsigned      mqg21_pool6_16kb                          :  1;
     unsigned      mqg21_pool6_2kb                           :  1;
     unsigned      mqg21_pool6_256b                          :  1;
     unsigned      mqg21_pool5_64kb                          :  1;
     unsigned      mqg21_pool5_16kb                          :  1;
     unsigned      mqg21_pool5_2kb                           :  1;
     unsigned      mqg21_pool5_256b                          :  1;
     unsigned      mqg21_pool4_64kb                          :  1;
     unsigned      mqg21_pool4_16kb                          :  1;
     unsigned      mqg21_pool4_2kb                           :  1;
     unsigned      mqg21_pool4_256b                          :  1;
     unsigned      mqg21_pool3_64kb                          :  1;
     unsigned      mqg21_pool3_16kb                          :  1;
     unsigned      mqg21_pool3_2kb                           :  1;
     unsigned      mqg21_pool3_256b                          :  1;
     unsigned      mqg21_pool2_64kb                          :  1;
     unsigned      mqg21_pool2_16kb                          :  1;
     unsigned      mqg21_pool2_2kb                           :  1;
     unsigned      mqg21_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg21_pool2_256b                          :  1;
     unsigned      mqg21_pool2_2kb                           :  1;
     unsigned      mqg21_pool2_16kb                          :  1;
     unsigned      mqg21_pool2_64kb                          :  1;
     unsigned      mqg21_pool3_256b                          :  1;
     unsigned      mqg21_pool3_2kb                           :  1;
     unsigned      mqg21_pool3_16kb                          :  1;
     unsigned      mqg21_pool3_64kb                          :  1;
     unsigned      mqg21_pool4_256b                          :  1;
     unsigned      mqg21_pool4_2kb                           :  1;
     unsigned      mqg21_pool4_16kb                          :  1;
     unsigned      mqg21_pool4_64kb                          :  1;
     unsigned      mqg21_pool5_256b                          :  1;
     unsigned      mqg21_pool5_2kb                           :  1;
     unsigned      mqg21_pool5_16kb                          :  1;
     unsigned      mqg21_pool5_64kb                          :  1;
     unsigned      mqg21_pool6_256b                          :  1;
     unsigned      mqg21_pool6_2kb                           :  1;
     unsigned      mqg21_pool6_16kb                          :  1;
     unsigned      mqg21_pool6_64kb                          :  1;
     unsigned      mqg21_pool7_256b                          :  1;
     unsigned      mqg21_pool7_2kb                           :  1;
     unsigned      mqg21_pool7_16kb                          :  1;
     unsigned      mqg21_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg21_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg22_gtt_status_r_t
 *  @brief Memory Quota Group 22 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg22_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 22 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg22_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg22_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg22_pool7_64kb                          :  1;
     unsigned      mqg22_pool7_16kb                          :  1;
     unsigned      mqg22_pool7_2kb                           :  1;
     unsigned      mqg22_pool7_256b                          :  1;
     unsigned      mqg22_pool6_64kb                          :  1;
     unsigned      mqg22_pool6_16kb                          :  1;
     unsigned      mqg22_pool6_2kb                           :  1;
     unsigned      mqg22_pool6_256b                          :  1;
     unsigned      mqg22_pool5_64kb                          :  1;
     unsigned      mqg22_pool5_16kb                          :  1;
     unsigned      mqg22_pool5_2kb                           :  1;
     unsigned      mqg22_pool5_256b                          :  1;
     unsigned      mqg22_pool4_64kb                          :  1;
     unsigned      mqg22_pool4_16kb                          :  1;
     unsigned      mqg22_pool4_2kb                           :  1;
     unsigned      mqg22_pool4_256b                          :  1;
     unsigned      mqg22_pool3_64kb                          :  1;
     unsigned      mqg22_pool3_16kb                          :  1;
     unsigned      mqg22_pool3_2kb                           :  1;
     unsigned      mqg22_pool3_256b                          :  1;
     unsigned      mqg22_pool2_64kb                          :  1;
     unsigned      mqg22_pool2_16kb                          :  1;
     unsigned      mqg22_pool2_2kb                           :  1;
     unsigned      mqg22_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg22_pool2_256b                          :  1;
     unsigned      mqg22_pool2_2kb                           :  1;
     unsigned      mqg22_pool2_16kb                          :  1;
     unsigned      mqg22_pool2_64kb                          :  1;
     unsigned      mqg22_pool3_256b                          :  1;
     unsigned      mqg22_pool3_2kb                           :  1;
     unsigned      mqg22_pool3_16kb                          :  1;
     unsigned      mqg22_pool3_64kb                          :  1;
     unsigned      mqg22_pool4_256b                          :  1;
     unsigned      mqg22_pool4_2kb                           :  1;
     unsigned      mqg22_pool4_16kb                          :  1;
     unsigned      mqg22_pool4_64kb                          :  1;
     unsigned      mqg22_pool5_256b                          :  1;
     unsigned      mqg22_pool5_2kb                           :  1;
     unsigned      mqg22_pool5_16kb                          :  1;
     unsigned      mqg22_pool5_64kb                          :  1;
     unsigned      mqg22_pool6_256b                          :  1;
     unsigned      mqg22_pool6_2kb                           :  1;
     unsigned      mqg22_pool6_16kb                          :  1;
     unsigned      mqg22_pool6_64kb                          :  1;
     unsigned      mqg22_pool7_256b                          :  1;
     unsigned      mqg22_pool7_2kb                           :  1;
     unsigned      mqg22_pool7_16kb                          :  1;
     unsigned      mqg22_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg22_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg23_gtt_status_r_t
 *  @brief Memory Quota Group 23 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg23_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 23 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg23_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg23_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg23_pool7_64kb                          :  1;
     unsigned      mqg23_pool7_16kb                          :  1;
     unsigned      mqg23_pool7_2kb                           :  1;
     unsigned      mqg23_pool7_256b                          :  1;
     unsigned      mqg23_pool6_64kb                          :  1;
     unsigned      mqg23_pool6_16kb                          :  1;
     unsigned      mqg23_pool6_2kb                           :  1;
     unsigned      mqg23_pool6_256b                          :  1;
     unsigned      mqg23_pool5_64kb                          :  1;
     unsigned      mqg23_pool5_16kb                          :  1;
     unsigned      mqg23_pool5_2kb                           :  1;
     unsigned      mqg23_pool5_256b                          :  1;
     unsigned      mqg23_pool4_64kb                          :  1;
     unsigned      mqg23_pool4_16kb                          :  1;
     unsigned      mqg23_pool4_2kb                           :  1;
     unsigned      mqg23_pool4_256b                          :  1;
     unsigned      mqg23_pool3_64kb                          :  1;
     unsigned      mqg23_pool3_16kb                          :  1;
     unsigned      mqg23_pool3_2kb                           :  1;
     unsigned      mqg23_pool3_256b                          :  1;
     unsigned      mqg23_pool2_64kb                          :  1;
     unsigned      mqg23_pool2_16kb                          :  1;
     unsigned      mqg23_pool2_2kb                           :  1;
     unsigned      mqg23_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg23_pool2_256b                          :  1;
     unsigned      mqg23_pool2_2kb                           :  1;
     unsigned      mqg23_pool2_16kb                          :  1;
     unsigned      mqg23_pool2_64kb                          :  1;
     unsigned      mqg23_pool3_256b                          :  1;
     unsigned      mqg23_pool3_2kb                           :  1;
     unsigned      mqg23_pool3_16kb                          :  1;
     unsigned      mqg23_pool3_64kb                          :  1;
     unsigned      mqg23_pool4_256b                          :  1;
     unsigned      mqg23_pool4_2kb                           :  1;
     unsigned      mqg23_pool4_16kb                          :  1;
     unsigned      mqg23_pool4_64kb                          :  1;
     unsigned      mqg23_pool5_256b                          :  1;
     unsigned      mqg23_pool5_2kb                           :  1;
     unsigned      mqg23_pool5_16kb                          :  1;
     unsigned      mqg23_pool5_64kb                          :  1;
     unsigned      mqg23_pool6_256b                          :  1;
     unsigned      mqg23_pool6_2kb                           :  1;
     unsigned      mqg23_pool6_16kb                          :  1;
     unsigned      mqg23_pool6_64kb                          :  1;
     unsigned      mqg23_pool7_256b                          :  1;
     unsigned      mqg23_pool7_2kb                           :  1;
     unsigned      mqg23_pool7_16kb                          :  1;
     unsigned      mqg23_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg23_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg24_gtt_status_r_t
 *  @brief Memory Quota Group 24 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg24_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 24 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg24_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg24_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg24_pool7_64kb                          :  1;
     unsigned      mqg24_pool7_16kb                          :  1;
     unsigned      mqg24_pool7_2kb                           :  1;
     unsigned      mqg24_pool7_256b                          :  1;
     unsigned      mqg24_pool6_64kb                          :  1;
     unsigned      mqg24_pool6_16kb                          :  1;
     unsigned      mqg24_pool6_2kb                           :  1;
     unsigned      mqg24_pool6_256b                          :  1;
     unsigned      mqg24_pool5_64kb                          :  1;
     unsigned      mqg24_pool5_16kb                          :  1;
     unsigned      mqg24_pool5_2kb                           :  1;
     unsigned      mqg24_pool5_256b                          :  1;
     unsigned      mqg24_pool4_64kb                          :  1;
     unsigned      mqg24_pool4_16kb                          :  1;
     unsigned      mqg24_pool4_2kb                           :  1;
     unsigned      mqg24_pool4_256b                          :  1;
     unsigned      mqg24_pool3_64kb                          :  1;
     unsigned      mqg24_pool3_16kb                          :  1;
     unsigned      mqg24_pool3_2kb                           :  1;
     unsigned      mqg24_pool3_256b                          :  1;
     unsigned      mqg24_pool2_64kb                          :  1;
     unsigned      mqg24_pool2_16kb                          :  1;
     unsigned      mqg24_pool2_2kb                           :  1;
     unsigned      mqg24_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg24_pool2_256b                          :  1;
     unsigned      mqg24_pool2_2kb                           :  1;
     unsigned      mqg24_pool2_16kb                          :  1;
     unsigned      mqg24_pool2_64kb                          :  1;
     unsigned      mqg24_pool3_256b                          :  1;
     unsigned      mqg24_pool3_2kb                           :  1;
     unsigned      mqg24_pool3_16kb                          :  1;
     unsigned      mqg24_pool3_64kb                          :  1;
     unsigned      mqg24_pool4_256b                          :  1;
     unsigned      mqg24_pool4_2kb                           :  1;
     unsigned      mqg24_pool4_16kb                          :  1;
     unsigned      mqg24_pool4_64kb                          :  1;
     unsigned      mqg24_pool5_256b                          :  1;
     unsigned      mqg24_pool5_2kb                           :  1;
     unsigned      mqg24_pool5_16kb                          :  1;
     unsigned      mqg24_pool5_64kb                          :  1;
     unsigned      mqg24_pool6_256b                          :  1;
     unsigned      mqg24_pool6_2kb                           :  1;
     unsigned      mqg24_pool6_16kb                          :  1;
     unsigned      mqg24_pool6_64kb                          :  1;
     unsigned      mqg24_pool7_256b                          :  1;
     unsigned      mqg24_pool7_2kb                           :  1;
     unsigned      mqg24_pool7_16kb                          :  1;
     unsigned      mqg24_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg24_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg25_gtt_status_r_t
 *  @brief Memory Quota Group 25 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg25_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 25 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg25_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg25_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg25_pool7_64kb                          :  1;
     unsigned      mqg25_pool7_16kb                          :  1;
     unsigned      mqg25_pool7_2kb                           :  1;
     unsigned      mqg25_pool7_256b                          :  1;
     unsigned      mqg25_pool6_64kb                          :  1;
     unsigned      mqg25_pool6_16kb                          :  1;
     unsigned      mqg25_pool6_2kb                           :  1;
     unsigned      mqg25_pool6_256b                          :  1;
     unsigned      mqg25_pool5_64kb                          :  1;
     unsigned      mqg25_pool5_16kb                          :  1;
     unsigned      mqg25_pool5_2kb                           :  1;
     unsigned      mqg25_pool5_256b                          :  1;
     unsigned      mqg25_pool4_64kb                          :  1;
     unsigned      mqg25_pool4_16kb                          :  1;
     unsigned      mqg25_pool4_2kb                           :  1;
     unsigned      mqg25_pool4_256b                          :  1;
     unsigned      mqg25_pool3_64kb                          :  1;
     unsigned      mqg25_pool3_16kb                          :  1;
     unsigned      mqg25_pool3_2kb                           :  1;
     unsigned      mqg25_pool3_256b                          :  1;
     unsigned      mqg25_pool2_64kb                          :  1;
     unsigned      mqg25_pool2_16kb                          :  1;
     unsigned      mqg25_pool2_2kb                           :  1;
     unsigned      mqg25_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg25_pool2_256b                          :  1;
     unsigned      mqg25_pool2_2kb                           :  1;
     unsigned      mqg25_pool2_16kb                          :  1;
     unsigned      mqg25_pool2_64kb                          :  1;
     unsigned      mqg25_pool3_256b                          :  1;
     unsigned      mqg25_pool3_2kb                           :  1;
     unsigned      mqg25_pool3_16kb                          :  1;
     unsigned      mqg25_pool3_64kb                          :  1;
     unsigned      mqg25_pool4_256b                          :  1;
     unsigned      mqg25_pool4_2kb                           :  1;
     unsigned      mqg25_pool4_16kb                          :  1;
     unsigned      mqg25_pool4_64kb                          :  1;
     unsigned      mqg25_pool5_256b                          :  1;
     unsigned      mqg25_pool5_2kb                           :  1;
     unsigned      mqg25_pool5_16kb                          :  1;
     unsigned      mqg25_pool5_64kb                          :  1;
     unsigned      mqg25_pool6_256b                          :  1;
     unsigned      mqg25_pool6_2kb                           :  1;
     unsigned      mqg25_pool6_16kb                          :  1;
     unsigned      mqg25_pool6_64kb                          :  1;
     unsigned      mqg25_pool7_256b                          :  1;
     unsigned      mqg25_pool7_2kb                           :  1;
     unsigned      mqg25_pool7_16kb                          :  1;
     unsigned      mqg25_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg25_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg26_gtt_status_r_t
 *  @brief Memory Quota Group 26 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg26_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 26 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg26_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg26_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg26_pool7_64kb                          :  1;
     unsigned      mqg26_pool7_16kb                          :  1;
     unsigned      mqg26_pool7_2kb                           :  1;
     unsigned      mqg26_pool7_256b                          :  1;
     unsigned      mqg26_pool6_64kb                          :  1;
     unsigned      mqg26_pool6_16kb                          :  1;
     unsigned      mqg26_pool6_2kb                           :  1;
     unsigned      mqg26_pool6_256b                          :  1;
     unsigned      mqg26_pool5_64kb                          :  1;
     unsigned      mqg26_pool5_16kb                          :  1;
     unsigned      mqg26_pool5_2kb                           :  1;
     unsigned      mqg26_pool5_256b                          :  1;
     unsigned      mqg26_pool4_64kb                          :  1;
     unsigned      mqg26_pool4_16kb                          :  1;
     unsigned      mqg26_pool4_2kb                           :  1;
     unsigned      mqg26_pool4_256b                          :  1;
     unsigned      mqg26_pool3_64kb                          :  1;
     unsigned      mqg26_pool3_16kb                          :  1;
     unsigned      mqg26_pool3_2kb                           :  1;
     unsigned      mqg26_pool3_256b                          :  1;
     unsigned      mqg26_pool2_64kb                          :  1;
     unsigned      mqg26_pool2_16kb                          :  1;
     unsigned      mqg26_pool2_2kb                           :  1;
     unsigned      mqg26_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg26_pool2_256b                          :  1;
     unsigned      mqg26_pool2_2kb                           :  1;
     unsigned      mqg26_pool2_16kb                          :  1;
     unsigned      mqg26_pool2_64kb                          :  1;
     unsigned      mqg26_pool3_256b                          :  1;
     unsigned      mqg26_pool3_2kb                           :  1;
     unsigned      mqg26_pool3_16kb                          :  1;
     unsigned      mqg26_pool3_64kb                          :  1;
     unsigned      mqg26_pool4_256b                          :  1;
     unsigned      mqg26_pool4_2kb                           :  1;
     unsigned      mqg26_pool4_16kb                          :  1;
     unsigned      mqg26_pool4_64kb                          :  1;
     unsigned      mqg26_pool5_256b                          :  1;
     unsigned      mqg26_pool5_2kb                           :  1;
     unsigned      mqg26_pool5_16kb                          :  1;
     unsigned      mqg26_pool5_64kb                          :  1;
     unsigned      mqg26_pool6_256b                          :  1;
     unsigned      mqg26_pool6_2kb                           :  1;
     unsigned      mqg26_pool6_16kb                          :  1;
     unsigned      mqg26_pool6_64kb                          :  1;
     unsigned      mqg26_pool7_256b                          :  1;
     unsigned      mqg26_pool7_2kb                           :  1;
     unsigned      mqg26_pool7_16kb                          :  1;
     unsigned      mqg26_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg26_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg27_gtt_status_r_t
 *  @brief Memory Quota Group 27 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg27_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 27 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg27_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg27_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg27_pool7_64kb                          :  1;
     unsigned      mqg27_pool7_16kb                          :  1;
     unsigned      mqg27_pool7_2kb                           :  1;
     unsigned      mqg27_pool7_256b                          :  1;
     unsigned      mqg27_pool6_64kb                          :  1;
     unsigned      mqg27_pool6_16kb                          :  1;
     unsigned      mqg27_pool6_2kb                           :  1;
     unsigned      mqg27_pool6_256b                          :  1;
     unsigned      mqg27_pool5_64kb                          :  1;
     unsigned      mqg27_pool5_16kb                          :  1;
     unsigned      mqg27_pool5_2kb                           :  1;
     unsigned      mqg27_pool5_256b                          :  1;
     unsigned      mqg27_pool4_64kb                          :  1;
     unsigned      mqg27_pool4_16kb                          :  1;
     unsigned      mqg27_pool4_2kb                           :  1;
     unsigned      mqg27_pool4_256b                          :  1;
     unsigned      mqg27_pool3_64kb                          :  1;
     unsigned      mqg27_pool3_16kb                          :  1;
     unsigned      mqg27_pool3_2kb                           :  1;
     unsigned      mqg27_pool3_256b                          :  1;
     unsigned      mqg27_pool2_64kb                          :  1;
     unsigned      mqg27_pool2_16kb                          :  1;
     unsigned      mqg27_pool2_2kb                           :  1;
     unsigned      mqg27_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg27_pool2_256b                          :  1;
     unsigned      mqg27_pool2_2kb                           :  1;
     unsigned      mqg27_pool2_16kb                          :  1;
     unsigned      mqg27_pool2_64kb                          :  1;
     unsigned      mqg27_pool3_256b                          :  1;
     unsigned      mqg27_pool3_2kb                           :  1;
     unsigned      mqg27_pool3_16kb                          :  1;
     unsigned      mqg27_pool3_64kb                          :  1;
     unsigned      mqg27_pool4_256b                          :  1;
     unsigned      mqg27_pool4_2kb                           :  1;
     unsigned      mqg27_pool4_16kb                          :  1;
     unsigned      mqg27_pool4_64kb                          :  1;
     unsigned      mqg27_pool5_256b                          :  1;
     unsigned      mqg27_pool5_2kb                           :  1;
     unsigned      mqg27_pool5_16kb                          :  1;
     unsigned      mqg27_pool5_64kb                          :  1;
     unsigned      mqg27_pool6_256b                          :  1;
     unsigned      mqg27_pool6_2kb                           :  1;
     unsigned      mqg27_pool6_16kb                          :  1;
     unsigned      mqg27_pool6_64kb                          :  1;
     unsigned      mqg27_pool7_256b                          :  1;
     unsigned      mqg27_pool7_2kb                           :  1;
     unsigned      mqg27_pool7_16kb                          :  1;
     unsigned      mqg27_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg27_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg28_gtt_status_r_t
 *  @brief Memory Quota Group 28 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg28_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 28 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg28_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg28_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg28_pool7_64kb                          :  1;
     unsigned      mqg28_pool7_16kb                          :  1;
     unsigned      mqg28_pool7_2kb                           :  1;
     unsigned      mqg28_pool7_256b                          :  1;
     unsigned      mqg28_pool6_64kb                          :  1;
     unsigned      mqg28_pool6_16kb                          :  1;
     unsigned      mqg28_pool6_2kb                           :  1;
     unsigned      mqg28_pool6_256b                          :  1;
     unsigned      mqg28_pool5_64kb                          :  1;
     unsigned      mqg28_pool5_16kb                          :  1;
     unsigned      mqg28_pool5_2kb                           :  1;
     unsigned      mqg28_pool5_256b                          :  1;
     unsigned      mqg28_pool4_64kb                          :  1;
     unsigned      mqg28_pool4_16kb                          :  1;
     unsigned      mqg28_pool4_2kb                           :  1;
     unsigned      mqg28_pool4_256b                          :  1;
     unsigned      mqg28_pool3_64kb                          :  1;
     unsigned      mqg28_pool3_16kb                          :  1;
     unsigned      mqg28_pool3_2kb                           :  1;
     unsigned      mqg28_pool3_256b                          :  1;
     unsigned      mqg28_pool2_64kb                          :  1;
     unsigned      mqg28_pool2_16kb                          :  1;
     unsigned      mqg28_pool2_2kb                           :  1;
     unsigned      mqg28_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg28_pool2_256b                          :  1;
     unsigned      mqg28_pool2_2kb                           :  1;
     unsigned      mqg28_pool2_16kb                          :  1;
     unsigned      mqg28_pool2_64kb                          :  1;
     unsigned      mqg28_pool3_256b                          :  1;
     unsigned      mqg28_pool3_2kb                           :  1;
     unsigned      mqg28_pool3_16kb                          :  1;
     unsigned      mqg28_pool3_64kb                          :  1;
     unsigned      mqg28_pool4_256b                          :  1;
     unsigned      mqg28_pool4_2kb                           :  1;
     unsigned      mqg28_pool4_16kb                          :  1;
     unsigned      mqg28_pool4_64kb                          :  1;
     unsigned      mqg28_pool5_256b                          :  1;
     unsigned      mqg28_pool5_2kb                           :  1;
     unsigned      mqg28_pool5_16kb                          :  1;
     unsigned      mqg28_pool5_64kb                          :  1;
     unsigned      mqg28_pool6_256b                          :  1;
     unsigned      mqg28_pool6_2kb                           :  1;
     unsigned      mqg28_pool6_16kb                          :  1;
     unsigned      mqg28_pool6_64kb                          :  1;
     unsigned      mqg28_pool7_256b                          :  1;
     unsigned      mqg28_pool7_2kb                           :  1;
     unsigned      mqg28_pool7_16kb                          :  1;
     unsigned      mqg28_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg28_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg29_gtt_status_r_t
 *  @brief Memory Quota Group 29 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg29_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 29 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg29_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg29_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg29_pool7_64kb                          :  1;
     unsigned      mqg29_pool7_16kb                          :  1;
     unsigned      mqg29_pool7_2kb                           :  1;
     unsigned      mqg29_pool7_256b                          :  1;
     unsigned      mqg29_pool6_64kb                          :  1;
     unsigned      mqg29_pool6_16kb                          :  1;
     unsigned      mqg29_pool6_2kb                           :  1;
     unsigned      mqg29_pool6_256b                          :  1;
     unsigned      mqg29_pool5_64kb                          :  1;
     unsigned      mqg29_pool5_16kb                          :  1;
     unsigned      mqg29_pool5_2kb                           :  1;
     unsigned      mqg29_pool5_256b                          :  1;
     unsigned      mqg29_pool4_64kb                          :  1;
     unsigned      mqg29_pool4_16kb                          :  1;
     unsigned      mqg29_pool4_2kb                           :  1;
     unsigned      mqg29_pool4_256b                          :  1;
     unsigned      mqg29_pool3_64kb                          :  1;
     unsigned      mqg29_pool3_16kb                          :  1;
     unsigned      mqg29_pool3_2kb                           :  1;
     unsigned      mqg29_pool3_256b                          :  1;
     unsigned      mqg29_pool2_64kb                          :  1;
     unsigned      mqg29_pool2_16kb                          :  1;
     unsigned      mqg29_pool2_2kb                           :  1;
     unsigned      mqg29_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg29_pool2_256b                          :  1;
     unsigned      mqg29_pool2_2kb                           :  1;
     unsigned      mqg29_pool2_16kb                          :  1;
     unsigned      mqg29_pool2_64kb                          :  1;
     unsigned      mqg29_pool3_256b                          :  1;
     unsigned      mqg29_pool3_2kb                           :  1;
     unsigned      mqg29_pool3_16kb                          :  1;
     unsigned      mqg29_pool3_64kb                          :  1;
     unsigned      mqg29_pool4_256b                          :  1;
     unsigned      mqg29_pool4_2kb                           :  1;
     unsigned      mqg29_pool4_16kb                          :  1;
     unsigned      mqg29_pool4_64kb                          :  1;
     unsigned      mqg29_pool5_256b                          :  1;
     unsigned      mqg29_pool5_2kb                           :  1;
     unsigned      mqg29_pool5_16kb                          :  1;
     unsigned      mqg29_pool5_64kb                          :  1;
     unsigned      mqg29_pool6_256b                          :  1;
     unsigned      mqg29_pool6_2kb                           :  1;
     unsigned      mqg29_pool6_16kb                          :  1;
     unsigned      mqg29_pool6_64kb                          :  1;
     unsigned      mqg29_pool7_256b                          :  1;
     unsigned      mqg29_pool7_2kb                           :  1;
     unsigned      mqg29_pool7_16kb                          :  1;
     unsigned      mqg29_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg29_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg30_gtt_status_r_t
 *  @brief Memory Quota Group 30 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg30_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 30 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg30_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg30_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg30_pool7_64kb                          :  1;
     unsigned      mqg30_pool7_16kb                          :  1;
     unsigned      mqg30_pool7_2kb                           :  1;
     unsigned      mqg30_pool7_256b                          :  1;
     unsigned      mqg30_pool6_64kb                          :  1;
     unsigned      mqg30_pool6_16kb                          :  1;
     unsigned      mqg30_pool6_2kb                           :  1;
     unsigned      mqg30_pool6_256b                          :  1;
     unsigned      mqg30_pool5_64kb                          :  1;
     unsigned      mqg30_pool5_16kb                          :  1;
     unsigned      mqg30_pool5_2kb                           :  1;
     unsigned      mqg30_pool5_256b                          :  1;
     unsigned      mqg30_pool4_64kb                          :  1;
     unsigned      mqg30_pool4_16kb                          :  1;
     unsigned      mqg30_pool4_2kb                           :  1;
     unsigned      mqg30_pool4_256b                          :  1;
     unsigned      mqg30_pool3_64kb                          :  1;
     unsigned      mqg30_pool3_16kb                          :  1;
     unsigned      mqg30_pool3_2kb                           :  1;
     unsigned      mqg30_pool3_256b                          :  1;
     unsigned      mqg30_pool2_64kb                          :  1;
     unsigned      mqg30_pool2_16kb                          :  1;
     unsigned      mqg30_pool2_2kb                           :  1;
     unsigned      mqg30_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg30_pool2_256b                          :  1;
     unsigned      mqg30_pool2_2kb                           :  1;
     unsigned      mqg30_pool2_16kb                          :  1;
     unsigned      mqg30_pool2_64kb                          :  1;
     unsigned      mqg30_pool3_256b                          :  1;
     unsigned      mqg30_pool3_2kb                           :  1;
     unsigned      mqg30_pool3_16kb                          :  1;
     unsigned      mqg30_pool3_64kb                          :  1;
     unsigned      mqg30_pool4_256b                          :  1;
     unsigned      mqg30_pool4_2kb                           :  1;
     unsigned      mqg30_pool4_16kb                          :  1;
     unsigned      mqg30_pool4_64kb                          :  1;
     unsigned      mqg30_pool5_256b                          :  1;
     unsigned      mqg30_pool5_2kb                           :  1;
     unsigned      mqg30_pool5_16kb                          :  1;
     unsigned      mqg30_pool5_64kb                          :  1;
     unsigned      mqg30_pool6_256b                          :  1;
     unsigned      mqg30_pool6_2kb                           :  1;
     unsigned      mqg30_pool6_16kb                          :  1;
     unsigned      mqg30_pool6_64kb                          :  1;
     unsigned      mqg30_pool7_256b                          :  1;
     unsigned      mqg30_pool7_2kb                           :  1;
     unsigned      mqg30_pool7_16kb                          :  1;
     unsigned      mqg30_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg30_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg31_gtt_status_r_t
 *  @brief Memory Quota Group 31 Greater Than Threshold Status Register
 *  @details This register holds read-only status for the >= threshold status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg31_gtt_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 7, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 7, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 7, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 7, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 6, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 6, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 6, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 6, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 5, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 5, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 5, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 5, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 4, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 4, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 4, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 4, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 3, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 3, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 3, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 3, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 2, 64KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 2, 16KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 2, 2KB
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 31 allocated blocks >= threshold for pool 2, 256B
 *        blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg31_gtt_status_r_t
 *
 * Implemented by: 
 *      mqg31_gtt_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_pool7_64kb                          :  1;
     unsigned      mqg31_pool7_16kb                          :  1;
     unsigned      mqg31_pool7_2kb                           :  1;
     unsigned      mqg31_pool7_256b                          :  1;
     unsigned      mqg31_pool6_64kb                          :  1;
     unsigned      mqg31_pool6_16kb                          :  1;
     unsigned      mqg31_pool6_2kb                           :  1;
     unsigned      mqg31_pool6_256b                          :  1;
     unsigned      mqg31_pool5_64kb                          :  1;
     unsigned      mqg31_pool5_16kb                          :  1;
     unsigned      mqg31_pool5_2kb                           :  1;
     unsigned      mqg31_pool5_256b                          :  1;
     unsigned      mqg31_pool4_64kb                          :  1;
     unsigned      mqg31_pool4_16kb                          :  1;
     unsigned      mqg31_pool4_2kb                           :  1;
     unsigned      mqg31_pool4_256b                          :  1;
     unsigned      mqg31_pool3_64kb                          :  1;
     unsigned      mqg31_pool3_16kb                          :  1;
     unsigned      mqg31_pool3_2kb                           :  1;
     unsigned      mqg31_pool3_256b                          :  1;
     unsigned      mqg31_pool2_64kb                          :  1;
     unsigned      mqg31_pool2_16kb                          :  1;
     unsigned      mqg31_pool2_2kb                           :  1;
     unsigned      mqg31_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg31_pool2_256b                          :  1;
     unsigned      mqg31_pool2_2kb                           :  1;
     unsigned      mqg31_pool2_16kb                          :  1;
     unsigned      mqg31_pool2_64kb                          :  1;
     unsigned      mqg31_pool3_256b                          :  1;
     unsigned      mqg31_pool3_2kb                           :  1;
     unsigned      mqg31_pool3_16kb                          :  1;
     unsigned      mqg31_pool3_64kb                          :  1;
     unsigned      mqg31_pool4_256b                          :  1;
     unsigned      mqg31_pool4_2kb                           :  1;
     unsigned      mqg31_pool4_16kb                          :  1;
     unsigned      mqg31_pool4_64kb                          :  1;
     unsigned      mqg31_pool5_256b                          :  1;
     unsigned      mqg31_pool5_2kb                           :  1;
     unsigned      mqg31_pool5_16kb                          :  1;
     unsigned      mqg31_pool5_64kb                          :  1;
     unsigned      mqg31_pool6_256b                          :  1;
     unsigned      mqg31_pool6_2kb                           :  1;
     unsigned      mqg31_pool6_16kb                          :  1;
     unsigned      mqg31_pool6_64kb                          :  1;
     unsigned      mqg31_pool7_256b                          :  1;
     unsigned      mqg31_pool7_2kb                           :  1;
     unsigned      mqg31_pool7_16kb                          :  1;
     unsigned      mqg31_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg31_gtt_status_r_t;

/*! @struct ncp_nca_mtp_mqg0_gtm_status_r_t
 *  @brief Memory Quota Group 0 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg0_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 0 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg0_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg0_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg0_pool7_64kb                           :  1;
     unsigned      mqg0_pool7_16kb                           :  1;
     unsigned      mqg0_pool7_2kb                            :  1;
     unsigned      mqg0_pool7_256b                           :  1;
     unsigned      mqg0_pool6_64kb                           :  1;
     unsigned      mqg0_pool6_16kb                           :  1;
     unsigned      mqg0_pool6_2kb                            :  1;
     unsigned      mqg0_pool6_256b                           :  1;
     unsigned      mqg0_pool5_64kb                           :  1;
     unsigned      mqg0_pool5_16kb                           :  1;
     unsigned      mqg0_pool5_2kb                            :  1;
     unsigned      mqg0_pool5_256b                           :  1;
     unsigned      mqg0_pool4_64kb                           :  1;
     unsigned      mqg0_pool4_16kb                           :  1;
     unsigned      mqg0_pool4_2kb                            :  1;
     unsigned      mqg0_pool4_256b                           :  1;
     unsigned      mqg0_pool3_64kb                           :  1;
     unsigned      mqg0_pool3_16kb                           :  1;
     unsigned      mqg0_pool3_2kb                            :  1;
     unsigned      mqg0_pool3_256b                           :  1;
     unsigned      mqg0_pool2_64kb                           :  1;
     unsigned      mqg0_pool2_16kb                           :  1;
     unsigned      mqg0_pool2_2kb                            :  1;
     unsigned      mqg0_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg0_pool2_256b                           :  1;
     unsigned      mqg0_pool2_2kb                            :  1;
     unsigned      mqg0_pool2_16kb                           :  1;
     unsigned      mqg0_pool2_64kb                           :  1;
     unsigned      mqg0_pool3_256b                           :  1;
     unsigned      mqg0_pool3_2kb                            :  1;
     unsigned      mqg0_pool3_16kb                           :  1;
     unsigned      mqg0_pool3_64kb                           :  1;
     unsigned      mqg0_pool4_256b                           :  1;
     unsigned      mqg0_pool4_2kb                            :  1;
     unsigned      mqg0_pool4_16kb                           :  1;
     unsigned      mqg0_pool4_64kb                           :  1;
     unsigned      mqg0_pool5_256b                           :  1;
     unsigned      mqg0_pool5_2kb                            :  1;
     unsigned      mqg0_pool5_16kb                           :  1;
     unsigned      mqg0_pool5_64kb                           :  1;
     unsigned      mqg0_pool6_256b                           :  1;
     unsigned      mqg0_pool6_2kb                            :  1;
     unsigned      mqg0_pool6_16kb                           :  1;
     unsigned      mqg0_pool6_64kb                           :  1;
     unsigned      mqg0_pool7_256b                           :  1;
     unsigned      mqg0_pool7_2kb                            :  1;
     unsigned      mqg0_pool7_16kb                           :  1;
     unsigned      mqg0_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg0_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg1_gtm_status_r_t
 *  @brief Memory Quota Group 1 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg1_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 1 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg1_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg1_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg1_pool7_64kb                           :  1;
     unsigned      mqg1_pool7_16kb                           :  1;
     unsigned      mqg1_pool7_2kb                            :  1;
     unsigned      mqg1_pool7_256b                           :  1;
     unsigned      mqg1_pool6_64kb                           :  1;
     unsigned      mqg1_pool6_16kb                           :  1;
     unsigned      mqg1_pool6_2kb                            :  1;
     unsigned      mqg1_pool6_256b                           :  1;
     unsigned      mqg1_pool5_64kb                           :  1;
     unsigned      mqg1_pool5_16kb                           :  1;
     unsigned      mqg1_pool5_2kb                            :  1;
     unsigned      mqg1_pool5_256b                           :  1;
     unsigned      mqg1_pool4_64kb                           :  1;
     unsigned      mqg1_pool4_16kb                           :  1;
     unsigned      mqg1_pool4_2kb                            :  1;
     unsigned      mqg1_pool4_256b                           :  1;
     unsigned      mqg1_pool3_64kb                           :  1;
     unsigned      mqg1_pool3_16kb                           :  1;
     unsigned      mqg1_pool3_2kb                            :  1;
     unsigned      mqg1_pool3_256b                           :  1;
     unsigned      mqg1_pool2_64kb                           :  1;
     unsigned      mqg1_pool2_16kb                           :  1;
     unsigned      mqg1_pool2_2kb                            :  1;
     unsigned      mqg1_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg1_pool2_256b                           :  1;
     unsigned      mqg1_pool2_2kb                            :  1;
     unsigned      mqg1_pool2_16kb                           :  1;
     unsigned      mqg1_pool2_64kb                           :  1;
     unsigned      mqg1_pool3_256b                           :  1;
     unsigned      mqg1_pool3_2kb                            :  1;
     unsigned      mqg1_pool3_16kb                           :  1;
     unsigned      mqg1_pool3_64kb                           :  1;
     unsigned      mqg1_pool4_256b                           :  1;
     unsigned      mqg1_pool4_2kb                            :  1;
     unsigned      mqg1_pool4_16kb                           :  1;
     unsigned      mqg1_pool4_64kb                           :  1;
     unsigned      mqg1_pool5_256b                           :  1;
     unsigned      mqg1_pool5_2kb                            :  1;
     unsigned      mqg1_pool5_16kb                           :  1;
     unsigned      mqg1_pool5_64kb                           :  1;
     unsigned      mqg1_pool6_256b                           :  1;
     unsigned      mqg1_pool6_2kb                            :  1;
     unsigned      mqg1_pool6_16kb                           :  1;
     unsigned      mqg1_pool6_64kb                           :  1;
     unsigned      mqg1_pool7_256b                           :  1;
     unsigned      mqg1_pool7_2kb                            :  1;
     unsigned      mqg1_pool7_16kb                           :  1;
     unsigned      mqg1_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg1_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg2_gtm_status_r_t
 *  @brief Memory Quota Group 2 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg2_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 2 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg2_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg2_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg2_pool7_64kb                           :  1;
     unsigned      mqg2_pool7_16kb                           :  1;
     unsigned      mqg2_pool7_2kb                            :  1;
     unsigned      mqg2_pool7_256b                           :  1;
     unsigned      mqg2_pool6_64kb                           :  1;
     unsigned      mqg2_pool6_16kb                           :  1;
     unsigned      mqg2_pool6_2kb                            :  1;
     unsigned      mqg2_pool6_256b                           :  1;
     unsigned      mqg2_pool5_64kb                           :  1;
     unsigned      mqg2_pool5_16kb                           :  1;
     unsigned      mqg2_pool5_2kb                            :  1;
     unsigned      mqg2_pool5_256b                           :  1;
     unsigned      mqg2_pool4_64kb                           :  1;
     unsigned      mqg2_pool4_16kb                           :  1;
     unsigned      mqg2_pool4_2kb                            :  1;
     unsigned      mqg2_pool4_256b                           :  1;
     unsigned      mqg2_pool3_64kb                           :  1;
     unsigned      mqg2_pool3_16kb                           :  1;
     unsigned      mqg2_pool3_2kb                            :  1;
     unsigned      mqg2_pool3_256b                           :  1;
     unsigned      mqg2_pool2_64kb                           :  1;
     unsigned      mqg2_pool2_16kb                           :  1;
     unsigned      mqg2_pool2_2kb                            :  1;
     unsigned      mqg2_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg2_pool2_256b                           :  1;
     unsigned      mqg2_pool2_2kb                            :  1;
     unsigned      mqg2_pool2_16kb                           :  1;
     unsigned      mqg2_pool2_64kb                           :  1;
     unsigned      mqg2_pool3_256b                           :  1;
     unsigned      mqg2_pool3_2kb                            :  1;
     unsigned      mqg2_pool3_16kb                           :  1;
     unsigned      mqg2_pool3_64kb                           :  1;
     unsigned      mqg2_pool4_256b                           :  1;
     unsigned      mqg2_pool4_2kb                            :  1;
     unsigned      mqg2_pool4_16kb                           :  1;
     unsigned      mqg2_pool4_64kb                           :  1;
     unsigned      mqg2_pool5_256b                           :  1;
     unsigned      mqg2_pool5_2kb                            :  1;
     unsigned      mqg2_pool5_16kb                           :  1;
     unsigned      mqg2_pool5_64kb                           :  1;
     unsigned      mqg2_pool6_256b                           :  1;
     unsigned      mqg2_pool6_2kb                            :  1;
     unsigned      mqg2_pool6_16kb                           :  1;
     unsigned      mqg2_pool6_64kb                           :  1;
     unsigned      mqg2_pool7_256b                           :  1;
     unsigned      mqg2_pool7_2kb                            :  1;
     unsigned      mqg2_pool7_16kb                           :  1;
     unsigned      mqg2_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg2_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg3_gtm_status_r_t
 *  @brief Memory Quota Group 3 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg3_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 3 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg3_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg3_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg3_pool7_64kb                           :  1;
     unsigned      mqg3_pool7_16kb                           :  1;
     unsigned      mqg3_pool7_2kb                            :  1;
     unsigned      mqg3_pool7_256b                           :  1;
     unsigned      mqg3_pool6_64kb                           :  1;
     unsigned      mqg3_pool6_16kb                           :  1;
     unsigned      mqg3_pool6_2kb                            :  1;
     unsigned      mqg3_pool6_256b                           :  1;
     unsigned      mqg3_pool5_64kb                           :  1;
     unsigned      mqg3_pool5_16kb                           :  1;
     unsigned      mqg3_pool5_2kb                            :  1;
     unsigned      mqg3_pool5_256b                           :  1;
     unsigned      mqg3_pool4_64kb                           :  1;
     unsigned      mqg3_pool4_16kb                           :  1;
     unsigned      mqg3_pool4_2kb                            :  1;
     unsigned      mqg3_pool4_256b                           :  1;
     unsigned      mqg3_pool3_64kb                           :  1;
     unsigned      mqg3_pool3_16kb                           :  1;
     unsigned      mqg3_pool3_2kb                            :  1;
     unsigned      mqg3_pool3_256b                           :  1;
     unsigned      mqg3_pool2_64kb                           :  1;
     unsigned      mqg3_pool2_16kb                           :  1;
     unsigned      mqg3_pool2_2kb                            :  1;
     unsigned      mqg3_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg3_pool2_256b                           :  1;
     unsigned      mqg3_pool2_2kb                            :  1;
     unsigned      mqg3_pool2_16kb                           :  1;
     unsigned      mqg3_pool2_64kb                           :  1;
     unsigned      mqg3_pool3_256b                           :  1;
     unsigned      mqg3_pool3_2kb                            :  1;
     unsigned      mqg3_pool3_16kb                           :  1;
     unsigned      mqg3_pool3_64kb                           :  1;
     unsigned      mqg3_pool4_256b                           :  1;
     unsigned      mqg3_pool4_2kb                            :  1;
     unsigned      mqg3_pool4_16kb                           :  1;
     unsigned      mqg3_pool4_64kb                           :  1;
     unsigned      mqg3_pool5_256b                           :  1;
     unsigned      mqg3_pool5_2kb                            :  1;
     unsigned      mqg3_pool5_16kb                           :  1;
     unsigned      mqg3_pool5_64kb                           :  1;
     unsigned      mqg3_pool6_256b                           :  1;
     unsigned      mqg3_pool6_2kb                            :  1;
     unsigned      mqg3_pool6_16kb                           :  1;
     unsigned      mqg3_pool6_64kb                           :  1;
     unsigned      mqg3_pool7_256b                           :  1;
     unsigned      mqg3_pool7_2kb                            :  1;
     unsigned      mqg3_pool7_16kb                           :  1;
     unsigned      mqg3_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg3_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg4_gtm_status_r_t
 *  @brief Memory Quota Group 4 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg4_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 4 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg4_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg4_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg4_pool7_64kb                           :  1;
     unsigned      mqg4_pool7_16kb                           :  1;
     unsigned      mqg4_pool7_2kb                            :  1;
     unsigned      mqg4_pool7_256b                           :  1;
     unsigned      mqg4_pool6_64kb                           :  1;
     unsigned      mqg4_pool6_16kb                           :  1;
     unsigned      mqg4_pool6_2kb                            :  1;
     unsigned      mqg4_pool6_256b                           :  1;
     unsigned      mqg4_pool5_64kb                           :  1;
     unsigned      mqg4_pool5_16kb                           :  1;
     unsigned      mqg4_pool5_2kb                            :  1;
     unsigned      mqg4_pool5_256b                           :  1;
     unsigned      mqg4_pool4_64kb                           :  1;
     unsigned      mqg4_pool4_16kb                           :  1;
     unsigned      mqg4_pool4_2kb                            :  1;
     unsigned      mqg4_pool4_256b                           :  1;
     unsigned      mqg4_pool3_64kb                           :  1;
     unsigned      mqg4_pool3_16kb                           :  1;
     unsigned      mqg4_pool3_2kb                            :  1;
     unsigned      mqg4_pool3_256b                           :  1;
     unsigned      mqg4_pool2_64kb                           :  1;
     unsigned      mqg4_pool2_16kb                           :  1;
     unsigned      mqg4_pool2_2kb                            :  1;
     unsigned      mqg4_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg4_pool2_256b                           :  1;
     unsigned      mqg4_pool2_2kb                            :  1;
     unsigned      mqg4_pool2_16kb                           :  1;
     unsigned      mqg4_pool2_64kb                           :  1;
     unsigned      mqg4_pool3_256b                           :  1;
     unsigned      mqg4_pool3_2kb                            :  1;
     unsigned      mqg4_pool3_16kb                           :  1;
     unsigned      mqg4_pool3_64kb                           :  1;
     unsigned      mqg4_pool4_256b                           :  1;
     unsigned      mqg4_pool4_2kb                            :  1;
     unsigned      mqg4_pool4_16kb                           :  1;
     unsigned      mqg4_pool4_64kb                           :  1;
     unsigned      mqg4_pool5_256b                           :  1;
     unsigned      mqg4_pool5_2kb                            :  1;
     unsigned      mqg4_pool5_16kb                           :  1;
     unsigned      mqg4_pool5_64kb                           :  1;
     unsigned      mqg4_pool6_256b                           :  1;
     unsigned      mqg4_pool6_2kb                            :  1;
     unsigned      mqg4_pool6_16kb                           :  1;
     unsigned      mqg4_pool6_64kb                           :  1;
     unsigned      mqg4_pool7_256b                           :  1;
     unsigned      mqg4_pool7_2kb                            :  1;
     unsigned      mqg4_pool7_16kb                           :  1;
     unsigned      mqg4_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg4_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg5_gtm_status_r_t
 *  @brief Memory Quota Group 5 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg5_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 5 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg5_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg5_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg5_pool7_64kb                           :  1;
     unsigned      mqg5_pool7_16kb                           :  1;
     unsigned      mqg5_pool7_2kb                            :  1;
     unsigned      mqg5_pool7_256b                           :  1;
     unsigned      mqg5_pool6_64kb                           :  1;
     unsigned      mqg5_pool6_16kb                           :  1;
     unsigned      mqg5_pool6_2kb                            :  1;
     unsigned      mqg5_pool6_256b                           :  1;
     unsigned      mqg5_pool5_64kb                           :  1;
     unsigned      mqg5_pool5_16kb                           :  1;
     unsigned      mqg5_pool5_2kb                            :  1;
     unsigned      mqg5_pool5_256b                           :  1;
     unsigned      mqg5_pool4_64kb                           :  1;
     unsigned      mqg5_pool4_16kb                           :  1;
     unsigned      mqg5_pool4_2kb                            :  1;
     unsigned      mqg5_pool4_256b                           :  1;
     unsigned      mqg5_pool3_64kb                           :  1;
     unsigned      mqg5_pool3_16kb                           :  1;
     unsigned      mqg5_pool3_2kb                            :  1;
     unsigned      mqg5_pool3_256b                           :  1;
     unsigned      mqg5_pool2_64kb                           :  1;
     unsigned      mqg5_pool2_16kb                           :  1;
     unsigned      mqg5_pool2_2kb                            :  1;
     unsigned      mqg5_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg5_pool2_256b                           :  1;
     unsigned      mqg5_pool2_2kb                            :  1;
     unsigned      mqg5_pool2_16kb                           :  1;
     unsigned      mqg5_pool2_64kb                           :  1;
     unsigned      mqg5_pool3_256b                           :  1;
     unsigned      mqg5_pool3_2kb                            :  1;
     unsigned      mqg5_pool3_16kb                           :  1;
     unsigned      mqg5_pool3_64kb                           :  1;
     unsigned      mqg5_pool4_256b                           :  1;
     unsigned      mqg5_pool4_2kb                            :  1;
     unsigned      mqg5_pool4_16kb                           :  1;
     unsigned      mqg5_pool4_64kb                           :  1;
     unsigned      mqg5_pool5_256b                           :  1;
     unsigned      mqg5_pool5_2kb                            :  1;
     unsigned      mqg5_pool5_16kb                           :  1;
     unsigned      mqg5_pool5_64kb                           :  1;
     unsigned      mqg5_pool6_256b                           :  1;
     unsigned      mqg5_pool6_2kb                            :  1;
     unsigned      mqg5_pool6_16kb                           :  1;
     unsigned      mqg5_pool6_64kb                           :  1;
     unsigned      mqg5_pool7_256b                           :  1;
     unsigned      mqg5_pool7_2kb                            :  1;
     unsigned      mqg5_pool7_16kb                           :  1;
     unsigned      mqg5_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg5_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg6_gtm_status_r_t
 *  @brief Memory Quota Group 6 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg6_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 6 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg6_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg6_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg6_pool7_64kb                           :  1;
     unsigned      mqg6_pool7_16kb                           :  1;
     unsigned      mqg6_pool7_2kb                            :  1;
     unsigned      mqg6_pool7_256b                           :  1;
     unsigned      mqg6_pool6_64kb                           :  1;
     unsigned      mqg6_pool6_16kb                           :  1;
     unsigned      mqg6_pool6_2kb                            :  1;
     unsigned      mqg6_pool6_256b                           :  1;
     unsigned      mqg6_pool5_64kb                           :  1;
     unsigned      mqg6_pool5_16kb                           :  1;
     unsigned      mqg6_pool5_2kb                            :  1;
     unsigned      mqg6_pool5_256b                           :  1;
     unsigned      mqg6_pool4_64kb                           :  1;
     unsigned      mqg6_pool4_16kb                           :  1;
     unsigned      mqg6_pool4_2kb                            :  1;
     unsigned      mqg6_pool4_256b                           :  1;
     unsigned      mqg6_pool3_64kb                           :  1;
     unsigned      mqg6_pool3_16kb                           :  1;
     unsigned      mqg6_pool3_2kb                            :  1;
     unsigned      mqg6_pool3_256b                           :  1;
     unsigned      mqg6_pool2_64kb                           :  1;
     unsigned      mqg6_pool2_16kb                           :  1;
     unsigned      mqg6_pool2_2kb                            :  1;
     unsigned      mqg6_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg6_pool2_256b                           :  1;
     unsigned      mqg6_pool2_2kb                            :  1;
     unsigned      mqg6_pool2_16kb                           :  1;
     unsigned      mqg6_pool2_64kb                           :  1;
     unsigned      mqg6_pool3_256b                           :  1;
     unsigned      mqg6_pool3_2kb                            :  1;
     unsigned      mqg6_pool3_16kb                           :  1;
     unsigned      mqg6_pool3_64kb                           :  1;
     unsigned      mqg6_pool4_256b                           :  1;
     unsigned      mqg6_pool4_2kb                            :  1;
     unsigned      mqg6_pool4_16kb                           :  1;
     unsigned      mqg6_pool4_64kb                           :  1;
     unsigned      mqg6_pool5_256b                           :  1;
     unsigned      mqg6_pool5_2kb                            :  1;
     unsigned      mqg6_pool5_16kb                           :  1;
     unsigned      mqg6_pool5_64kb                           :  1;
     unsigned      mqg6_pool6_256b                           :  1;
     unsigned      mqg6_pool6_2kb                            :  1;
     unsigned      mqg6_pool6_16kb                           :  1;
     unsigned      mqg6_pool6_64kb                           :  1;
     unsigned      mqg6_pool7_256b                           :  1;
     unsigned      mqg6_pool7_2kb                            :  1;
     unsigned      mqg6_pool7_16kb                           :  1;
     unsigned      mqg6_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg6_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg7_gtm_status_r_t
 *  @brief Memory Quota Group 7 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg7_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 7 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg7_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg7_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg7_pool7_64kb                           :  1;
     unsigned      mqg7_pool7_16kb                           :  1;
     unsigned      mqg7_pool7_2kb                            :  1;
     unsigned      mqg7_pool7_256b                           :  1;
     unsigned      mqg7_pool6_64kb                           :  1;
     unsigned      mqg7_pool6_16kb                           :  1;
     unsigned      mqg7_pool6_2kb                            :  1;
     unsigned      mqg7_pool6_256b                           :  1;
     unsigned      mqg7_pool5_64kb                           :  1;
     unsigned      mqg7_pool5_16kb                           :  1;
     unsigned      mqg7_pool5_2kb                            :  1;
     unsigned      mqg7_pool5_256b                           :  1;
     unsigned      mqg7_pool4_64kb                           :  1;
     unsigned      mqg7_pool4_16kb                           :  1;
     unsigned      mqg7_pool4_2kb                            :  1;
     unsigned      mqg7_pool4_256b                           :  1;
     unsigned      mqg7_pool3_64kb                           :  1;
     unsigned      mqg7_pool3_16kb                           :  1;
     unsigned      mqg7_pool3_2kb                            :  1;
     unsigned      mqg7_pool3_256b                           :  1;
     unsigned      mqg7_pool2_64kb                           :  1;
     unsigned      mqg7_pool2_16kb                           :  1;
     unsigned      mqg7_pool2_2kb                            :  1;
     unsigned      mqg7_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg7_pool2_256b                           :  1;
     unsigned      mqg7_pool2_2kb                            :  1;
     unsigned      mqg7_pool2_16kb                           :  1;
     unsigned      mqg7_pool2_64kb                           :  1;
     unsigned      mqg7_pool3_256b                           :  1;
     unsigned      mqg7_pool3_2kb                            :  1;
     unsigned      mqg7_pool3_16kb                           :  1;
     unsigned      mqg7_pool3_64kb                           :  1;
     unsigned      mqg7_pool4_256b                           :  1;
     unsigned      mqg7_pool4_2kb                            :  1;
     unsigned      mqg7_pool4_16kb                           :  1;
     unsigned      mqg7_pool4_64kb                           :  1;
     unsigned      mqg7_pool5_256b                           :  1;
     unsigned      mqg7_pool5_2kb                            :  1;
     unsigned      mqg7_pool5_16kb                           :  1;
     unsigned      mqg7_pool5_64kb                           :  1;
     unsigned      mqg7_pool6_256b                           :  1;
     unsigned      mqg7_pool6_2kb                            :  1;
     unsigned      mqg7_pool6_16kb                           :  1;
     unsigned      mqg7_pool6_64kb                           :  1;
     unsigned      mqg7_pool7_256b                           :  1;
     unsigned      mqg7_pool7_2kb                            :  1;
     unsigned      mqg7_pool7_16kb                           :  1;
     unsigned      mqg7_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg7_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg8_gtm_status_r_t
 *  @brief Memory Quota Group 8 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg8_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg8_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg8_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg8_pool7_64kb                           :  1;
     unsigned      mqg8_pool7_16kb                           :  1;
     unsigned      mqg8_pool7_2kb                            :  1;
     unsigned      mqg8_pool7_256b                           :  1;
     unsigned      mqg8_pool6_64kb                           :  1;
     unsigned      mqg8_pool6_16kb                           :  1;
     unsigned      mqg8_pool6_2kb                            :  1;
     unsigned      mqg8_pool6_256b                           :  1;
     unsigned      mqg8_pool5_64kb                           :  1;
     unsigned      mqg8_pool5_16kb                           :  1;
     unsigned      mqg8_pool5_2kb                            :  1;
     unsigned      mqg8_pool5_256b                           :  1;
     unsigned      mqg8_pool4_64kb                           :  1;
     unsigned      mqg8_pool4_16kb                           :  1;
     unsigned      mqg8_pool4_2kb                            :  1;
     unsigned      mqg8_pool4_256b                           :  1;
     unsigned      mqg8_pool3_64kb                           :  1;
     unsigned      mqg8_pool3_16kb                           :  1;
     unsigned      mqg8_pool3_2kb                            :  1;
     unsigned      mqg8_pool3_256b                           :  1;
     unsigned      mqg8_pool2_64kb                           :  1;
     unsigned      mqg8_pool2_16kb                           :  1;
     unsigned      mqg8_pool2_2kb                            :  1;
     unsigned      mqg8_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg8_pool2_256b                           :  1;
     unsigned      mqg8_pool2_2kb                            :  1;
     unsigned      mqg8_pool2_16kb                           :  1;
     unsigned      mqg8_pool2_64kb                           :  1;
     unsigned      mqg8_pool3_256b                           :  1;
     unsigned      mqg8_pool3_2kb                            :  1;
     unsigned      mqg8_pool3_16kb                           :  1;
     unsigned      mqg8_pool3_64kb                           :  1;
     unsigned      mqg8_pool4_256b                           :  1;
     unsigned      mqg8_pool4_2kb                            :  1;
     unsigned      mqg8_pool4_16kb                           :  1;
     unsigned      mqg8_pool4_64kb                           :  1;
     unsigned      mqg8_pool5_256b                           :  1;
     unsigned      mqg8_pool5_2kb                            :  1;
     unsigned      mqg8_pool5_16kb                           :  1;
     unsigned      mqg8_pool5_64kb                           :  1;
     unsigned      mqg8_pool6_256b                           :  1;
     unsigned      mqg8_pool6_2kb                            :  1;
     unsigned      mqg8_pool6_16kb                           :  1;
     unsigned      mqg8_pool6_64kb                           :  1;
     unsigned      mqg8_pool7_256b                           :  1;
     unsigned      mqg8_pool7_2kb                            :  1;
     unsigned      mqg8_pool7_16kb                           :  1;
     unsigned      mqg8_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg8_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg9_gtm_status_r_t
 *  @brief Memory Quota Group 9 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg9_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 9 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg9_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg9_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg9_pool7_64kb                           :  1;
     unsigned      mqg9_pool7_16kb                           :  1;
     unsigned      mqg9_pool7_2kb                            :  1;
     unsigned      mqg9_pool7_256b                           :  1;
     unsigned      mqg9_pool6_64kb                           :  1;
     unsigned      mqg9_pool6_16kb                           :  1;
     unsigned      mqg9_pool6_2kb                            :  1;
     unsigned      mqg9_pool6_256b                           :  1;
     unsigned      mqg9_pool5_64kb                           :  1;
     unsigned      mqg9_pool5_16kb                           :  1;
     unsigned      mqg9_pool5_2kb                            :  1;
     unsigned      mqg9_pool5_256b                           :  1;
     unsigned      mqg9_pool4_64kb                           :  1;
     unsigned      mqg9_pool4_16kb                           :  1;
     unsigned      mqg9_pool4_2kb                            :  1;
     unsigned      mqg9_pool4_256b                           :  1;
     unsigned      mqg9_pool3_64kb                           :  1;
     unsigned      mqg9_pool3_16kb                           :  1;
     unsigned      mqg9_pool3_2kb                            :  1;
     unsigned      mqg9_pool3_256b                           :  1;
     unsigned      mqg9_pool2_64kb                           :  1;
     unsigned      mqg9_pool2_16kb                           :  1;
     unsigned      mqg9_pool2_2kb                            :  1;
     unsigned      mqg9_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg9_pool2_256b                           :  1;
     unsigned      mqg9_pool2_2kb                            :  1;
     unsigned      mqg9_pool2_16kb                           :  1;
     unsigned      mqg9_pool2_64kb                           :  1;
     unsigned      mqg9_pool3_256b                           :  1;
     unsigned      mqg9_pool3_2kb                            :  1;
     unsigned      mqg9_pool3_16kb                           :  1;
     unsigned      mqg9_pool3_64kb                           :  1;
     unsigned      mqg9_pool4_256b                           :  1;
     unsigned      mqg9_pool4_2kb                            :  1;
     unsigned      mqg9_pool4_16kb                           :  1;
     unsigned      mqg9_pool4_64kb                           :  1;
     unsigned      mqg9_pool5_256b                           :  1;
     unsigned      mqg9_pool5_2kb                            :  1;
     unsigned      mqg9_pool5_16kb                           :  1;
     unsigned      mqg9_pool5_64kb                           :  1;
     unsigned      mqg9_pool6_256b                           :  1;
     unsigned      mqg9_pool6_2kb                            :  1;
     unsigned      mqg9_pool6_16kb                           :  1;
     unsigned      mqg9_pool6_64kb                           :  1;
     unsigned      mqg9_pool7_256b                           :  1;
     unsigned      mqg9_pool7_2kb                            :  1;
     unsigned      mqg9_pool7_16kb                           :  1;
     unsigned      mqg9_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg9_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg10_gtm_status_r_t
 *  @brief Memory Quota Group 10 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg10_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 10 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg10_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg10_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg10_pool7_64kb                          :  1;
     unsigned      mqg10_pool7_16kb                          :  1;
     unsigned      mqg10_pool7_2kb                           :  1;
     unsigned      mqg10_pool7_256b                          :  1;
     unsigned      mqg10_pool6_64kb                          :  1;
     unsigned      mqg10_pool6_16kb                          :  1;
     unsigned      mqg10_pool6_2kb                           :  1;
     unsigned      mqg10_pool6_256b                          :  1;
     unsigned      mqg10_pool5_64kb                          :  1;
     unsigned      mqg10_pool5_16kb                          :  1;
     unsigned      mqg10_pool5_2kb                           :  1;
     unsigned      mqg10_pool5_256b                          :  1;
     unsigned      mqg10_pool4_64kb                          :  1;
     unsigned      mqg10_pool4_16kb                          :  1;
     unsigned      mqg10_pool4_2kb                           :  1;
     unsigned      mqg10_pool4_256b                          :  1;
     unsigned      mqg10_pool3_64kb                          :  1;
     unsigned      mqg10_pool3_16kb                          :  1;
     unsigned      mqg10_pool3_2kb                           :  1;
     unsigned      mqg10_pool3_256b                          :  1;
     unsigned      mqg10_pool2_64kb                          :  1;
     unsigned      mqg10_pool2_16kb                          :  1;
     unsigned      mqg10_pool2_2kb                           :  1;
     unsigned      mqg10_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg10_pool2_256b                          :  1;
     unsigned      mqg10_pool2_2kb                           :  1;
     unsigned      mqg10_pool2_16kb                          :  1;
     unsigned      mqg10_pool2_64kb                          :  1;
     unsigned      mqg10_pool3_256b                          :  1;
     unsigned      mqg10_pool3_2kb                           :  1;
     unsigned      mqg10_pool3_16kb                          :  1;
     unsigned      mqg10_pool3_64kb                          :  1;
     unsigned      mqg10_pool4_256b                          :  1;
     unsigned      mqg10_pool4_2kb                           :  1;
     unsigned      mqg10_pool4_16kb                          :  1;
     unsigned      mqg10_pool4_64kb                          :  1;
     unsigned      mqg10_pool5_256b                          :  1;
     unsigned      mqg10_pool5_2kb                           :  1;
     unsigned      mqg10_pool5_16kb                          :  1;
     unsigned      mqg10_pool5_64kb                          :  1;
     unsigned      mqg10_pool6_256b                          :  1;
     unsigned      mqg10_pool6_2kb                           :  1;
     unsigned      mqg10_pool6_16kb                          :  1;
     unsigned      mqg10_pool6_64kb                          :  1;
     unsigned      mqg10_pool7_256b                          :  1;
     unsigned      mqg10_pool7_2kb                           :  1;
     unsigned      mqg10_pool7_16kb                          :  1;
     unsigned      mqg10_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg10_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg11_gtm_status_r_t
 *  @brief Memory Quota Group 11 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg11_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 11 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg11_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg11_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg11_pool7_64kb                          :  1;
     unsigned      mqg11_pool7_16kb                          :  1;
     unsigned      mqg11_pool7_2kb                           :  1;
     unsigned      mqg11_pool7_256b                          :  1;
     unsigned      mqg11_pool6_64kb                          :  1;
     unsigned      mqg11_pool6_16kb                          :  1;
     unsigned      mqg11_pool6_2kb                           :  1;
     unsigned      mqg11_pool6_256b                          :  1;
     unsigned      mqg11_pool5_64kb                          :  1;
     unsigned      mqg11_pool5_16kb                          :  1;
     unsigned      mqg11_pool5_2kb                           :  1;
     unsigned      mqg11_pool5_256b                          :  1;
     unsigned      mqg11_pool4_64kb                          :  1;
     unsigned      mqg11_pool4_16kb                          :  1;
     unsigned      mqg11_pool4_2kb                           :  1;
     unsigned      mqg11_pool4_256b                          :  1;
     unsigned      mqg11_pool3_64kb                          :  1;
     unsigned      mqg11_pool3_16kb                          :  1;
     unsigned      mqg11_pool3_2kb                           :  1;
     unsigned      mqg11_pool3_256b                          :  1;
     unsigned      mqg11_pool2_64kb                          :  1;
     unsigned      mqg11_pool2_16kb                          :  1;
     unsigned      mqg11_pool2_2kb                           :  1;
     unsigned      mqg11_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg11_pool2_256b                          :  1;
     unsigned      mqg11_pool2_2kb                           :  1;
     unsigned      mqg11_pool2_16kb                          :  1;
     unsigned      mqg11_pool2_64kb                          :  1;
     unsigned      mqg11_pool3_256b                          :  1;
     unsigned      mqg11_pool3_2kb                           :  1;
     unsigned      mqg11_pool3_16kb                          :  1;
     unsigned      mqg11_pool3_64kb                          :  1;
     unsigned      mqg11_pool4_256b                          :  1;
     unsigned      mqg11_pool4_2kb                           :  1;
     unsigned      mqg11_pool4_16kb                          :  1;
     unsigned      mqg11_pool4_64kb                          :  1;
     unsigned      mqg11_pool5_256b                          :  1;
     unsigned      mqg11_pool5_2kb                           :  1;
     unsigned      mqg11_pool5_16kb                          :  1;
     unsigned      mqg11_pool5_64kb                          :  1;
     unsigned      mqg11_pool6_256b                          :  1;
     unsigned      mqg11_pool6_2kb                           :  1;
     unsigned      mqg11_pool6_16kb                          :  1;
     unsigned      mqg11_pool6_64kb                          :  1;
     unsigned      mqg11_pool7_256b                          :  1;
     unsigned      mqg11_pool7_2kb                           :  1;
     unsigned      mqg11_pool7_16kb                          :  1;
     unsigned      mqg11_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg11_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg12_gtm_status_r_t
 *  @brief Memory Quota Group 12 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg12_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 12 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg12_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg12_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg12_pool7_64kb                          :  1;
     unsigned      mqg12_pool7_16kb                          :  1;
     unsigned      mqg12_pool7_2kb                           :  1;
     unsigned      mqg12_pool7_256b                          :  1;
     unsigned      mqg12_pool6_64kb                          :  1;
     unsigned      mqg12_pool6_16kb                          :  1;
     unsigned      mqg12_pool6_2kb                           :  1;
     unsigned      mqg12_pool6_256b                          :  1;
     unsigned      mqg12_pool5_64kb                          :  1;
     unsigned      mqg12_pool5_16kb                          :  1;
     unsigned      mqg12_pool5_2kb                           :  1;
     unsigned      mqg12_pool5_256b                          :  1;
     unsigned      mqg12_pool4_64kb                          :  1;
     unsigned      mqg12_pool4_16kb                          :  1;
     unsigned      mqg12_pool4_2kb                           :  1;
     unsigned      mqg12_pool4_256b                          :  1;
     unsigned      mqg12_pool3_64kb                          :  1;
     unsigned      mqg12_pool3_16kb                          :  1;
     unsigned      mqg12_pool3_2kb                           :  1;
     unsigned      mqg12_pool3_256b                          :  1;
     unsigned      mqg12_pool2_64kb                          :  1;
     unsigned      mqg12_pool2_16kb                          :  1;
     unsigned      mqg12_pool2_2kb                           :  1;
     unsigned      mqg12_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg12_pool2_256b                          :  1;
     unsigned      mqg12_pool2_2kb                           :  1;
     unsigned      mqg12_pool2_16kb                          :  1;
     unsigned      mqg12_pool2_64kb                          :  1;
     unsigned      mqg12_pool3_256b                          :  1;
     unsigned      mqg12_pool3_2kb                           :  1;
     unsigned      mqg12_pool3_16kb                          :  1;
     unsigned      mqg12_pool3_64kb                          :  1;
     unsigned      mqg12_pool4_256b                          :  1;
     unsigned      mqg12_pool4_2kb                           :  1;
     unsigned      mqg12_pool4_16kb                          :  1;
     unsigned      mqg12_pool4_64kb                          :  1;
     unsigned      mqg12_pool5_256b                          :  1;
     unsigned      mqg12_pool5_2kb                           :  1;
     unsigned      mqg12_pool5_16kb                          :  1;
     unsigned      mqg12_pool5_64kb                          :  1;
     unsigned      mqg12_pool6_256b                          :  1;
     unsigned      mqg12_pool6_2kb                           :  1;
     unsigned      mqg12_pool6_16kb                          :  1;
     unsigned      mqg12_pool6_64kb                          :  1;
     unsigned      mqg12_pool7_256b                          :  1;
     unsigned      mqg12_pool7_2kb                           :  1;
     unsigned      mqg12_pool7_16kb                          :  1;
     unsigned      mqg12_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg12_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg13_gtm_status_r_t
 *  @brief Memory Quota Group 13 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg13_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 13 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg13_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg13_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg13_pool7_64kb                          :  1;
     unsigned      mqg13_pool7_16kb                          :  1;
     unsigned      mqg13_pool7_2kb                           :  1;
     unsigned      mqg13_pool7_256b                          :  1;
     unsigned      mqg13_pool6_64kb                          :  1;
     unsigned      mqg13_pool6_16kb                          :  1;
     unsigned      mqg13_pool6_2kb                           :  1;
     unsigned      mqg13_pool6_256b                          :  1;
     unsigned      mqg13_pool5_64kb                          :  1;
     unsigned      mqg13_pool5_16kb                          :  1;
     unsigned      mqg13_pool5_2kb                           :  1;
     unsigned      mqg13_pool5_256b                          :  1;
     unsigned      mqg13_pool4_64kb                          :  1;
     unsigned      mqg13_pool4_16kb                          :  1;
     unsigned      mqg13_pool4_2kb                           :  1;
     unsigned      mqg13_pool4_256b                          :  1;
     unsigned      mqg13_pool3_64kb                          :  1;
     unsigned      mqg13_pool3_16kb                          :  1;
     unsigned      mqg13_pool3_2kb                           :  1;
     unsigned      mqg13_pool3_256b                          :  1;
     unsigned      mqg13_pool2_64kb                          :  1;
     unsigned      mqg13_pool2_16kb                          :  1;
     unsigned      mqg13_pool2_2kb                           :  1;
     unsigned      mqg13_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg13_pool2_256b                          :  1;
     unsigned      mqg13_pool2_2kb                           :  1;
     unsigned      mqg13_pool2_16kb                          :  1;
     unsigned      mqg13_pool2_64kb                          :  1;
     unsigned      mqg13_pool3_256b                          :  1;
     unsigned      mqg13_pool3_2kb                           :  1;
     unsigned      mqg13_pool3_16kb                          :  1;
     unsigned      mqg13_pool3_64kb                          :  1;
     unsigned      mqg13_pool4_256b                          :  1;
     unsigned      mqg13_pool4_2kb                           :  1;
     unsigned      mqg13_pool4_16kb                          :  1;
     unsigned      mqg13_pool4_64kb                          :  1;
     unsigned      mqg13_pool5_256b                          :  1;
     unsigned      mqg13_pool5_2kb                           :  1;
     unsigned      mqg13_pool5_16kb                          :  1;
     unsigned      mqg13_pool5_64kb                          :  1;
     unsigned      mqg13_pool6_256b                          :  1;
     unsigned      mqg13_pool6_2kb                           :  1;
     unsigned      mqg13_pool6_16kb                          :  1;
     unsigned      mqg13_pool6_64kb                          :  1;
     unsigned      mqg13_pool7_256b                          :  1;
     unsigned      mqg13_pool7_2kb                           :  1;
     unsigned      mqg13_pool7_16kb                          :  1;
     unsigned      mqg13_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg13_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg14_gtm_status_r_t
 *  @brief Memory Quota Group 14 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg14_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 14 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg14_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg14_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg14_pool7_64kb                          :  1;
     unsigned      mqg14_pool7_16kb                          :  1;
     unsigned      mqg14_pool7_2kb                           :  1;
     unsigned      mqg14_pool7_256b                          :  1;
     unsigned      mqg14_pool6_64kb                          :  1;
     unsigned      mqg14_pool6_16kb                          :  1;
     unsigned      mqg14_pool6_2kb                           :  1;
     unsigned      mqg14_pool6_256b                          :  1;
     unsigned      mqg14_pool5_64kb                          :  1;
     unsigned      mqg14_pool5_16kb                          :  1;
     unsigned      mqg14_pool5_2kb                           :  1;
     unsigned      mqg14_pool5_256b                          :  1;
     unsigned      mqg14_pool4_64kb                          :  1;
     unsigned      mqg14_pool4_16kb                          :  1;
     unsigned      mqg14_pool4_2kb                           :  1;
     unsigned      mqg14_pool4_256b                          :  1;
     unsigned      mqg14_pool3_64kb                          :  1;
     unsigned      mqg14_pool3_16kb                          :  1;
     unsigned      mqg14_pool3_2kb                           :  1;
     unsigned      mqg14_pool3_256b                          :  1;
     unsigned      mqg14_pool2_64kb                          :  1;
     unsigned      mqg14_pool2_16kb                          :  1;
     unsigned      mqg14_pool2_2kb                           :  1;
     unsigned      mqg14_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg14_pool2_256b                          :  1;
     unsigned      mqg14_pool2_2kb                           :  1;
     unsigned      mqg14_pool2_16kb                          :  1;
     unsigned      mqg14_pool2_64kb                          :  1;
     unsigned      mqg14_pool3_256b                          :  1;
     unsigned      mqg14_pool3_2kb                           :  1;
     unsigned      mqg14_pool3_16kb                          :  1;
     unsigned      mqg14_pool3_64kb                          :  1;
     unsigned      mqg14_pool4_256b                          :  1;
     unsigned      mqg14_pool4_2kb                           :  1;
     unsigned      mqg14_pool4_16kb                          :  1;
     unsigned      mqg14_pool4_64kb                          :  1;
     unsigned      mqg14_pool5_256b                          :  1;
     unsigned      mqg14_pool5_2kb                           :  1;
     unsigned      mqg14_pool5_16kb                          :  1;
     unsigned      mqg14_pool5_64kb                          :  1;
     unsigned      mqg14_pool6_256b                          :  1;
     unsigned      mqg14_pool6_2kb                           :  1;
     unsigned      mqg14_pool6_16kb                          :  1;
     unsigned      mqg14_pool6_64kb                          :  1;
     unsigned      mqg14_pool7_256b                          :  1;
     unsigned      mqg14_pool7_2kb                           :  1;
     unsigned      mqg14_pool7_16kb                          :  1;
     unsigned      mqg14_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg14_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg15_gtm_status_r_t
 *  @brief Memory Quota Group 15 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg15_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 15 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg15_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg15_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg15_pool7_64kb                          :  1;
     unsigned      mqg15_pool7_16kb                          :  1;
     unsigned      mqg15_pool7_2kb                           :  1;
     unsigned      mqg15_pool7_256b                          :  1;
     unsigned      mqg15_pool6_64kb                          :  1;
     unsigned      mqg15_pool6_16kb                          :  1;
     unsigned      mqg15_pool6_2kb                           :  1;
     unsigned      mqg15_pool6_256b                          :  1;
     unsigned      mqg15_pool5_64kb                          :  1;
     unsigned      mqg15_pool5_16kb                          :  1;
     unsigned      mqg15_pool5_2kb                           :  1;
     unsigned      mqg15_pool5_256b                          :  1;
     unsigned      mqg15_pool4_64kb                          :  1;
     unsigned      mqg15_pool4_16kb                          :  1;
     unsigned      mqg15_pool4_2kb                           :  1;
     unsigned      mqg15_pool4_256b                          :  1;
     unsigned      mqg15_pool3_64kb                          :  1;
     unsigned      mqg15_pool3_16kb                          :  1;
     unsigned      mqg15_pool3_2kb                           :  1;
     unsigned      mqg15_pool3_256b                          :  1;
     unsigned      mqg15_pool2_64kb                          :  1;
     unsigned      mqg15_pool2_16kb                          :  1;
     unsigned      mqg15_pool2_2kb                           :  1;
     unsigned      mqg15_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg15_pool2_256b                          :  1;
     unsigned      mqg15_pool2_2kb                           :  1;
     unsigned      mqg15_pool2_16kb                          :  1;
     unsigned      mqg15_pool2_64kb                          :  1;
     unsigned      mqg15_pool3_256b                          :  1;
     unsigned      mqg15_pool3_2kb                           :  1;
     unsigned      mqg15_pool3_16kb                          :  1;
     unsigned      mqg15_pool3_64kb                          :  1;
     unsigned      mqg15_pool4_256b                          :  1;
     unsigned      mqg15_pool4_2kb                           :  1;
     unsigned      mqg15_pool4_16kb                          :  1;
     unsigned      mqg15_pool4_64kb                          :  1;
     unsigned      mqg15_pool5_256b                          :  1;
     unsigned      mqg15_pool5_2kb                           :  1;
     unsigned      mqg15_pool5_16kb                          :  1;
     unsigned      mqg15_pool5_64kb                          :  1;
     unsigned      mqg15_pool6_256b                          :  1;
     unsigned      mqg15_pool6_2kb                           :  1;
     unsigned      mqg15_pool6_16kb                          :  1;
     unsigned      mqg15_pool6_64kb                          :  1;
     unsigned      mqg15_pool7_256b                          :  1;
     unsigned      mqg15_pool7_2kb                           :  1;
     unsigned      mqg15_pool7_16kb                          :  1;
     unsigned      mqg15_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg15_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg16_gtm_status_r_t
 *  @brief Memory Quota Group 16 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg16_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 16 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg16_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg16_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg16_pool7_64kb                          :  1;
     unsigned      mqg16_pool7_16kb                          :  1;
     unsigned      mqg16_pool7_2kb                           :  1;
     unsigned      mqg16_pool7_256b                          :  1;
     unsigned      mqg16_pool6_64kb                          :  1;
     unsigned      mqg16_pool6_16kb                          :  1;
     unsigned      mqg16_pool6_2kb                           :  1;
     unsigned      mqg16_pool6_256b                          :  1;
     unsigned      mqg16_pool5_64kb                          :  1;
     unsigned      mqg16_pool5_16kb                          :  1;
     unsigned      mqg16_pool5_2kb                           :  1;
     unsigned      mqg16_pool5_256b                          :  1;
     unsigned      mqg16_pool4_64kb                          :  1;
     unsigned      mqg16_pool4_16kb                          :  1;
     unsigned      mqg16_pool4_2kb                           :  1;
     unsigned      mqg16_pool4_256b                          :  1;
     unsigned      mqg16_pool3_64kb                          :  1;
     unsigned      mqg16_pool3_16kb                          :  1;
     unsigned      mqg16_pool3_2kb                           :  1;
     unsigned      mqg16_pool3_256b                          :  1;
     unsigned      mqg16_pool2_64kb                          :  1;
     unsigned      mqg16_pool2_16kb                          :  1;
     unsigned      mqg16_pool2_2kb                           :  1;
     unsigned      mqg16_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg16_pool2_256b                          :  1;
     unsigned      mqg16_pool2_2kb                           :  1;
     unsigned      mqg16_pool2_16kb                          :  1;
     unsigned      mqg16_pool2_64kb                          :  1;
     unsigned      mqg16_pool3_256b                          :  1;
     unsigned      mqg16_pool3_2kb                           :  1;
     unsigned      mqg16_pool3_16kb                          :  1;
     unsigned      mqg16_pool3_64kb                          :  1;
     unsigned      mqg16_pool4_256b                          :  1;
     unsigned      mqg16_pool4_2kb                           :  1;
     unsigned      mqg16_pool4_16kb                          :  1;
     unsigned      mqg16_pool4_64kb                          :  1;
     unsigned      mqg16_pool5_256b                          :  1;
     unsigned      mqg16_pool5_2kb                           :  1;
     unsigned      mqg16_pool5_16kb                          :  1;
     unsigned      mqg16_pool5_64kb                          :  1;
     unsigned      mqg16_pool6_256b                          :  1;
     unsigned      mqg16_pool6_2kb                           :  1;
     unsigned      mqg16_pool6_16kb                          :  1;
     unsigned      mqg16_pool6_64kb                          :  1;
     unsigned      mqg16_pool7_256b                          :  1;
     unsigned      mqg16_pool7_2kb                           :  1;
     unsigned      mqg16_pool7_16kb                          :  1;
     unsigned      mqg16_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg16_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg17_gtm_status_r_t
 *  @brief Memory Quota Group 17 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg17_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 17 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg17_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg17_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg17_pool7_64kb                          :  1;
     unsigned      mqg17_pool7_16kb                          :  1;
     unsigned      mqg17_pool7_2kb                           :  1;
     unsigned      mqg17_pool7_256b                          :  1;
     unsigned      mqg17_pool6_64kb                          :  1;
     unsigned      mqg17_pool6_16kb                          :  1;
     unsigned      mqg17_pool6_2kb                           :  1;
     unsigned      mqg17_pool6_256b                          :  1;
     unsigned      mqg17_pool5_64kb                          :  1;
     unsigned      mqg17_pool5_16kb                          :  1;
     unsigned      mqg17_pool5_2kb                           :  1;
     unsigned      mqg17_pool5_256b                          :  1;
     unsigned      mqg17_pool4_64kb                          :  1;
     unsigned      mqg17_pool4_16kb                          :  1;
     unsigned      mqg17_pool4_2kb                           :  1;
     unsigned      mqg17_pool4_256b                          :  1;
     unsigned      mqg17_pool3_64kb                          :  1;
     unsigned      mqg17_pool3_16kb                          :  1;
     unsigned      mqg17_pool3_2kb                           :  1;
     unsigned      mqg17_pool3_256b                          :  1;
     unsigned      mqg17_pool2_64kb                          :  1;
     unsigned      mqg17_pool2_16kb                          :  1;
     unsigned      mqg17_pool2_2kb                           :  1;
     unsigned      mqg17_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg17_pool2_256b                          :  1;
     unsigned      mqg17_pool2_2kb                           :  1;
     unsigned      mqg17_pool2_16kb                          :  1;
     unsigned      mqg17_pool2_64kb                          :  1;
     unsigned      mqg17_pool3_256b                          :  1;
     unsigned      mqg17_pool3_2kb                           :  1;
     unsigned      mqg17_pool3_16kb                          :  1;
     unsigned      mqg17_pool3_64kb                          :  1;
     unsigned      mqg17_pool4_256b                          :  1;
     unsigned      mqg17_pool4_2kb                           :  1;
     unsigned      mqg17_pool4_16kb                          :  1;
     unsigned      mqg17_pool4_64kb                          :  1;
     unsigned      mqg17_pool5_256b                          :  1;
     unsigned      mqg17_pool5_2kb                           :  1;
     unsigned      mqg17_pool5_16kb                          :  1;
     unsigned      mqg17_pool5_64kb                          :  1;
     unsigned      mqg17_pool6_256b                          :  1;
     unsigned      mqg17_pool6_2kb                           :  1;
     unsigned      mqg17_pool6_16kb                          :  1;
     unsigned      mqg17_pool6_64kb                          :  1;
     unsigned      mqg17_pool7_256b                          :  1;
     unsigned      mqg17_pool7_2kb                           :  1;
     unsigned      mqg17_pool7_16kb                          :  1;
     unsigned      mqg17_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg17_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg18_gtm_status_r_t
 *  @brief Memory Quota Group 18 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg18_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 18 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg18_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg18_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg18_pool7_64kb                          :  1;
     unsigned      mqg18_pool7_16kb                          :  1;
     unsigned      mqg18_pool7_2kb                           :  1;
     unsigned      mqg18_pool7_256b                          :  1;
     unsigned      mqg18_pool6_64kb                          :  1;
     unsigned      mqg18_pool6_16kb                          :  1;
     unsigned      mqg18_pool6_2kb                           :  1;
     unsigned      mqg18_pool6_256b                          :  1;
     unsigned      mqg18_pool5_64kb                          :  1;
     unsigned      mqg18_pool5_16kb                          :  1;
     unsigned      mqg18_pool5_2kb                           :  1;
     unsigned      mqg18_pool5_256b                          :  1;
     unsigned      mqg18_pool4_64kb                          :  1;
     unsigned      mqg18_pool4_16kb                          :  1;
     unsigned      mqg18_pool4_2kb                           :  1;
     unsigned      mqg18_pool4_256b                          :  1;
     unsigned      mqg18_pool3_64kb                          :  1;
     unsigned      mqg18_pool3_16kb                          :  1;
     unsigned      mqg18_pool3_2kb                           :  1;
     unsigned      mqg18_pool3_256b                          :  1;
     unsigned      mqg18_pool2_64kb                          :  1;
     unsigned      mqg18_pool2_16kb                          :  1;
     unsigned      mqg18_pool2_2kb                           :  1;
     unsigned      mqg18_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg18_pool2_256b                          :  1;
     unsigned      mqg18_pool2_2kb                           :  1;
     unsigned      mqg18_pool2_16kb                          :  1;
     unsigned      mqg18_pool2_64kb                          :  1;
     unsigned      mqg18_pool3_256b                          :  1;
     unsigned      mqg18_pool3_2kb                           :  1;
     unsigned      mqg18_pool3_16kb                          :  1;
     unsigned      mqg18_pool3_64kb                          :  1;
     unsigned      mqg18_pool4_256b                          :  1;
     unsigned      mqg18_pool4_2kb                           :  1;
     unsigned      mqg18_pool4_16kb                          :  1;
     unsigned      mqg18_pool4_64kb                          :  1;
     unsigned      mqg18_pool5_256b                          :  1;
     unsigned      mqg18_pool5_2kb                           :  1;
     unsigned      mqg18_pool5_16kb                          :  1;
     unsigned      mqg18_pool5_64kb                          :  1;
     unsigned      mqg18_pool6_256b                          :  1;
     unsigned      mqg18_pool6_2kb                           :  1;
     unsigned      mqg18_pool6_16kb                          :  1;
     unsigned      mqg18_pool6_64kb                          :  1;
     unsigned      mqg18_pool7_256b                          :  1;
     unsigned      mqg18_pool7_2kb                           :  1;
     unsigned      mqg18_pool7_16kb                          :  1;
     unsigned      mqg18_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg18_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg19_gtm_status_r_t
 *  @brief Memory Quota Group 19 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg19_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 19 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg19_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg19_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg19_pool7_64kb                          :  1;
     unsigned      mqg19_pool7_16kb                          :  1;
     unsigned      mqg19_pool7_2kb                           :  1;
     unsigned      mqg19_pool7_256b                          :  1;
     unsigned      mqg19_pool6_64kb                          :  1;
     unsigned      mqg19_pool6_16kb                          :  1;
     unsigned      mqg19_pool6_2kb                           :  1;
     unsigned      mqg19_pool6_256b                          :  1;
     unsigned      mqg19_pool5_64kb                          :  1;
     unsigned      mqg19_pool5_16kb                          :  1;
     unsigned      mqg19_pool5_2kb                           :  1;
     unsigned      mqg19_pool5_256b                          :  1;
     unsigned      mqg19_pool4_64kb                          :  1;
     unsigned      mqg19_pool4_16kb                          :  1;
     unsigned      mqg19_pool4_2kb                           :  1;
     unsigned      mqg19_pool4_256b                          :  1;
     unsigned      mqg19_pool3_64kb                          :  1;
     unsigned      mqg19_pool3_16kb                          :  1;
     unsigned      mqg19_pool3_2kb                           :  1;
     unsigned      mqg19_pool3_256b                          :  1;
     unsigned      mqg19_pool2_64kb                          :  1;
     unsigned      mqg19_pool2_16kb                          :  1;
     unsigned      mqg19_pool2_2kb                           :  1;
     unsigned      mqg19_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg19_pool2_256b                          :  1;
     unsigned      mqg19_pool2_2kb                           :  1;
     unsigned      mqg19_pool2_16kb                          :  1;
     unsigned      mqg19_pool2_64kb                          :  1;
     unsigned      mqg19_pool3_256b                          :  1;
     unsigned      mqg19_pool3_2kb                           :  1;
     unsigned      mqg19_pool3_16kb                          :  1;
     unsigned      mqg19_pool3_64kb                          :  1;
     unsigned      mqg19_pool4_256b                          :  1;
     unsigned      mqg19_pool4_2kb                           :  1;
     unsigned      mqg19_pool4_16kb                          :  1;
     unsigned      mqg19_pool4_64kb                          :  1;
     unsigned      mqg19_pool5_256b                          :  1;
     unsigned      mqg19_pool5_2kb                           :  1;
     unsigned      mqg19_pool5_16kb                          :  1;
     unsigned      mqg19_pool5_64kb                          :  1;
     unsigned      mqg19_pool6_256b                          :  1;
     unsigned      mqg19_pool6_2kb                           :  1;
     unsigned      mqg19_pool6_16kb                          :  1;
     unsigned      mqg19_pool6_64kb                          :  1;
     unsigned      mqg19_pool7_256b                          :  1;
     unsigned      mqg19_pool7_2kb                           :  1;
     unsigned      mqg19_pool7_16kb                          :  1;
     unsigned      mqg19_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg19_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg20_gtm_status_r_t
 *  @brief Memory Quota Group 20 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg20_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 20 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg20_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg20_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg20_pool7_64kb                          :  1;
     unsigned      mqg20_pool7_16kb                          :  1;
     unsigned      mqg20_pool7_2kb                           :  1;
     unsigned      mqg20_pool7_256b                          :  1;
     unsigned      mqg20_pool6_64kb                          :  1;
     unsigned      mqg20_pool6_16kb                          :  1;
     unsigned      mqg20_pool6_2kb                           :  1;
     unsigned      mqg20_pool6_256b                          :  1;
     unsigned      mqg20_pool5_64kb                          :  1;
     unsigned      mqg20_pool5_16kb                          :  1;
     unsigned      mqg20_pool5_2kb                           :  1;
     unsigned      mqg20_pool5_256b                          :  1;
     unsigned      mqg20_pool4_64kb                          :  1;
     unsigned      mqg20_pool4_16kb                          :  1;
     unsigned      mqg20_pool4_2kb                           :  1;
     unsigned      mqg20_pool4_256b                          :  1;
     unsigned      mqg20_pool3_64kb                          :  1;
     unsigned      mqg20_pool3_16kb                          :  1;
     unsigned      mqg20_pool3_2kb                           :  1;
     unsigned      mqg20_pool3_256b                          :  1;
     unsigned      mqg20_pool2_64kb                          :  1;
     unsigned      mqg20_pool2_16kb                          :  1;
     unsigned      mqg20_pool2_2kb                           :  1;
     unsigned      mqg20_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg20_pool2_256b                          :  1;
     unsigned      mqg20_pool2_2kb                           :  1;
     unsigned      mqg20_pool2_16kb                          :  1;
     unsigned      mqg20_pool2_64kb                          :  1;
     unsigned      mqg20_pool3_256b                          :  1;
     unsigned      mqg20_pool3_2kb                           :  1;
     unsigned      mqg20_pool3_16kb                          :  1;
     unsigned      mqg20_pool3_64kb                          :  1;
     unsigned      mqg20_pool4_256b                          :  1;
     unsigned      mqg20_pool4_2kb                           :  1;
     unsigned      mqg20_pool4_16kb                          :  1;
     unsigned      mqg20_pool4_64kb                          :  1;
     unsigned      mqg20_pool5_256b                          :  1;
     unsigned      mqg20_pool5_2kb                           :  1;
     unsigned      mqg20_pool5_16kb                          :  1;
     unsigned      mqg20_pool5_64kb                          :  1;
     unsigned      mqg20_pool6_256b                          :  1;
     unsigned      mqg20_pool6_2kb                           :  1;
     unsigned      mqg20_pool6_16kb                          :  1;
     unsigned      mqg20_pool6_64kb                          :  1;
     unsigned      mqg20_pool7_256b                          :  1;
     unsigned      mqg20_pool7_2kb                           :  1;
     unsigned      mqg20_pool7_16kb                          :  1;
     unsigned      mqg20_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg20_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg21_gtm_status_r_t
 *  @brief Memory Quota Group 21 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg21_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 21 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg21_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg21_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg21_pool7_64kb                          :  1;
     unsigned      mqg21_pool7_16kb                          :  1;
     unsigned      mqg21_pool7_2kb                           :  1;
     unsigned      mqg21_pool7_256b                          :  1;
     unsigned      mqg21_pool6_64kb                          :  1;
     unsigned      mqg21_pool6_16kb                          :  1;
     unsigned      mqg21_pool6_2kb                           :  1;
     unsigned      mqg21_pool6_256b                          :  1;
     unsigned      mqg21_pool5_64kb                          :  1;
     unsigned      mqg21_pool5_16kb                          :  1;
     unsigned      mqg21_pool5_2kb                           :  1;
     unsigned      mqg21_pool5_256b                          :  1;
     unsigned      mqg21_pool4_64kb                          :  1;
     unsigned      mqg21_pool4_16kb                          :  1;
     unsigned      mqg21_pool4_2kb                           :  1;
     unsigned      mqg21_pool4_256b                          :  1;
     unsigned      mqg21_pool3_64kb                          :  1;
     unsigned      mqg21_pool3_16kb                          :  1;
     unsigned      mqg21_pool3_2kb                           :  1;
     unsigned      mqg21_pool3_256b                          :  1;
     unsigned      mqg21_pool2_64kb                          :  1;
     unsigned      mqg21_pool2_16kb                          :  1;
     unsigned      mqg21_pool2_2kb                           :  1;
     unsigned      mqg21_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg21_pool2_256b                          :  1;
     unsigned      mqg21_pool2_2kb                           :  1;
     unsigned      mqg21_pool2_16kb                          :  1;
     unsigned      mqg21_pool2_64kb                          :  1;
     unsigned      mqg21_pool3_256b                          :  1;
     unsigned      mqg21_pool3_2kb                           :  1;
     unsigned      mqg21_pool3_16kb                          :  1;
     unsigned      mqg21_pool3_64kb                          :  1;
     unsigned      mqg21_pool4_256b                          :  1;
     unsigned      mqg21_pool4_2kb                           :  1;
     unsigned      mqg21_pool4_16kb                          :  1;
     unsigned      mqg21_pool4_64kb                          :  1;
     unsigned      mqg21_pool5_256b                          :  1;
     unsigned      mqg21_pool5_2kb                           :  1;
     unsigned      mqg21_pool5_16kb                          :  1;
     unsigned      mqg21_pool5_64kb                          :  1;
     unsigned      mqg21_pool6_256b                          :  1;
     unsigned      mqg21_pool6_2kb                           :  1;
     unsigned      mqg21_pool6_16kb                          :  1;
     unsigned      mqg21_pool6_64kb                          :  1;
     unsigned      mqg21_pool7_256b                          :  1;
     unsigned      mqg21_pool7_2kb                           :  1;
     unsigned      mqg21_pool7_16kb                          :  1;
     unsigned      mqg21_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg21_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg22_gtm_status_r_t
 *  @brief Memory Quota Group 22 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg22_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 22 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg22_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg22_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg22_pool7_64kb                          :  1;
     unsigned      mqg22_pool7_16kb                          :  1;
     unsigned      mqg22_pool7_2kb                           :  1;
     unsigned      mqg22_pool7_256b                          :  1;
     unsigned      mqg22_pool6_64kb                          :  1;
     unsigned      mqg22_pool6_16kb                          :  1;
     unsigned      mqg22_pool6_2kb                           :  1;
     unsigned      mqg22_pool6_256b                          :  1;
     unsigned      mqg22_pool5_64kb                          :  1;
     unsigned      mqg22_pool5_16kb                          :  1;
     unsigned      mqg22_pool5_2kb                           :  1;
     unsigned      mqg22_pool5_256b                          :  1;
     unsigned      mqg22_pool4_64kb                          :  1;
     unsigned      mqg22_pool4_16kb                          :  1;
     unsigned      mqg22_pool4_2kb                           :  1;
     unsigned      mqg22_pool4_256b                          :  1;
     unsigned      mqg22_pool3_64kb                          :  1;
     unsigned      mqg22_pool3_16kb                          :  1;
     unsigned      mqg22_pool3_2kb                           :  1;
     unsigned      mqg22_pool3_256b                          :  1;
     unsigned      mqg22_pool2_64kb                          :  1;
     unsigned      mqg22_pool2_16kb                          :  1;
     unsigned      mqg22_pool2_2kb                           :  1;
     unsigned      mqg22_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg22_pool2_256b                          :  1;
     unsigned      mqg22_pool2_2kb                           :  1;
     unsigned      mqg22_pool2_16kb                          :  1;
     unsigned      mqg22_pool2_64kb                          :  1;
     unsigned      mqg22_pool3_256b                          :  1;
     unsigned      mqg22_pool3_2kb                           :  1;
     unsigned      mqg22_pool3_16kb                          :  1;
     unsigned      mqg22_pool3_64kb                          :  1;
     unsigned      mqg22_pool4_256b                          :  1;
     unsigned      mqg22_pool4_2kb                           :  1;
     unsigned      mqg22_pool4_16kb                          :  1;
     unsigned      mqg22_pool4_64kb                          :  1;
     unsigned      mqg22_pool5_256b                          :  1;
     unsigned      mqg22_pool5_2kb                           :  1;
     unsigned      mqg22_pool5_16kb                          :  1;
     unsigned      mqg22_pool5_64kb                          :  1;
     unsigned      mqg22_pool6_256b                          :  1;
     unsigned      mqg22_pool6_2kb                           :  1;
     unsigned      mqg22_pool6_16kb                          :  1;
     unsigned      mqg22_pool6_64kb                          :  1;
     unsigned      mqg22_pool7_256b                          :  1;
     unsigned      mqg22_pool7_2kb                           :  1;
     unsigned      mqg22_pool7_16kb                          :  1;
     unsigned      mqg22_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg22_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg23_gtm_status_r_t
 *  @brief Memory Quota Group 23 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg23_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 23 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg23_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg23_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg23_pool7_64kb                          :  1;
     unsigned      mqg23_pool7_16kb                          :  1;
     unsigned      mqg23_pool7_2kb                           :  1;
     unsigned      mqg23_pool7_256b                          :  1;
     unsigned      mqg23_pool6_64kb                          :  1;
     unsigned      mqg23_pool6_16kb                          :  1;
     unsigned      mqg23_pool6_2kb                           :  1;
     unsigned      mqg23_pool6_256b                          :  1;
     unsigned      mqg23_pool5_64kb                          :  1;
     unsigned      mqg23_pool5_16kb                          :  1;
     unsigned      mqg23_pool5_2kb                           :  1;
     unsigned      mqg23_pool5_256b                          :  1;
     unsigned      mqg23_pool4_64kb                          :  1;
     unsigned      mqg23_pool4_16kb                          :  1;
     unsigned      mqg23_pool4_2kb                           :  1;
     unsigned      mqg23_pool4_256b                          :  1;
     unsigned      mqg23_pool3_64kb                          :  1;
     unsigned      mqg23_pool3_16kb                          :  1;
     unsigned      mqg23_pool3_2kb                           :  1;
     unsigned      mqg23_pool3_256b                          :  1;
     unsigned      mqg23_pool2_64kb                          :  1;
     unsigned      mqg23_pool2_16kb                          :  1;
     unsigned      mqg23_pool2_2kb                           :  1;
     unsigned      mqg23_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg23_pool2_256b                          :  1;
     unsigned      mqg23_pool2_2kb                           :  1;
     unsigned      mqg23_pool2_16kb                          :  1;
     unsigned      mqg23_pool2_64kb                          :  1;
     unsigned      mqg23_pool3_256b                          :  1;
     unsigned      mqg23_pool3_2kb                           :  1;
     unsigned      mqg23_pool3_16kb                          :  1;
     unsigned      mqg23_pool3_64kb                          :  1;
     unsigned      mqg23_pool4_256b                          :  1;
     unsigned      mqg23_pool4_2kb                           :  1;
     unsigned      mqg23_pool4_16kb                          :  1;
     unsigned      mqg23_pool4_64kb                          :  1;
     unsigned      mqg23_pool5_256b                          :  1;
     unsigned      mqg23_pool5_2kb                           :  1;
     unsigned      mqg23_pool5_16kb                          :  1;
     unsigned      mqg23_pool5_64kb                          :  1;
     unsigned      mqg23_pool6_256b                          :  1;
     unsigned      mqg23_pool6_2kb                           :  1;
     unsigned      mqg23_pool6_16kb                          :  1;
     unsigned      mqg23_pool6_64kb                          :  1;
     unsigned      mqg23_pool7_256b                          :  1;
     unsigned      mqg23_pool7_2kb                           :  1;
     unsigned      mqg23_pool7_16kb                          :  1;
     unsigned      mqg23_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg23_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg24_gtm_status_r_t
 *  @brief Memory Quota Group 24 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg24_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 24 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg24_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg24_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg24_pool7_64kb                          :  1;
     unsigned      mqg24_pool7_16kb                          :  1;
     unsigned      mqg24_pool7_2kb                           :  1;
     unsigned      mqg24_pool7_256b                          :  1;
     unsigned      mqg24_pool6_64kb                          :  1;
     unsigned      mqg24_pool6_16kb                          :  1;
     unsigned      mqg24_pool6_2kb                           :  1;
     unsigned      mqg24_pool6_256b                          :  1;
     unsigned      mqg24_pool5_64kb                          :  1;
     unsigned      mqg24_pool5_16kb                          :  1;
     unsigned      mqg24_pool5_2kb                           :  1;
     unsigned      mqg24_pool5_256b                          :  1;
     unsigned      mqg24_pool4_64kb                          :  1;
     unsigned      mqg24_pool4_16kb                          :  1;
     unsigned      mqg24_pool4_2kb                           :  1;
     unsigned      mqg24_pool4_256b                          :  1;
     unsigned      mqg24_pool3_64kb                          :  1;
     unsigned      mqg24_pool3_16kb                          :  1;
     unsigned      mqg24_pool3_2kb                           :  1;
     unsigned      mqg24_pool3_256b                          :  1;
     unsigned      mqg24_pool2_64kb                          :  1;
     unsigned      mqg24_pool2_16kb                          :  1;
     unsigned      mqg24_pool2_2kb                           :  1;
     unsigned      mqg24_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg24_pool2_256b                          :  1;
     unsigned      mqg24_pool2_2kb                           :  1;
     unsigned      mqg24_pool2_16kb                          :  1;
     unsigned      mqg24_pool2_64kb                          :  1;
     unsigned      mqg24_pool3_256b                          :  1;
     unsigned      mqg24_pool3_2kb                           :  1;
     unsigned      mqg24_pool3_16kb                          :  1;
     unsigned      mqg24_pool3_64kb                          :  1;
     unsigned      mqg24_pool4_256b                          :  1;
     unsigned      mqg24_pool4_2kb                           :  1;
     unsigned      mqg24_pool4_16kb                          :  1;
     unsigned      mqg24_pool4_64kb                          :  1;
     unsigned      mqg24_pool5_256b                          :  1;
     unsigned      mqg24_pool5_2kb                           :  1;
     unsigned      mqg24_pool5_16kb                          :  1;
     unsigned      mqg24_pool5_64kb                          :  1;
     unsigned      mqg24_pool6_256b                          :  1;
     unsigned      mqg24_pool6_2kb                           :  1;
     unsigned      mqg24_pool6_16kb                          :  1;
     unsigned      mqg24_pool6_64kb                          :  1;
     unsigned      mqg24_pool7_256b                          :  1;
     unsigned      mqg24_pool7_2kb                           :  1;
     unsigned      mqg24_pool7_16kb                          :  1;
     unsigned      mqg24_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg24_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg25_gtm_status_r_t
 *  @brief Memory Quota Group 25 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg25_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 25 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg25_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg25_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg25_pool7_64kb                          :  1;
     unsigned      mqg25_pool7_16kb                          :  1;
     unsigned      mqg25_pool7_2kb                           :  1;
     unsigned      mqg25_pool7_256b                          :  1;
     unsigned      mqg25_pool6_64kb                          :  1;
     unsigned      mqg25_pool6_16kb                          :  1;
     unsigned      mqg25_pool6_2kb                           :  1;
     unsigned      mqg25_pool6_256b                          :  1;
     unsigned      mqg25_pool5_64kb                          :  1;
     unsigned      mqg25_pool5_16kb                          :  1;
     unsigned      mqg25_pool5_2kb                           :  1;
     unsigned      mqg25_pool5_256b                          :  1;
     unsigned      mqg25_pool4_64kb                          :  1;
     unsigned      mqg25_pool4_16kb                          :  1;
     unsigned      mqg25_pool4_2kb                           :  1;
     unsigned      mqg25_pool4_256b                          :  1;
     unsigned      mqg25_pool3_64kb                          :  1;
     unsigned      mqg25_pool3_16kb                          :  1;
     unsigned      mqg25_pool3_2kb                           :  1;
     unsigned      mqg25_pool3_256b                          :  1;
     unsigned      mqg25_pool2_64kb                          :  1;
     unsigned      mqg25_pool2_16kb                          :  1;
     unsigned      mqg25_pool2_2kb                           :  1;
     unsigned      mqg25_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg25_pool2_256b                          :  1;
     unsigned      mqg25_pool2_2kb                           :  1;
     unsigned      mqg25_pool2_16kb                          :  1;
     unsigned      mqg25_pool2_64kb                          :  1;
     unsigned      mqg25_pool3_256b                          :  1;
     unsigned      mqg25_pool3_2kb                           :  1;
     unsigned      mqg25_pool3_16kb                          :  1;
     unsigned      mqg25_pool3_64kb                          :  1;
     unsigned      mqg25_pool4_256b                          :  1;
     unsigned      mqg25_pool4_2kb                           :  1;
     unsigned      mqg25_pool4_16kb                          :  1;
     unsigned      mqg25_pool4_64kb                          :  1;
     unsigned      mqg25_pool5_256b                          :  1;
     unsigned      mqg25_pool5_2kb                           :  1;
     unsigned      mqg25_pool5_16kb                          :  1;
     unsigned      mqg25_pool5_64kb                          :  1;
     unsigned      mqg25_pool6_256b                          :  1;
     unsigned      mqg25_pool6_2kb                           :  1;
     unsigned      mqg25_pool6_16kb                          :  1;
     unsigned      mqg25_pool6_64kb                          :  1;
     unsigned      mqg25_pool7_256b                          :  1;
     unsigned      mqg25_pool7_2kb                           :  1;
     unsigned      mqg25_pool7_16kb                          :  1;
     unsigned      mqg25_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg25_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg26_gtm_status_r_t
 *  @brief Memory Quota Group 26 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg26_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 26 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg26_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg26_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg26_pool7_64kb                          :  1;
     unsigned      mqg26_pool7_16kb                          :  1;
     unsigned      mqg26_pool7_2kb                           :  1;
     unsigned      mqg26_pool7_256b                          :  1;
     unsigned      mqg26_pool6_64kb                          :  1;
     unsigned      mqg26_pool6_16kb                          :  1;
     unsigned      mqg26_pool6_2kb                           :  1;
     unsigned      mqg26_pool6_256b                          :  1;
     unsigned      mqg26_pool5_64kb                          :  1;
     unsigned      mqg26_pool5_16kb                          :  1;
     unsigned      mqg26_pool5_2kb                           :  1;
     unsigned      mqg26_pool5_256b                          :  1;
     unsigned      mqg26_pool4_64kb                          :  1;
     unsigned      mqg26_pool4_16kb                          :  1;
     unsigned      mqg26_pool4_2kb                           :  1;
     unsigned      mqg26_pool4_256b                          :  1;
     unsigned      mqg26_pool3_64kb                          :  1;
     unsigned      mqg26_pool3_16kb                          :  1;
     unsigned      mqg26_pool3_2kb                           :  1;
     unsigned      mqg26_pool3_256b                          :  1;
     unsigned      mqg26_pool2_64kb                          :  1;
     unsigned      mqg26_pool2_16kb                          :  1;
     unsigned      mqg26_pool2_2kb                           :  1;
     unsigned      mqg26_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg26_pool2_256b                          :  1;
     unsigned      mqg26_pool2_2kb                           :  1;
     unsigned      mqg26_pool2_16kb                          :  1;
     unsigned      mqg26_pool2_64kb                          :  1;
     unsigned      mqg26_pool3_256b                          :  1;
     unsigned      mqg26_pool3_2kb                           :  1;
     unsigned      mqg26_pool3_16kb                          :  1;
     unsigned      mqg26_pool3_64kb                          :  1;
     unsigned      mqg26_pool4_256b                          :  1;
     unsigned      mqg26_pool4_2kb                           :  1;
     unsigned      mqg26_pool4_16kb                          :  1;
     unsigned      mqg26_pool4_64kb                          :  1;
     unsigned      mqg26_pool5_256b                          :  1;
     unsigned      mqg26_pool5_2kb                           :  1;
     unsigned      mqg26_pool5_16kb                          :  1;
     unsigned      mqg26_pool5_64kb                          :  1;
     unsigned      mqg26_pool6_256b                          :  1;
     unsigned      mqg26_pool6_2kb                           :  1;
     unsigned      mqg26_pool6_16kb                          :  1;
     unsigned      mqg26_pool6_64kb                          :  1;
     unsigned      mqg26_pool7_256b                          :  1;
     unsigned      mqg26_pool7_2kb                           :  1;
     unsigned      mqg26_pool7_16kb                          :  1;
     unsigned      mqg26_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg26_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg27_gtm_status_r_t
 *  @brief Memory Quota Group 27 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg27_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 27 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg27_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg27_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg27_pool7_64kb                          :  1;
     unsigned      mqg27_pool7_16kb                          :  1;
     unsigned      mqg27_pool7_2kb                           :  1;
     unsigned      mqg27_pool7_256b                          :  1;
     unsigned      mqg27_pool6_64kb                          :  1;
     unsigned      mqg27_pool6_16kb                          :  1;
     unsigned      mqg27_pool6_2kb                           :  1;
     unsigned      mqg27_pool6_256b                          :  1;
     unsigned      mqg27_pool5_64kb                          :  1;
     unsigned      mqg27_pool5_16kb                          :  1;
     unsigned      mqg27_pool5_2kb                           :  1;
     unsigned      mqg27_pool5_256b                          :  1;
     unsigned      mqg27_pool4_64kb                          :  1;
     unsigned      mqg27_pool4_16kb                          :  1;
     unsigned      mqg27_pool4_2kb                           :  1;
     unsigned      mqg27_pool4_256b                          :  1;
     unsigned      mqg27_pool3_64kb                          :  1;
     unsigned      mqg27_pool3_16kb                          :  1;
     unsigned      mqg27_pool3_2kb                           :  1;
     unsigned      mqg27_pool3_256b                          :  1;
     unsigned      mqg27_pool2_64kb                          :  1;
     unsigned      mqg27_pool2_16kb                          :  1;
     unsigned      mqg27_pool2_2kb                           :  1;
     unsigned      mqg27_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg27_pool2_256b                          :  1;
     unsigned      mqg27_pool2_2kb                           :  1;
     unsigned      mqg27_pool2_16kb                          :  1;
     unsigned      mqg27_pool2_64kb                          :  1;
     unsigned      mqg27_pool3_256b                          :  1;
     unsigned      mqg27_pool3_2kb                           :  1;
     unsigned      mqg27_pool3_16kb                          :  1;
     unsigned      mqg27_pool3_64kb                          :  1;
     unsigned      mqg27_pool4_256b                          :  1;
     unsigned      mqg27_pool4_2kb                           :  1;
     unsigned      mqg27_pool4_16kb                          :  1;
     unsigned      mqg27_pool4_64kb                          :  1;
     unsigned      mqg27_pool5_256b                          :  1;
     unsigned      mqg27_pool5_2kb                           :  1;
     unsigned      mqg27_pool5_16kb                          :  1;
     unsigned      mqg27_pool5_64kb                          :  1;
     unsigned      mqg27_pool6_256b                          :  1;
     unsigned      mqg27_pool6_2kb                           :  1;
     unsigned      mqg27_pool6_16kb                          :  1;
     unsigned      mqg27_pool6_64kb                          :  1;
     unsigned      mqg27_pool7_256b                          :  1;
     unsigned      mqg27_pool7_2kb                           :  1;
     unsigned      mqg27_pool7_16kb                          :  1;
     unsigned      mqg27_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg27_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg28_gtm_status_r_t
 *  @brief Memory Quota Group 28 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg28_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 28 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg28_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg28_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg28_pool7_64kb                          :  1;
     unsigned      mqg28_pool7_16kb                          :  1;
     unsigned      mqg28_pool7_2kb                           :  1;
     unsigned      mqg28_pool7_256b                          :  1;
     unsigned      mqg28_pool6_64kb                          :  1;
     unsigned      mqg28_pool6_16kb                          :  1;
     unsigned      mqg28_pool6_2kb                           :  1;
     unsigned      mqg28_pool6_256b                          :  1;
     unsigned      mqg28_pool5_64kb                          :  1;
     unsigned      mqg28_pool5_16kb                          :  1;
     unsigned      mqg28_pool5_2kb                           :  1;
     unsigned      mqg28_pool5_256b                          :  1;
     unsigned      mqg28_pool4_64kb                          :  1;
     unsigned      mqg28_pool4_16kb                          :  1;
     unsigned      mqg28_pool4_2kb                           :  1;
     unsigned      mqg28_pool4_256b                          :  1;
     unsigned      mqg28_pool3_64kb                          :  1;
     unsigned      mqg28_pool3_16kb                          :  1;
     unsigned      mqg28_pool3_2kb                           :  1;
     unsigned      mqg28_pool3_256b                          :  1;
     unsigned      mqg28_pool2_64kb                          :  1;
     unsigned      mqg28_pool2_16kb                          :  1;
     unsigned      mqg28_pool2_2kb                           :  1;
     unsigned      mqg28_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg28_pool2_256b                          :  1;
     unsigned      mqg28_pool2_2kb                           :  1;
     unsigned      mqg28_pool2_16kb                          :  1;
     unsigned      mqg28_pool2_64kb                          :  1;
     unsigned      mqg28_pool3_256b                          :  1;
     unsigned      mqg28_pool3_2kb                           :  1;
     unsigned      mqg28_pool3_16kb                          :  1;
     unsigned      mqg28_pool3_64kb                          :  1;
     unsigned      mqg28_pool4_256b                          :  1;
     unsigned      mqg28_pool4_2kb                           :  1;
     unsigned      mqg28_pool4_16kb                          :  1;
     unsigned      mqg28_pool4_64kb                          :  1;
     unsigned      mqg28_pool5_256b                          :  1;
     unsigned      mqg28_pool5_2kb                           :  1;
     unsigned      mqg28_pool5_16kb                          :  1;
     unsigned      mqg28_pool5_64kb                          :  1;
     unsigned      mqg28_pool6_256b                          :  1;
     unsigned      mqg28_pool6_2kb                           :  1;
     unsigned      mqg28_pool6_16kb                          :  1;
     unsigned      mqg28_pool6_64kb                          :  1;
     unsigned      mqg28_pool7_256b                          :  1;
     unsigned      mqg28_pool7_2kb                           :  1;
     unsigned      mqg28_pool7_16kb                          :  1;
     unsigned      mqg28_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg28_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg29_gtm_status_r_t
 *  @brief Memory Quota Group 29 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg29_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 29 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg29_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg29_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg29_pool7_64kb                          :  1;
     unsigned      mqg29_pool7_16kb                          :  1;
     unsigned      mqg29_pool7_2kb                           :  1;
     unsigned      mqg29_pool7_256b                          :  1;
     unsigned      mqg29_pool6_64kb                          :  1;
     unsigned      mqg29_pool6_16kb                          :  1;
     unsigned      mqg29_pool6_2kb                           :  1;
     unsigned      mqg29_pool6_256b                          :  1;
     unsigned      mqg29_pool5_64kb                          :  1;
     unsigned      mqg29_pool5_16kb                          :  1;
     unsigned      mqg29_pool5_2kb                           :  1;
     unsigned      mqg29_pool5_256b                          :  1;
     unsigned      mqg29_pool4_64kb                          :  1;
     unsigned      mqg29_pool4_16kb                          :  1;
     unsigned      mqg29_pool4_2kb                           :  1;
     unsigned      mqg29_pool4_256b                          :  1;
     unsigned      mqg29_pool3_64kb                          :  1;
     unsigned      mqg29_pool3_16kb                          :  1;
     unsigned      mqg29_pool3_2kb                           :  1;
     unsigned      mqg29_pool3_256b                          :  1;
     unsigned      mqg29_pool2_64kb                          :  1;
     unsigned      mqg29_pool2_16kb                          :  1;
     unsigned      mqg29_pool2_2kb                           :  1;
     unsigned      mqg29_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg29_pool2_256b                          :  1;
     unsigned      mqg29_pool2_2kb                           :  1;
     unsigned      mqg29_pool2_16kb                          :  1;
     unsigned      mqg29_pool2_64kb                          :  1;
     unsigned      mqg29_pool3_256b                          :  1;
     unsigned      mqg29_pool3_2kb                           :  1;
     unsigned      mqg29_pool3_16kb                          :  1;
     unsigned      mqg29_pool3_64kb                          :  1;
     unsigned      mqg29_pool4_256b                          :  1;
     unsigned      mqg29_pool4_2kb                           :  1;
     unsigned      mqg29_pool4_16kb                          :  1;
     unsigned      mqg29_pool4_64kb                          :  1;
     unsigned      mqg29_pool5_256b                          :  1;
     unsigned      mqg29_pool5_2kb                           :  1;
     unsigned      mqg29_pool5_16kb                          :  1;
     unsigned      mqg29_pool5_64kb                          :  1;
     unsigned      mqg29_pool6_256b                          :  1;
     unsigned      mqg29_pool6_2kb                           :  1;
     unsigned      mqg29_pool6_16kb                          :  1;
     unsigned      mqg29_pool6_64kb                          :  1;
     unsigned      mqg29_pool7_256b                          :  1;
     unsigned      mqg29_pool7_2kb                           :  1;
     unsigned      mqg29_pool7_16kb                          :  1;
     unsigned      mqg29_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg29_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg30_gtm_status_r_t
 *  @brief Memory Quota Group 30 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg30_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 30 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg30_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg30_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg30_pool7_64kb                          :  1;
     unsigned      mqg30_pool7_16kb                          :  1;
     unsigned      mqg30_pool7_2kb                           :  1;
     unsigned      mqg30_pool7_256b                          :  1;
     unsigned      mqg30_pool6_64kb                          :  1;
     unsigned      mqg30_pool6_16kb                          :  1;
     unsigned      mqg30_pool6_2kb                           :  1;
     unsigned      mqg30_pool6_256b                          :  1;
     unsigned      mqg30_pool5_64kb                          :  1;
     unsigned      mqg30_pool5_16kb                          :  1;
     unsigned      mqg30_pool5_2kb                           :  1;
     unsigned      mqg30_pool5_256b                          :  1;
     unsigned      mqg30_pool4_64kb                          :  1;
     unsigned      mqg30_pool4_16kb                          :  1;
     unsigned      mqg30_pool4_2kb                           :  1;
     unsigned      mqg30_pool4_256b                          :  1;
     unsigned      mqg30_pool3_64kb                          :  1;
     unsigned      mqg30_pool3_16kb                          :  1;
     unsigned      mqg30_pool3_2kb                           :  1;
     unsigned      mqg30_pool3_256b                          :  1;
     unsigned      mqg30_pool2_64kb                          :  1;
     unsigned      mqg30_pool2_16kb                          :  1;
     unsigned      mqg30_pool2_2kb                           :  1;
     unsigned      mqg30_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg30_pool2_256b                          :  1;
     unsigned      mqg30_pool2_2kb                           :  1;
     unsigned      mqg30_pool2_16kb                          :  1;
     unsigned      mqg30_pool2_64kb                          :  1;
     unsigned      mqg30_pool3_256b                          :  1;
     unsigned      mqg30_pool3_2kb                           :  1;
     unsigned      mqg30_pool3_16kb                          :  1;
     unsigned      mqg30_pool3_64kb                          :  1;
     unsigned      mqg30_pool4_256b                          :  1;
     unsigned      mqg30_pool4_2kb                           :  1;
     unsigned      mqg30_pool4_16kb                          :  1;
     unsigned      mqg30_pool4_64kb                          :  1;
     unsigned      mqg30_pool5_256b                          :  1;
     unsigned      mqg30_pool5_2kb                           :  1;
     unsigned      mqg30_pool5_16kb                          :  1;
     unsigned      mqg30_pool5_64kb                          :  1;
     unsigned      mqg30_pool6_256b                          :  1;
     unsigned      mqg30_pool6_2kb                           :  1;
     unsigned      mqg30_pool6_16kb                          :  1;
     unsigned      mqg30_pool6_64kb                          :  1;
     unsigned      mqg30_pool7_256b                          :  1;
     unsigned      mqg30_pool7_2kb                           :  1;
     unsigned      mqg30_pool7_16kb                          :  1;
     unsigned      mqg30_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg30_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg31_gtm_status_r_t
 *  @brief Memory Quota Group 31 Greater Than Maximum Counter Value Status Register
 *  @details This register holds read-only status for the > max counter value status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg31_gtm_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        7, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        7, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        7, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        7, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        6, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        6, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        6, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        6, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        5, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        5, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        5, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        5, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        4, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        4, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        4, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        4, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        3, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        3, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        3, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        3, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        2, 64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        2, 16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        2, 2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 31 allocated blocks > max counter value for pool
 *        2, 256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg31_gtm_status_r_t
 *
 * Implemented by: 
 *      mqg31_gtm_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_pool7_64kb                          :  1;
     unsigned      mqg31_pool7_16kb                          :  1;
     unsigned      mqg31_pool7_2kb                           :  1;
     unsigned      mqg31_pool7_256b                          :  1;
     unsigned      mqg31_pool6_64kb                          :  1;
     unsigned      mqg31_pool6_16kb                          :  1;
     unsigned      mqg31_pool6_2kb                           :  1;
     unsigned      mqg31_pool6_256b                          :  1;
     unsigned      mqg31_pool5_64kb                          :  1;
     unsigned      mqg31_pool5_16kb                          :  1;
     unsigned      mqg31_pool5_2kb                           :  1;
     unsigned      mqg31_pool5_256b                          :  1;
     unsigned      mqg31_pool4_64kb                          :  1;
     unsigned      mqg31_pool4_16kb                          :  1;
     unsigned      mqg31_pool4_2kb                           :  1;
     unsigned      mqg31_pool4_256b                          :  1;
     unsigned      mqg31_pool3_64kb                          :  1;
     unsigned      mqg31_pool3_16kb                          :  1;
     unsigned      mqg31_pool3_2kb                           :  1;
     unsigned      mqg31_pool3_256b                          :  1;
     unsigned      mqg31_pool2_64kb                          :  1;
     unsigned      mqg31_pool2_16kb                          :  1;
     unsigned      mqg31_pool2_2kb                           :  1;
     unsigned      mqg31_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg31_pool2_256b                          :  1;
     unsigned      mqg31_pool2_2kb                           :  1;
     unsigned      mqg31_pool2_16kb                          :  1;
     unsigned      mqg31_pool2_64kb                          :  1;
     unsigned      mqg31_pool3_256b                          :  1;
     unsigned      mqg31_pool3_2kb                           :  1;
     unsigned      mqg31_pool3_16kb                          :  1;
     unsigned      mqg31_pool3_64kb                          :  1;
     unsigned      mqg31_pool4_256b                          :  1;
     unsigned      mqg31_pool4_2kb                           :  1;
     unsigned      mqg31_pool4_16kb                          :  1;
     unsigned      mqg31_pool4_64kb                          :  1;
     unsigned      mqg31_pool5_256b                          :  1;
     unsigned      mqg31_pool5_2kb                           :  1;
     unsigned      mqg31_pool5_16kb                          :  1;
     unsigned      mqg31_pool5_64kb                          :  1;
     unsigned      mqg31_pool6_256b                          :  1;
     unsigned      mqg31_pool6_2kb                           :  1;
     unsigned      mqg31_pool6_16kb                          :  1;
     unsigned      mqg31_pool6_64kb                          :  1;
     unsigned      mqg31_pool7_256b                          :  1;
     unsigned      mqg31_pool7_2kb                           :  1;
     unsigned      mqg31_pool7_16kb                          :  1;
     unsigned      mqg31_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg31_gtm_status_r_t;

/*! @struct ncp_nca_mtp_mqg0_lt0_status_r_t
 *  @brief Memory Quota Group 0 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg0_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 0 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg0_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg0_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg0_pool7_64kb                           :  1;
     unsigned      mqg0_pool7_16kb                           :  1;
     unsigned      mqg0_pool7_2kb                            :  1;
     unsigned      mqg0_pool7_256b                           :  1;
     unsigned      mqg0_pool6_64kb                           :  1;
     unsigned      mqg0_pool6_16kb                           :  1;
     unsigned      mqg0_pool6_2kb                            :  1;
     unsigned      mqg0_pool6_256b                           :  1;
     unsigned      mqg0_pool5_64kb                           :  1;
     unsigned      mqg0_pool5_16kb                           :  1;
     unsigned      mqg0_pool5_2kb                            :  1;
     unsigned      mqg0_pool5_256b                           :  1;
     unsigned      mqg0_pool4_64kb                           :  1;
     unsigned      mqg0_pool4_16kb                           :  1;
     unsigned      mqg0_pool4_2kb                            :  1;
     unsigned      mqg0_pool4_256b                           :  1;
     unsigned      mqg0_pool3_64kb                           :  1;
     unsigned      mqg0_pool3_16kb                           :  1;
     unsigned      mqg0_pool3_2kb                            :  1;
     unsigned      mqg0_pool3_256b                           :  1;
     unsigned      mqg0_pool2_64kb                           :  1;
     unsigned      mqg0_pool2_16kb                           :  1;
     unsigned      mqg0_pool2_2kb                            :  1;
     unsigned      mqg0_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg0_pool2_256b                           :  1;
     unsigned      mqg0_pool2_2kb                            :  1;
     unsigned      mqg0_pool2_16kb                           :  1;
     unsigned      mqg0_pool2_64kb                           :  1;
     unsigned      mqg0_pool3_256b                           :  1;
     unsigned      mqg0_pool3_2kb                            :  1;
     unsigned      mqg0_pool3_16kb                           :  1;
     unsigned      mqg0_pool3_64kb                           :  1;
     unsigned      mqg0_pool4_256b                           :  1;
     unsigned      mqg0_pool4_2kb                            :  1;
     unsigned      mqg0_pool4_16kb                           :  1;
     unsigned      mqg0_pool4_64kb                           :  1;
     unsigned      mqg0_pool5_256b                           :  1;
     unsigned      mqg0_pool5_2kb                            :  1;
     unsigned      mqg0_pool5_16kb                           :  1;
     unsigned      mqg0_pool5_64kb                           :  1;
     unsigned      mqg0_pool6_256b                           :  1;
     unsigned      mqg0_pool6_2kb                            :  1;
     unsigned      mqg0_pool6_16kb                           :  1;
     unsigned      mqg0_pool6_64kb                           :  1;
     unsigned      mqg0_pool7_256b                           :  1;
     unsigned      mqg0_pool7_2kb                            :  1;
     unsigned      mqg0_pool7_16kb                           :  1;
     unsigned      mqg0_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg0_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg1_lt0_status_r_t
 *  @brief Memory Quota Group 1 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg1_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 1 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg1_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg1_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg1_pool7_64kb                           :  1;
     unsigned      mqg1_pool7_16kb                           :  1;
     unsigned      mqg1_pool7_2kb                            :  1;
     unsigned      mqg1_pool7_256b                           :  1;
     unsigned      mqg1_pool6_64kb                           :  1;
     unsigned      mqg1_pool6_16kb                           :  1;
     unsigned      mqg1_pool6_2kb                            :  1;
     unsigned      mqg1_pool6_256b                           :  1;
     unsigned      mqg1_pool5_64kb                           :  1;
     unsigned      mqg1_pool5_16kb                           :  1;
     unsigned      mqg1_pool5_2kb                            :  1;
     unsigned      mqg1_pool5_256b                           :  1;
     unsigned      mqg1_pool4_64kb                           :  1;
     unsigned      mqg1_pool4_16kb                           :  1;
     unsigned      mqg1_pool4_2kb                            :  1;
     unsigned      mqg1_pool4_256b                           :  1;
     unsigned      mqg1_pool3_64kb                           :  1;
     unsigned      mqg1_pool3_16kb                           :  1;
     unsigned      mqg1_pool3_2kb                            :  1;
     unsigned      mqg1_pool3_256b                           :  1;
     unsigned      mqg1_pool2_64kb                           :  1;
     unsigned      mqg1_pool2_16kb                           :  1;
     unsigned      mqg1_pool2_2kb                            :  1;
     unsigned      mqg1_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg1_pool2_256b                           :  1;
     unsigned      mqg1_pool2_2kb                            :  1;
     unsigned      mqg1_pool2_16kb                           :  1;
     unsigned      mqg1_pool2_64kb                           :  1;
     unsigned      mqg1_pool3_256b                           :  1;
     unsigned      mqg1_pool3_2kb                            :  1;
     unsigned      mqg1_pool3_16kb                           :  1;
     unsigned      mqg1_pool3_64kb                           :  1;
     unsigned      mqg1_pool4_256b                           :  1;
     unsigned      mqg1_pool4_2kb                            :  1;
     unsigned      mqg1_pool4_16kb                           :  1;
     unsigned      mqg1_pool4_64kb                           :  1;
     unsigned      mqg1_pool5_256b                           :  1;
     unsigned      mqg1_pool5_2kb                            :  1;
     unsigned      mqg1_pool5_16kb                           :  1;
     unsigned      mqg1_pool5_64kb                           :  1;
     unsigned      mqg1_pool6_256b                           :  1;
     unsigned      mqg1_pool6_2kb                            :  1;
     unsigned      mqg1_pool6_16kb                           :  1;
     unsigned      mqg1_pool6_64kb                           :  1;
     unsigned      mqg1_pool7_256b                           :  1;
     unsigned      mqg1_pool7_2kb                            :  1;
     unsigned      mqg1_pool7_16kb                           :  1;
     unsigned      mqg1_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg1_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg2_lt0_status_r_t
 *  @brief Memory Quota Group 2 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg2_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 2 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg2_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg2_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg2_pool7_64kb                           :  1;
     unsigned      mqg2_pool7_16kb                           :  1;
     unsigned      mqg2_pool7_2kb                            :  1;
     unsigned      mqg2_pool7_256b                           :  1;
     unsigned      mqg2_pool6_64kb                           :  1;
     unsigned      mqg2_pool6_16kb                           :  1;
     unsigned      mqg2_pool6_2kb                            :  1;
     unsigned      mqg2_pool6_256b                           :  1;
     unsigned      mqg2_pool5_64kb                           :  1;
     unsigned      mqg2_pool5_16kb                           :  1;
     unsigned      mqg2_pool5_2kb                            :  1;
     unsigned      mqg2_pool5_256b                           :  1;
     unsigned      mqg2_pool4_64kb                           :  1;
     unsigned      mqg2_pool4_16kb                           :  1;
     unsigned      mqg2_pool4_2kb                            :  1;
     unsigned      mqg2_pool4_256b                           :  1;
     unsigned      mqg2_pool3_64kb                           :  1;
     unsigned      mqg2_pool3_16kb                           :  1;
     unsigned      mqg2_pool3_2kb                            :  1;
     unsigned      mqg2_pool3_256b                           :  1;
     unsigned      mqg2_pool2_64kb                           :  1;
     unsigned      mqg2_pool2_16kb                           :  1;
     unsigned      mqg2_pool2_2kb                            :  1;
     unsigned      mqg2_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg2_pool2_256b                           :  1;
     unsigned      mqg2_pool2_2kb                            :  1;
     unsigned      mqg2_pool2_16kb                           :  1;
     unsigned      mqg2_pool2_64kb                           :  1;
     unsigned      mqg2_pool3_256b                           :  1;
     unsigned      mqg2_pool3_2kb                            :  1;
     unsigned      mqg2_pool3_16kb                           :  1;
     unsigned      mqg2_pool3_64kb                           :  1;
     unsigned      mqg2_pool4_256b                           :  1;
     unsigned      mqg2_pool4_2kb                            :  1;
     unsigned      mqg2_pool4_16kb                           :  1;
     unsigned      mqg2_pool4_64kb                           :  1;
     unsigned      mqg2_pool5_256b                           :  1;
     unsigned      mqg2_pool5_2kb                            :  1;
     unsigned      mqg2_pool5_16kb                           :  1;
     unsigned      mqg2_pool5_64kb                           :  1;
     unsigned      mqg2_pool6_256b                           :  1;
     unsigned      mqg2_pool6_2kb                            :  1;
     unsigned      mqg2_pool6_16kb                           :  1;
     unsigned      mqg2_pool6_64kb                           :  1;
     unsigned      mqg2_pool7_256b                           :  1;
     unsigned      mqg2_pool7_2kb                            :  1;
     unsigned      mqg2_pool7_16kb                           :  1;
     unsigned      mqg2_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg2_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg3_lt0_status_r_t
 *  @brief Memory Quota Group 3 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg3_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 3 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg3_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg3_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg3_pool7_64kb                           :  1;
     unsigned      mqg3_pool7_16kb                           :  1;
     unsigned      mqg3_pool7_2kb                            :  1;
     unsigned      mqg3_pool7_256b                           :  1;
     unsigned      mqg3_pool6_64kb                           :  1;
     unsigned      mqg3_pool6_16kb                           :  1;
     unsigned      mqg3_pool6_2kb                            :  1;
     unsigned      mqg3_pool6_256b                           :  1;
     unsigned      mqg3_pool5_64kb                           :  1;
     unsigned      mqg3_pool5_16kb                           :  1;
     unsigned      mqg3_pool5_2kb                            :  1;
     unsigned      mqg3_pool5_256b                           :  1;
     unsigned      mqg3_pool4_64kb                           :  1;
     unsigned      mqg3_pool4_16kb                           :  1;
     unsigned      mqg3_pool4_2kb                            :  1;
     unsigned      mqg3_pool4_256b                           :  1;
     unsigned      mqg3_pool3_64kb                           :  1;
     unsigned      mqg3_pool3_16kb                           :  1;
     unsigned      mqg3_pool3_2kb                            :  1;
     unsigned      mqg3_pool3_256b                           :  1;
     unsigned      mqg3_pool2_64kb                           :  1;
     unsigned      mqg3_pool2_16kb                           :  1;
     unsigned      mqg3_pool2_2kb                            :  1;
     unsigned      mqg3_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg3_pool2_256b                           :  1;
     unsigned      mqg3_pool2_2kb                            :  1;
     unsigned      mqg3_pool2_16kb                           :  1;
     unsigned      mqg3_pool2_64kb                           :  1;
     unsigned      mqg3_pool3_256b                           :  1;
     unsigned      mqg3_pool3_2kb                            :  1;
     unsigned      mqg3_pool3_16kb                           :  1;
     unsigned      mqg3_pool3_64kb                           :  1;
     unsigned      mqg3_pool4_256b                           :  1;
     unsigned      mqg3_pool4_2kb                            :  1;
     unsigned      mqg3_pool4_16kb                           :  1;
     unsigned      mqg3_pool4_64kb                           :  1;
     unsigned      mqg3_pool5_256b                           :  1;
     unsigned      mqg3_pool5_2kb                            :  1;
     unsigned      mqg3_pool5_16kb                           :  1;
     unsigned      mqg3_pool5_64kb                           :  1;
     unsigned      mqg3_pool6_256b                           :  1;
     unsigned      mqg3_pool6_2kb                            :  1;
     unsigned      mqg3_pool6_16kb                           :  1;
     unsigned      mqg3_pool6_64kb                           :  1;
     unsigned      mqg3_pool7_256b                           :  1;
     unsigned      mqg3_pool7_2kb                            :  1;
     unsigned      mqg3_pool7_16kb                           :  1;
     unsigned      mqg3_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg3_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg4_lt0_status_r_t
 *  @brief Memory Quota Group 4 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg4_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 4 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg4_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg4_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg4_pool7_64kb                           :  1;
     unsigned      mqg4_pool7_16kb                           :  1;
     unsigned      mqg4_pool7_2kb                            :  1;
     unsigned      mqg4_pool7_256b                           :  1;
     unsigned      mqg4_pool6_64kb                           :  1;
     unsigned      mqg4_pool6_16kb                           :  1;
     unsigned      mqg4_pool6_2kb                            :  1;
     unsigned      mqg4_pool6_256b                           :  1;
     unsigned      mqg4_pool5_64kb                           :  1;
     unsigned      mqg4_pool5_16kb                           :  1;
     unsigned      mqg4_pool5_2kb                            :  1;
     unsigned      mqg4_pool5_256b                           :  1;
     unsigned      mqg4_pool4_64kb                           :  1;
     unsigned      mqg4_pool4_16kb                           :  1;
     unsigned      mqg4_pool4_2kb                            :  1;
     unsigned      mqg4_pool4_256b                           :  1;
     unsigned      mqg4_pool3_64kb                           :  1;
     unsigned      mqg4_pool3_16kb                           :  1;
     unsigned      mqg4_pool3_2kb                            :  1;
     unsigned      mqg4_pool3_256b                           :  1;
     unsigned      mqg4_pool2_64kb                           :  1;
     unsigned      mqg4_pool2_16kb                           :  1;
     unsigned      mqg4_pool2_2kb                            :  1;
     unsigned      mqg4_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg4_pool2_256b                           :  1;
     unsigned      mqg4_pool2_2kb                            :  1;
     unsigned      mqg4_pool2_16kb                           :  1;
     unsigned      mqg4_pool2_64kb                           :  1;
     unsigned      mqg4_pool3_256b                           :  1;
     unsigned      mqg4_pool3_2kb                            :  1;
     unsigned      mqg4_pool3_16kb                           :  1;
     unsigned      mqg4_pool3_64kb                           :  1;
     unsigned      mqg4_pool4_256b                           :  1;
     unsigned      mqg4_pool4_2kb                            :  1;
     unsigned      mqg4_pool4_16kb                           :  1;
     unsigned      mqg4_pool4_64kb                           :  1;
     unsigned      mqg4_pool5_256b                           :  1;
     unsigned      mqg4_pool5_2kb                            :  1;
     unsigned      mqg4_pool5_16kb                           :  1;
     unsigned      mqg4_pool5_64kb                           :  1;
     unsigned      mqg4_pool6_256b                           :  1;
     unsigned      mqg4_pool6_2kb                            :  1;
     unsigned      mqg4_pool6_16kb                           :  1;
     unsigned      mqg4_pool6_64kb                           :  1;
     unsigned      mqg4_pool7_256b                           :  1;
     unsigned      mqg4_pool7_2kb                            :  1;
     unsigned      mqg4_pool7_16kb                           :  1;
     unsigned      mqg4_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg4_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg5_lt0_status_r_t
 *  @brief Memory Quota Group 5 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg5_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 5 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg5_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg5_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg5_pool7_64kb                           :  1;
     unsigned      mqg5_pool7_16kb                           :  1;
     unsigned      mqg5_pool7_2kb                            :  1;
     unsigned      mqg5_pool7_256b                           :  1;
     unsigned      mqg5_pool6_64kb                           :  1;
     unsigned      mqg5_pool6_16kb                           :  1;
     unsigned      mqg5_pool6_2kb                            :  1;
     unsigned      mqg5_pool6_256b                           :  1;
     unsigned      mqg5_pool5_64kb                           :  1;
     unsigned      mqg5_pool5_16kb                           :  1;
     unsigned      mqg5_pool5_2kb                            :  1;
     unsigned      mqg5_pool5_256b                           :  1;
     unsigned      mqg5_pool4_64kb                           :  1;
     unsigned      mqg5_pool4_16kb                           :  1;
     unsigned      mqg5_pool4_2kb                            :  1;
     unsigned      mqg5_pool4_256b                           :  1;
     unsigned      mqg5_pool3_64kb                           :  1;
     unsigned      mqg5_pool3_16kb                           :  1;
     unsigned      mqg5_pool3_2kb                            :  1;
     unsigned      mqg5_pool3_256b                           :  1;
     unsigned      mqg5_pool2_64kb                           :  1;
     unsigned      mqg5_pool2_16kb                           :  1;
     unsigned      mqg5_pool2_2kb                            :  1;
     unsigned      mqg5_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg5_pool2_256b                           :  1;
     unsigned      mqg5_pool2_2kb                            :  1;
     unsigned      mqg5_pool2_16kb                           :  1;
     unsigned      mqg5_pool2_64kb                           :  1;
     unsigned      mqg5_pool3_256b                           :  1;
     unsigned      mqg5_pool3_2kb                            :  1;
     unsigned      mqg5_pool3_16kb                           :  1;
     unsigned      mqg5_pool3_64kb                           :  1;
     unsigned      mqg5_pool4_256b                           :  1;
     unsigned      mqg5_pool4_2kb                            :  1;
     unsigned      mqg5_pool4_16kb                           :  1;
     unsigned      mqg5_pool4_64kb                           :  1;
     unsigned      mqg5_pool5_256b                           :  1;
     unsigned      mqg5_pool5_2kb                            :  1;
     unsigned      mqg5_pool5_16kb                           :  1;
     unsigned      mqg5_pool5_64kb                           :  1;
     unsigned      mqg5_pool6_256b                           :  1;
     unsigned      mqg5_pool6_2kb                            :  1;
     unsigned      mqg5_pool6_16kb                           :  1;
     unsigned      mqg5_pool6_64kb                           :  1;
     unsigned      mqg5_pool7_256b                           :  1;
     unsigned      mqg5_pool7_2kb                            :  1;
     unsigned      mqg5_pool7_16kb                           :  1;
     unsigned      mqg5_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg5_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg6_lt0_status_r_t
 *  @brief Memory Quota Group 6 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg6_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 6 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg6_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg6_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg6_pool7_64kb                           :  1;
     unsigned      mqg6_pool7_16kb                           :  1;
     unsigned      mqg6_pool7_2kb                            :  1;
     unsigned      mqg6_pool7_256b                           :  1;
     unsigned      mqg6_pool6_64kb                           :  1;
     unsigned      mqg6_pool6_16kb                           :  1;
     unsigned      mqg6_pool6_2kb                            :  1;
     unsigned      mqg6_pool6_256b                           :  1;
     unsigned      mqg6_pool5_64kb                           :  1;
     unsigned      mqg6_pool5_16kb                           :  1;
     unsigned      mqg6_pool5_2kb                            :  1;
     unsigned      mqg6_pool5_256b                           :  1;
     unsigned      mqg6_pool4_64kb                           :  1;
     unsigned      mqg6_pool4_16kb                           :  1;
     unsigned      mqg6_pool4_2kb                            :  1;
     unsigned      mqg6_pool4_256b                           :  1;
     unsigned      mqg6_pool3_64kb                           :  1;
     unsigned      mqg6_pool3_16kb                           :  1;
     unsigned      mqg6_pool3_2kb                            :  1;
     unsigned      mqg6_pool3_256b                           :  1;
     unsigned      mqg6_pool2_64kb                           :  1;
     unsigned      mqg6_pool2_16kb                           :  1;
     unsigned      mqg6_pool2_2kb                            :  1;
     unsigned      mqg6_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg6_pool2_256b                           :  1;
     unsigned      mqg6_pool2_2kb                            :  1;
     unsigned      mqg6_pool2_16kb                           :  1;
     unsigned      mqg6_pool2_64kb                           :  1;
     unsigned      mqg6_pool3_256b                           :  1;
     unsigned      mqg6_pool3_2kb                            :  1;
     unsigned      mqg6_pool3_16kb                           :  1;
     unsigned      mqg6_pool3_64kb                           :  1;
     unsigned      mqg6_pool4_256b                           :  1;
     unsigned      mqg6_pool4_2kb                            :  1;
     unsigned      mqg6_pool4_16kb                           :  1;
     unsigned      mqg6_pool4_64kb                           :  1;
     unsigned      mqg6_pool5_256b                           :  1;
     unsigned      mqg6_pool5_2kb                            :  1;
     unsigned      mqg6_pool5_16kb                           :  1;
     unsigned      mqg6_pool5_64kb                           :  1;
     unsigned      mqg6_pool6_256b                           :  1;
     unsigned      mqg6_pool6_2kb                            :  1;
     unsigned      mqg6_pool6_16kb                           :  1;
     unsigned      mqg6_pool6_64kb                           :  1;
     unsigned      mqg6_pool7_256b                           :  1;
     unsigned      mqg6_pool7_2kb                            :  1;
     unsigned      mqg6_pool7_16kb                           :  1;
     unsigned      mqg6_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg6_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg7_lt0_status_r_t
 *  @brief Memory Quota Group 7 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg7_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 7 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg7_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg7_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg7_pool7_64kb                           :  1;
     unsigned      mqg7_pool7_16kb                           :  1;
     unsigned      mqg7_pool7_2kb                            :  1;
     unsigned      mqg7_pool7_256b                           :  1;
     unsigned      mqg7_pool6_64kb                           :  1;
     unsigned      mqg7_pool6_16kb                           :  1;
     unsigned      mqg7_pool6_2kb                            :  1;
     unsigned      mqg7_pool6_256b                           :  1;
     unsigned      mqg7_pool5_64kb                           :  1;
     unsigned      mqg7_pool5_16kb                           :  1;
     unsigned      mqg7_pool5_2kb                            :  1;
     unsigned      mqg7_pool5_256b                           :  1;
     unsigned      mqg7_pool4_64kb                           :  1;
     unsigned      mqg7_pool4_16kb                           :  1;
     unsigned      mqg7_pool4_2kb                            :  1;
     unsigned      mqg7_pool4_256b                           :  1;
     unsigned      mqg7_pool3_64kb                           :  1;
     unsigned      mqg7_pool3_16kb                           :  1;
     unsigned      mqg7_pool3_2kb                            :  1;
     unsigned      mqg7_pool3_256b                           :  1;
     unsigned      mqg7_pool2_64kb                           :  1;
     unsigned      mqg7_pool2_16kb                           :  1;
     unsigned      mqg7_pool2_2kb                            :  1;
     unsigned      mqg7_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg7_pool2_256b                           :  1;
     unsigned      mqg7_pool2_2kb                            :  1;
     unsigned      mqg7_pool2_16kb                           :  1;
     unsigned      mqg7_pool2_64kb                           :  1;
     unsigned      mqg7_pool3_256b                           :  1;
     unsigned      mqg7_pool3_2kb                            :  1;
     unsigned      mqg7_pool3_16kb                           :  1;
     unsigned      mqg7_pool3_64kb                           :  1;
     unsigned      mqg7_pool4_256b                           :  1;
     unsigned      mqg7_pool4_2kb                            :  1;
     unsigned      mqg7_pool4_16kb                           :  1;
     unsigned      mqg7_pool4_64kb                           :  1;
     unsigned      mqg7_pool5_256b                           :  1;
     unsigned      mqg7_pool5_2kb                            :  1;
     unsigned      mqg7_pool5_16kb                           :  1;
     unsigned      mqg7_pool5_64kb                           :  1;
     unsigned      mqg7_pool6_256b                           :  1;
     unsigned      mqg7_pool6_2kb                            :  1;
     unsigned      mqg7_pool6_16kb                           :  1;
     unsigned      mqg7_pool6_64kb                           :  1;
     unsigned      mqg7_pool7_256b                           :  1;
     unsigned      mqg7_pool7_2kb                            :  1;
     unsigned      mqg7_pool7_16kb                           :  1;
     unsigned      mqg7_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg7_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg8_lt0_status_r_t
 *  @brief Memory Quota Group 8 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg8_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg8_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg8_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg8_pool7_64kb                           :  1;
     unsigned      mqg8_pool7_16kb                           :  1;
     unsigned      mqg8_pool7_2kb                            :  1;
     unsigned      mqg8_pool7_256b                           :  1;
     unsigned      mqg8_pool6_64kb                           :  1;
     unsigned      mqg8_pool6_16kb                           :  1;
     unsigned      mqg8_pool6_2kb                            :  1;
     unsigned      mqg8_pool6_256b                           :  1;
     unsigned      mqg8_pool5_64kb                           :  1;
     unsigned      mqg8_pool5_16kb                           :  1;
     unsigned      mqg8_pool5_2kb                            :  1;
     unsigned      mqg8_pool5_256b                           :  1;
     unsigned      mqg8_pool4_64kb                           :  1;
     unsigned      mqg8_pool4_16kb                           :  1;
     unsigned      mqg8_pool4_2kb                            :  1;
     unsigned      mqg8_pool4_256b                           :  1;
     unsigned      mqg8_pool3_64kb                           :  1;
     unsigned      mqg8_pool3_16kb                           :  1;
     unsigned      mqg8_pool3_2kb                            :  1;
     unsigned      mqg8_pool3_256b                           :  1;
     unsigned      mqg8_pool2_64kb                           :  1;
     unsigned      mqg8_pool2_16kb                           :  1;
     unsigned      mqg8_pool2_2kb                            :  1;
     unsigned      mqg8_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg8_pool2_256b                           :  1;
     unsigned      mqg8_pool2_2kb                            :  1;
     unsigned      mqg8_pool2_16kb                           :  1;
     unsigned      mqg8_pool2_64kb                           :  1;
     unsigned      mqg8_pool3_256b                           :  1;
     unsigned      mqg8_pool3_2kb                            :  1;
     unsigned      mqg8_pool3_16kb                           :  1;
     unsigned      mqg8_pool3_64kb                           :  1;
     unsigned      mqg8_pool4_256b                           :  1;
     unsigned      mqg8_pool4_2kb                            :  1;
     unsigned      mqg8_pool4_16kb                           :  1;
     unsigned      mqg8_pool4_64kb                           :  1;
     unsigned      mqg8_pool5_256b                           :  1;
     unsigned      mqg8_pool5_2kb                            :  1;
     unsigned      mqg8_pool5_16kb                           :  1;
     unsigned      mqg8_pool5_64kb                           :  1;
     unsigned      mqg8_pool6_256b                           :  1;
     unsigned      mqg8_pool6_2kb                            :  1;
     unsigned      mqg8_pool6_16kb                           :  1;
     unsigned      mqg8_pool6_64kb                           :  1;
     unsigned      mqg8_pool7_256b                           :  1;
     unsigned      mqg8_pool7_2kb                            :  1;
     unsigned      mqg8_pool7_16kb                           :  1;
     unsigned      mqg8_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg8_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg9_lt0_status_r_t
 *  @brief Memory Quota Group 9 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg9_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 9 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg9_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg9_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg9_pool7_64kb                           :  1;
     unsigned      mqg9_pool7_16kb                           :  1;
     unsigned      mqg9_pool7_2kb                            :  1;
     unsigned      mqg9_pool7_256b                           :  1;
     unsigned      mqg9_pool6_64kb                           :  1;
     unsigned      mqg9_pool6_16kb                           :  1;
     unsigned      mqg9_pool6_2kb                            :  1;
     unsigned      mqg9_pool6_256b                           :  1;
     unsigned      mqg9_pool5_64kb                           :  1;
     unsigned      mqg9_pool5_16kb                           :  1;
     unsigned      mqg9_pool5_2kb                            :  1;
     unsigned      mqg9_pool5_256b                           :  1;
     unsigned      mqg9_pool4_64kb                           :  1;
     unsigned      mqg9_pool4_16kb                           :  1;
     unsigned      mqg9_pool4_2kb                            :  1;
     unsigned      mqg9_pool4_256b                           :  1;
     unsigned      mqg9_pool3_64kb                           :  1;
     unsigned      mqg9_pool3_16kb                           :  1;
     unsigned      mqg9_pool3_2kb                            :  1;
     unsigned      mqg9_pool3_256b                           :  1;
     unsigned      mqg9_pool2_64kb                           :  1;
     unsigned      mqg9_pool2_16kb                           :  1;
     unsigned      mqg9_pool2_2kb                            :  1;
     unsigned      mqg9_pool2_256b                           :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg9_pool2_256b                           :  1;
     unsigned      mqg9_pool2_2kb                            :  1;
     unsigned      mqg9_pool2_16kb                           :  1;
     unsigned      mqg9_pool2_64kb                           :  1;
     unsigned      mqg9_pool3_256b                           :  1;
     unsigned      mqg9_pool3_2kb                            :  1;
     unsigned      mqg9_pool3_16kb                           :  1;
     unsigned      mqg9_pool3_64kb                           :  1;
     unsigned      mqg9_pool4_256b                           :  1;
     unsigned      mqg9_pool4_2kb                            :  1;
     unsigned      mqg9_pool4_16kb                           :  1;
     unsigned      mqg9_pool4_64kb                           :  1;
     unsigned      mqg9_pool5_256b                           :  1;
     unsigned      mqg9_pool5_2kb                            :  1;
     unsigned      mqg9_pool5_16kb                           :  1;
     unsigned      mqg9_pool5_64kb                           :  1;
     unsigned      mqg9_pool6_256b                           :  1;
     unsigned      mqg9_pool6_2kb                            :  1;
     unsigned      mqg9_pool6_16kb                           :  1;
     unsigned      mqg9_pool6_64kb                           :  1;
     unsigned      mqg9_pool7_256b                           :  1;
     unsigned      mqg9_pool7_2kb                            :  1;
     unsigned      mqg9_pool7_16kb                           :  1;
     unsigned      mqg9_pool7_64kb                           :  1;
#endif
} ncp_nca_mtp_mqg9_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg10_lt0_status_r_t
 *  @brief Memory Quota Group 10 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg10_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 10 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg10_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg10_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg10_pool7_64kb                          :  1;
     unsigned      mqg10_pool7_16kb                          :  1;
     unsigned      mqg10_pool7_2kb                           :  1;
     unsigned      mqg10_pool7_256b                          :  1;
     unsigned      mqg10_pool6_64kb                          :  1;
     unsigned      mqg10_pool6_16kb                          :  1;
     unsigned      mqg10_pool6_2kb                           :  1;
     unsigned      mqg10_pool6_256b                          :  1;
     unsigned      mqg10_pool5_64kb                          :  1;
     unsigned      mqg10_pool5_16kb                          :  1;
     unsigned      mqg10_pool5_2kb                           :  1;
     unsigned      mqg10_pool5_256b                          :  1;
     unsigned      mqg10_pool4_64kb                          :  1;
     unsigned      mqg10_pool4_16kb                          :  1;
     unsigned      mqg10_pool4_2kb                           :  1;
     unsigned      mqg10_pool4_256b                          :  1;
     unsigned      mqg10_pool3_64kb                          :  1;
     unsigned      mqg10_pool3_16kb                          :  1;
     unsigned      mqg10_pool3_2kb                           :  1;
     unsigned      mqg10_pool3_256b                          :  1;
     unsigned      mqg10_pool2_64kb                          :  1;
     unsigned      mqg10_pool2_16kb                          :  1;
     unsigned      mqg10_pool2_2kb                           :  1;
     unsigned      mqg10_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg10_pool2_256b                          :  1;
     unsigned      mqg10_pool2_2kb                           :  1;
     unsigned      mqg10_pool2_16kb                          :  1;
     unsigned      mqg10_pool2_64kb                          :  1;
     unsigned      mqg10_pool3_256b                          :  1;
     unsigned      mqg10_pool3_2kb                           :  1;
     unsigned      mqg10_pool3_16kb                          :  1;
     unsigned      mqg10_pool3_64kb                          :  1;
     unsigned      mqg10_pool4_256b                          :  1;
     unsigned      mqg10_pool4_2kb                           :  1;
     unsigned      mqg10_pool4_16kb                          :  1;
     unsigned      mqg10_pool4_64kb                          :  1;
     unsigned      mqg10_pool5_256b                          :  1;
     unsigned      mqg10_pool5_2kb                           :  1;
     unsigned      mqg10_pool5_16kb                          :  1;
     unsigned      mqg10_pool5_64kb                          :  1;
     unsigned      mqg10_pool6_256b                          :  1;
     unsigned      mqg10_pool6_2kb                           :  1;
     unsigned      mqg10_pool6_16kb                          :  1;
     unsigned      mqg10_pool6_64kb                          :  1;
     unsigned      mqg10_pool7_256b                          :  1;
     unsigned      mqg10_pool7_2kb                           :  1;
     unsigned      mqg10_pool7_16kb                          :  1;
     unsigned      mqg10_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg10_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg11_lt0_status_r_t
 *  @brief Memory Quota Group 11 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg11_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 11 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg11_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg11_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg11_pool7_64kb                          :  1;
     unsigned      mqg11_pool7_16kb                          :  1;
     unsigned      mqg11_pool7_2kb                           :  1;
     unsigned      mqg11_pool7_256b                          :  1;
     unsigned      mqg11_pool6_64kb                          :  1;
     unsigned      mqg11_pool6_16kb                          :  1;
     unsigned      mqg11_pool6_2kb                           :  1;
     unsigned      mqg11_pool6_256b                          :  1;
     unsigned      mqg11_pool5_64kb                          :  1;
     unsigned      mqg11_pool5_16kb                          :  1;
     unsigned      mqg11_pool5_2kb                           :  1;
     unsigned      mqg11_pool5_256b                          :  1;
     unsigned      mqg11_pool4_64kb                          :  1;
     unsigned      mqg11_pool4_16kb                          :  1;
     unsigned      mqg11_pool4_2kb                           :  1;
     unsigned      mqg11_pool4_256b                          :  1;
     unsigned      mqg11_pool3_64kb                          :  1;
     unsigned      mqg11_pool3_16kb                          :  1;
     unsigned      mqg11_pool3_2kb                           :  1;
     unsigned      mqg11_pool3_256b                          :  1;
     unsigned      mqg11_pool2_64kb                          :  1;
     unsigned      mqg11_pool2_16kb                          :  1;
     unsigned      mqg11_pool2_2kb                           :  1;
     unsigned      mqg11_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg11_pool2_256b                          :  1;
     unsigned      mqg11_pool2_2kb                           :  1;
     unsigned      mqg11_pool2_16kb                          :  1;
     unsigned      mqg11_pool2_64kb                          :  1;
     unsigned      mqg11_pool3_256b                          :  1;
     unsigned      mqg11_pool3_2kb                           :  1;
     unsigned      mqg11_pool3_16kb                          :  1;
     unsigned      mqg11_pool3_64kb                          :  1;
     unsigned      mqg11_pool4_256b                          :  1;
     unsigned      mqg11_pool4_2kb                           :  1;
     unsigned      mqg11_pool4_16kb                          :  1;
     unsigned      mqg11_pool4_64kb                          :  1;
     unsigned      mqg11_pool5_256b                          :  1;
     unsigned      mqg11_pool5_2kb                           :  1;
     unsigned      mqg11_pool5_16kb                          :  1;
     unsigned      mqg11_pool5_64kb                          :  1;
     unsigned      mqg11_pool6_256b                          :  1;
     unsigned      mqg11_pool6_2kb                           :  1;
     unsigned      mqg11_pool6_16kb                          :  1;
     unsigned      mqg11_pool6_64kb                          :  1;
     unsigned      mqg11_pool7_256b                          :  1;
     unsigned      mqg11_pool7_2kb                           :  1;
     unsigned      mqg11_pool7_16kb                          :  1;
     unsigned      mqg11_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg11_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg12_lt0_status_r_t
 *  @brief Memory Quota Group 12 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg12_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 12 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg12_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg12_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg12_pool7_64kb                          :  1;
     unsigned      mqg12_pool7_16kb                          :  1;
     unsigned      mqg12_pool7_2kb                           :  1;
     unsigned      mqg12_pool7_256b                          :  1;
     unsigned      mqg12_pool6_64kb                          :  1;
     unsigned      mqg12_pool6_16kb                          :  1;
     unsigned      mqg12_pool6_2kb                           :  1;
     unsigned      mqg12_pool6_256b                          :  1;
     unsigned      mqg12_pool5_64kb                          :  1;
     unsigned      mqg12_pool5_16kb                          :  1;
     unsigned      mqg12_pool5_2kb                           :  1;
     unsigned      mqg12_pool5_256b                          :  1;
     unsigned      mqg12_pool4_64kb                          :  1;
     unsigned      mqg12_pool4_16kb                          :  1;
     unsigned      mqg12_pool4_2kb                           :  1;
     unsigned      mqg12_pool4_256b                          :  1;
     unsigned      mqg12_pool3_64kb                          :  1;
     unsigned      mqg12_pool3_16kb                          :  1;
     unsigned      mqg12_pool3_2kb                           :  1;
     unsigned      mqg12_pool3_256b                          :  1;
     unsigned      mqg12_pool2_64kb                          :  1;
     unsigned      mqg12_pool2_16kb                          :  1;
     unsigned      mqg12_pool2_2kb                           :  1;
     unsigned      mqg12_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg12_pool2_256b                          :  1;
     unsigned      mqg12_pool2_2kb                           :  1;
     unsigned      mqg12_pool2_16kb                          :  1;
     unsigned      mqg12_pool2_64kb                          :  1;
     unsigned      mqg12_pool3_256b                          :  1;
     unsigned      mqg12_pool3_2kb                           :  1;
     unsigned      mqg12_pool3_16kb                          :  1;
     unsigned      mqg12_pool3_64kb                          :  1;
     unsigned      mqg12_pool4_256b                          :  1;
     unsigned      mqg12_pool4_2kb                           :  1;
     unsigned      mqg12_pool4_16kb                          :  1;
     unsigned      mqg12_pool4_64kb                          :  1;
     unsigned      mqg12_pool5_256b                          :  1;
     unsigned      mqg12_pool5_2kb                           :  1;
     unsigned      mqg12_pool5_16kb                          :  1;
     unsigned      mqg12_pool5_64kb                          :  1;
     unsigned      mqg12_pool6_256b                          :  1;
     unsigned      mqg12_pool6_2kb                           :  1;
     unsigned      mqg12_pool6_16kb                          :  1;
     unsigned      mqg12_pool6_64kb                          :  1;
     unsigned      mqg12_pool7_256b                          :  1;
     unsigned      mqg12_pool7_2kb                           :  1;
     unsigned      mqg12_pool7_16kb                          :  1;
     unsigned      mqg12_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg12_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg13_lt0_status_r_t
 *  @brief Memory Quota Group 13 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg13_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 13 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg13_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg13_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg13_pool7_64kb                          :  1;
     unsigned      mqg13_pool7_16kb                          :  1;
     unsigned      mqg13_pool7_2kb                           :  1;
     unsigned      mqg13_pool7_256b                          :  1;
     unsigned      mqg13_pool6_64kb                          :  1;
     unsigned      mqg13_pool6_16kb                          :  1;
     unsigned      mqg13_pool6_2kb                           :  1;
     unsigned      mqg13_pool6_256b                          :  1;
     unsigned      mqg13_pool5_64kb                          :  1;
     unsigned      mqg13_pool5_16kb                          :  1;
     unsigned      mqg13_pool5_2kb                           :  1;
     unsigned      mqg13_pool5_256b                          :  1;
     unsigned      mqg13_pool4_64kb                          :  1;
     unsigned      mqg13_pool4_16kb                          :  1;
     unsigned      mqg13_pool4_2kb                           :  1;
     unsigned      mqg13_pool4_256b                          :  1;
     unsigned      mqg13_pool3_64kb                          :  1;
     unsigned      mqg13_pool3_16kb                          :  1;
     unsigned      mqg13_pool3_2kb                           :  1;
     unsigned      mqg13_pool3_256b                          :  1;
     unsigned      mqg13_pool2_64kb                          :  1;
     unsigned      mqg13_pool2_16kb                          :  1;
     unsigned      mqg13_pool2_2kb                           :  1;
     unsigned      mqg13_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg13_pool2_256b                          :  1;
     unsigned      mqg13_pool2_2kb                           :  1;
     unsigned      mqg13_pool2_16kb                          :  1;
     unsigned      mqg13_pool2_64kb                          :  1;
     unsigned      mqg13_pool3_256b                          :  1;
     unsigned      mqg13_pool3_2kb                           :  1;
     unsigned      mqg13_pool3_16kb                          :  1;
     unsigned      mqg13_pool3_64kb                          :  1;
     unsigned      mqg13_pool4_256b                          :  1;
     unsigned      mqg13_pool4_2kb                           :  1;
     unsigned      mqg13_pool4_16kb                          :  1;
     unsigned      mqg13_pool4_64kb                          :  1;
     unsigned      mqg13_pool5_256b                          :  1;
     unsigned      mqg13_pool5_2kb                           :  1;
     unsigned      mqg13_pool5_16kb                          :  1;
     unsigned      mqg13_pool5_64kb                          :  1;
     unsigned      mqg13_pool6_256b                          :  1;
     unsigned      mqg13_pool6_2kb                           :  1;
     unsigned      mqg13_pool6_16kb                          :  1;
     unsigned      mqg13_pool6_64kb                          :  1;
     unsigned      mqg13_pool7_256b                          :  1;
     unsigned      mqg13_pool7_2kb                           :  1;
     unsigned      mqg13_pool7_16kb                          :  1;
     unsigned      mqg13_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg13_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg14_lt0_status_r_t
 *  @brief Memory Quota Group 14 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg14_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 14 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg14_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg14_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg14_pool7_64kb                          :  1;
     unsigned      mqg14_pool7_16kb                          :  1;
     unsigned      mqg14_pool7_2kb                           :  1;
     unsigned      mqg14_pool7_256b                          :  1;
     unsigned      mqg14_pool6_64kb                          :  1;
     unsigned      mqg14_pool6_16kb                          :  1;
     unsigned      mqg14_pool6_2kb                           :  1;
     unsigned      mqg14_pool6_256b                          :  1;
     unsigned      mqg14_pool5_64kb                          :  1;
     unsigned      mqg14_pool5_16kb                          :  1;
     unsigned      mqg14_pool5_2kb                           :  1;
     unsigned      mqg14_pool5_256b                          :  1;
     unsigned      mqg14_pool4_64kb                          :  1;
     unsigned      mqg14_pool4_16kb                          :  1;
     unsigned      mqg14_pool4_2kb                           :  1;
     unsigned      mqg14_pool4_256b                          :  1;
     unsigned      mqg14_pool3_64kb                          :  1;
     unsigned      mqg14_pool3_16kb                          :  1;
     unsigned      mqg14_pool3_2kb                           :  1;
     unsigned      mqg14_pool3_256b                          :  1;
     unsigned      mqg14_pool2_64kb                          :  1;
     unsigned      mqg14_pool2_16kb                          :  1;
     unsigned      mqg14_pool2_2kb                           :  1;
     unsigned      mqg14_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg14_pool2_256b                          :  1;
     unsigned      mqg14_pool2_2kb                           :  1;
     unsigned      mqg14_pool2_16kb                          :  1;
     unsigned      mqg14_pool2_64kb                          :  1;
     unsigned      mqg14_pool3_256b                          :  1;
     unsigned      mqg14_pool3_2kb                           :  1;
     unsigned      mqg14_pool3_16kb                          :  1;
     unsigned      mqg14_pool3_64kb                          :  1;
     unsigned      mqg14_pool4_256b                          :  1;
     unsigned      mqg14_pool4_2kb                           :  1;
     unsigned      mqg14_pool4_16kb                          :  1;
     unsigned      mqg14_pool4_64kb                          :  1;
     unsigned      mqg14_pool5_256b                          :  1;
     unsigned      mqg14_pool5_2kb                           :  1;
     unsigned      mqg14_pool5_16kb                          :  1;
     unsigned      mqg14_pool5_64kb                          :  1;
     unsigned      mqg14_pool6_256b                          :  1;
     unsigned      mqg14_pool6_2kb                           :  1;
     unsigned      mqg14_pool6_16kb                          :  1;
     unsigned      mqg14_pool6_64kb                          :  1;
     unsigned      mqg14_pool7_256b                          :  1;
     unsigned      mqg14_pool7_2kb                           :  1;
     unsigned      mqg14_pool7_16kb                          :  1;
     unsigned      mqg14_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg14_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg15_lt0_status_r_t
 *  @brief Memory Quota Group 15 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg15_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 15 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg15_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg15_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg15_pool7_64kb                          :  1;
     unsigned      mqg15_pool7_16kb                          :  1;
     unsigned      mqg15_pool7_2kb                           :  1;
     unsigned      mqg15_pool7_256b                          :  1;
     unsigned      mqg15_pool6_64kb                          :  1;
     unsigned      mqg15_pool6_16kb                          :  1;
     unsigned      mqg15_pool6_2kb                           :  1;
     unsigned      mqg15_pool6_256b                          :  1;
     unsigned      mqg15_pool5_64kb                          :  1;
     unsigned      mqg15_pool5_16kb                          :  1;
     unsigned      mqg15_pool5_2kb                           :  1;
     unsigned      mqg15_pool5_256b                          :  1;
     unsigned      mqg15_pool4_64kb                          :  1;
     unsigned      mqg15_pool4_16kb                          :  1;
     unsigned      mqg15_pool4_2kb                           :  1;
     unsigned      mqg15_pool4_256b                          :  1;
     unsigned      mqg15_pool3_64kb                          :  1;
     unsigned      mqg15_pool3_16kb                          :  1;
     unsigned      mqg15_pool3_2kb                           :  1;
     unsigned      mqg15_pool3_256b                          :  1;
     unsigned      mqg15_pool2_64kb                          :  1;
     unsigned      mqg15_pool2_16kb                          :  1;
     unsigned      mqg15_pool2_2kb                           :  1;
     unsigned      mqg15_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg15_pool2_256b                          :  1;
     unsigned      mqg15_pool2_2kb                           :  1;
     unsigned      mqg15_pool2_16kb                          :  1;
     unsigned      mqg15_pool2_64kb                          :  1;
     unsigned      mqg15_pool3_256b                          :  1;
     unsigned      mqg15_pool3_2kb                           :  1;
     unsigned      mqg15_pool3_16kb                          :  1;
     unsigned      mqg15_pool3_64kb                          :  1;
     unsigned      mqg15_pool4_256b                          :  1;
     unsigned      mqg15_pool4_2kb                           :  1;
     unsigned      mqg15_pool4_16kb                          :  1;
     unsigned      mqg15_pool4_64kb                          :  1;
     unsigned      mqg15_pool5_256b                          :  1;
     unsigned      mqg15_pool5_2kb                           :  1;
     unsigned      mqg15_pool5_16kb                          :  1;
     unsigned      mqg15_pool5_64kb                          :  1;
     unsigned      mqg15_pool6_256b                          :  1;
     unsigned      mqg15_pool6_2kb                           :  1;
     unsigned      mqg15_pool6_16kb                          :  1;
     unsigned      mqg15_pool6_64kb                          :  1;
     unsigned      mqg15_pool7_256b                          :  1;
     unsigned      mqg15_pool7_2kb                           :  1;
     unsigned      mqg15_pool7_16kb                          :  1;
     unsigned      mqg15_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg15_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg16_lt0_status_r_t
 *  @brief Memory Quota Group 16 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg16_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 16 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg16_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg16_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg16_pool7_64kb                          :  1;
     unsigned      mqg16_pool7_16kb                          :  1;
     unsigned      mqg16_pool7_2kb                           :  1;
     unsigned      mqg16_pool7_256b                          :  1;
     unsigned      mqg16_pool6_64kb                          :  1;
     unsigned      mqg16_pool6_16kb                          :  1;
     unsigned      mqg16_pool6_2kb                           :  1;
     unsigned      mqg16_pool6_256b                          :  1;
     unsigned      mqg16_pool5_64kb                          :  1;
     unsigned      mqg16_pool5_16kb                          :  1;
     unsigned      mqg16_pool5_2kb                           :  1;
     unsigned      mqg16_pool5_256b                          :  1;
     unsigned      mqg16_pool4_64kb                          :  1;
     unsigned      mqg16_pool4_16kb                          :  1;
     unsigned      mqg16_pool4_2kb                           :  1;
     unsigned      mqg16_pool4_256b                          :  1;
     unsigned      mqg16_pool3_64kb                          :  1;
     unsigned      mqg16_pool3_16kb                          :  1;
     unsigned      mqg16_pool3_2kb                           :  1;
     unsigned      mqg16_pool3_256b                          :  1;
     unsigned      mqg16_pool2_64kb                          :  1;
     unsigned      mqg16_pool2_16kb                          :  1;
     unsigned      mqg16_pool2_2kb                           :  1;
     unsigned      mqg16_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg16_pool2_256b                          :  1;
     unsigned      mqg16_pool2_2kb                           :  1;
     unsigned      mqg16_pool2_16kb                          :  1;
     unsigned      mqg16_pool2_64kb                          :  1;
     unsigned      mqg16_pool3_256b                          :  1;
     unsigned      mqg16_pool3_2kb                           :  1;
     unsigned      mqg16_pool3_16kb                          :  1;
     unsigned      mqg16_pool3_64kb                          :  1;
     unsigned      mqg16_pool4_256b                          :  1;
     unsigned      mqg16_pool4_2kb                           :  1;
     unsigned      mqg16_pool4_16kb                          :  1;
     unsigned      mqg16_pool4_64kb                          :  1;
     unsigned      mqg16_pool5_256b                          :  1;
     unsigned      mqg16_pool5_2kb                           :  1;
     unsigned      mqg16_pool5_16kb                          :  1;
     unsigned      mqg16_pool5_64kb                          :  1;
     unsigned      mqg16_pool6_256b                          :  1;
     unsigned      mqg16_pool6_2kb                           :  1;
     unsigned      mqg16_pool6_16kb                          :  1;
     unsigned      mqg16_pool6_64kb                          :  1;
     unsigned      mqg16_pool7_256b                          :  1;
     unsigned      mqg16_pool7_2kb                           :  1;
     unsigned      mqg16_pool7_16kb                          :  1;
     unsigned      mqg16_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg16_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg17_lt0_status_r_t
 *  @brief Memory Quota Group 17 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg17_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 17 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg17_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg17_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg17_pool7_64kb                          :  1;
     unsigned      mqg17_pool7_16kb                          :  1;
     unsigned      mqg17_pool7_2kb                           :  1;
     unsigned      mqg17_pool7_256b                          :  1;
     unsigned      mqg17_pool6_64kb                          :  1;
     unsigned      mqg17_pool6_16kb                          :  1;
     unsigned      mqg17_pool6_2kb                           :  1;
     unsigned      mqg17_pool6_256b                          :  1;
     unsigned      mqg17_pool5_64kb                          :  1;
     unsigned      mqg17_pool5_16kb                          :  1;
     unsigned      mqg17_pool5_2kb                           :  1;
     unsigned      mqg17_pool5_256b                          :  1;
     unsigned      mqg17_pool4_64kb                          :  1;
     unsigned      mqg17_pool4_16kb                          :  1;
     unsigned      mqg17_pool4_2kb                           :  1;
     unsigned      mqg17_pool4_256b                          :  1;
     unsigned      mqg17_pool3_64kb                          :  1;
     unsigned      mqg17_pool3_16kb                          :  1;
     unsigned      mqg17_pool3_2kb                           :  1;
     unsigned      mqg17_pool3_256b                          :  1;
     unsigned      mqg17_pool2_64kb                          :  1;
     unsigned      mqg17_pool2_16kb                          :  1;
     unsigned      mqg17_pool2_2kb                           :  1;
     unsigned      mqg17_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg17_pool2_256b                          :  1;
     unsigned      mqg17_pool2_2kb                           :  1;
     unsigned      mqg17_pool2_16kb                          :  1;
     unsigned      mqg17_pool2_64kb                          :  1;
     unsigned      mqg17_pool3_256b                          :  1;
     unsigned      mqg17_pool3_2kb                           :  1;
     unsigned      mqg17_pool3_16kb                          :  1;
     unsigned      mqg17_pool3_64kb                          :  1;
     unsigned      mqg17_pool4_256b                          :  1;
     unsigned      mqg17_pool4_2kb                           :  1;
     unsigned      mqg17_pool4_16kb                          :  1;
     unsigned      mqg17_pool4_64kb                          :  1;
     unsigned      mqg17_pool5_256b                          :  1;
     unsigned      mqg17_pool5_2kb                           :  1;
     unsigned      mqg17_pool5_16kb                          :  1;
     unsigned      mqg17_pool5_64kb                          :  1;
     unsigned      mqg17_pool6_256b                          :  1;
     unsigned      mqg17_pool6_2kb                           :  1;
     unsigned      mqg17_pool6_16kb                          :  1;
     unsigned      mqg17_pool6_64kb                          :  1;
     unsigned      mqg17_pool7_256b                          :  1;
     unsigned      mqg17_pool7_2kb                           :  1;
     unsigned      mqg17_pool7_16kb                          :  1;
     unsigned      mqg17_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg17_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg18_lt0_status_r_t
 *  @brief Memory Quota Group 18 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg18_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 18 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg18_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg18_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg18_pool7_64kb                          :  1;
     unsigned      mqg18_pool7_16kb                          :  1;
     unsigned      mqg18_pool7_2kb                           :  1;
     unsigned      mqg18_pool7_256b                          :  1;
     unsigned      mqg18_pool6_64kb                          :  1;
     unsigned      mqg18_pool6_16kb                          :  1;
     unsigned      mqg18_pool6_2kb                           :  1;
     unsigned      mqg18_pool6_256b                          :  1;
     unsigned      mqg18_pool5_64kb                          :  1;
     unsigned      mqg18_pool5_16kb                          :  1;
     unsigned      mqg18_pool5_2kb                           :  1;
     unsigned      mqg18_pool5_256b                          :  1;
     unsigned      mqg18_pool4_64kb                          :  1;
     unsigned      mqg18_pool4_16kb                          :  1;
     unsigned      mqg18_pool4_2kb                           :  1;
     unsigned      mqg18_pool4_256b                          :  1;
     unsigned      mqg18_pool3_64kb                          :  1;
     unsigned      mqg18_pool3_16kb                          :  1;
     unsigned      mqg18_pool3_2kb                           :  1;
     unsigned      mqg18_pool3_256b                          :  1;
     unsigned      mqg18_pool2_64kb                          :  1;
     unsigned      mqg18_pool2_16kb                          :  1;
     unsigned      mqg18_pool2_2kb                           :  1;
     unsigned      mqg18_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg18_pool2_256b                          :  1;
     unsigned      mqg18_pool2_2kb                           :  1;
     unsigned      mqg18_pool2_16kb                          :  1;
     unsigned      mqg18_pool2_64kb                          :  1;
     unsigned      mqg18_pool3_256b                          :  1;
     unsigned      mqg18_pool3_2kb                           :  1;
     unsigned      mqg18_pool3_16kb                          :  1;
     unsigned      mqg18_pool3_64kb                          :  1;
     unsigned      mqg18_pool4_256b                          :  1;
     unsigned      mqg18_pool4_2kb                           :  1;
     unsigned      mqg18_pool4_16kb                          :  1;
     unsigned      mqg18_pool4_64kb                          :  1;
     unsigned      mqg18_pool5_256b                          :  1;
     unsigned      mqg18_pool5_2kb                           :  1;
     unsigned      mqg18_pool5_16kb                          :  1;
     unsigned      mqg18_pool5_64kb                          :  1;
     unsigned      mqg18_pool6_256b                          :  1;
     unsigned      mqg18_pool6_2kb                           :  1;
     unsigned      mqg18_pool6_16kb                          :  1;
     unsigned      mqg18_pool6_64kb                          :  1;
     unsigned      mqg18_pool7_256b                          :  1;
     unsigned      mqg18_pool7_2kb                           :  1;
     unsigned      mqg18_pool7_16kb                          :  1;
     unsigned      mqg18_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg18_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg19_lt0_status_r_t
 *  @brief Memory Quota Group 19 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg19_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 19 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg19_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg19_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg19_pool7_64kb                          :  1;
     unsigned      mqg19_pool7_16kb                          :  1;
     unsigned      mqg19_pool7_2kb                           :  1;
     unsigned      mqg19_pool7_256b                          :  1;
     unsigned      mqg19_pool6_64kb                          :  1;
     unsigned      mqg19_pool6_16kb                          :  1;
     unsigned      mqg19_pool6_2kb                           :  1;
     unsigned      mqg19_pool6_256b                          :  1;
     unsigned      mqg19_pool5_64kb                          :  1;
     unsigned      mqg19_pool5_16kb                          :  1;
     unsigned      mqg19_pool5_2kb                           :  1;
     unsigned      mqg19_pool5_256b                          :  1;
     unsigned      mqg19_pool4_64kb                          :  1;
     unsigned      mqg19_pool4_16kb                          :  1;
     unsigned      mqg19_pool4_2kb                           :  1;
     unsigned      mqg19_pool4_256b                          :  1;
     unsigned      mqg19_pool3_64kb                          :  1;
     unsigned      mqg19_pool3_16kb                          :  1;
     unsigned      mqg19_pool3_2kb                           :  1;
     unsigned      mqg19_pool3_256b                          :  1;
     unsigned      mqg19_pool2_64kb                          :  1;
     unsigned      mqg19_pool2_16kb                          :  1;
     unsigned      mqg19_pool2_2kb                           :  1;
     unsigned      mqg19_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg19_pool2_256b                          :  1;
     unsigned      mqg19_pool2_2kb                           :  1;
     unsigned      mqg19_pool2_16kb                          :  1;
     unsigned      mqg19_pool2_64kb                          :  1;
     unsigned      mqg19_pool3_256b                          :  1;
     unsigned      mqg19_pool3_2kb                           :  1;
     unsigned      mqg19_pool3_16kb                          :  1;
     unsigned      mqg19_pool3_64kb                          :  1;
     unsigned      mqg19_pool4_256b                          :  1;
     unsigned      mqg19_pool4_2kb                           :  1;
     unsigned      mqg19_pool4_16kb                          :  1;
     unsigned      mqg19_pool4_64kb                          :  1;
     unsigned      mqg19_pool5_256b                          :  1;
     unsigned      mqg19_pool5_2kb                           :  1;
     unsigned      mqg19_pool5_16kb                          :  1;
     unsigned      mqg19_pool5_64kb                          :  1;
     unsigned      mqg19_pool6_256b                          :  1;
     unsigned      mqg19_pool6_2kb                           :  1;
     unsigned      mqg19_pool6_16kb                          :  1;
     unsigned      mqg19_pool6_64kb                          :  1;
     unsigned      mqg19_pool7_256b                          :  1;
     unsigned      mqg19_pool7_2kb                           :  1;
     unsigned      mqg19_pool7_16kb                          :  1;
     unsigned      mqg19_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg19_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg20_lt0_status_r_t
 *  @brief Memory Quota Group 20 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg20_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 20 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg20_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg20_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg20_pool7_64kb                          :  1;
     unsigned      mqg20_pool7_16kb                          :  1;
     unsigned      mqg20_pool7_2kb                           :  1;
     unsigned      mqg20_pool7_256b                          :  1;
     unsigned      mqg20_pool6_64kb                          :  1;
     unsigned      mqg20_pool6_16kb                          :  1;
     unsigned      mqg20_pool6_2kb                           :  1;
     unsigned      mqg20_pool6_256b                          :  1;
     unsigned      mqg20_pool5_64kb                          :  1;
     unsigned      mqg20_pool5_16kb                          :  1;
     unsigned      mqg20_pool5_2kb                           :  1;
     unsigned      mqg20_pool5_256b                          :  1;
     unsigned      mqg20_pool4_64kb                          :  1;
     unsigned      mqg20_pool4_16kb                          :  1;
     unsigned      mqg20_pool4_2kb                           :  1;
     unsigned      mqg20_pool4_256b                          :  1;
     unsigned      mqg20_pool3_64kb                          :  1;
     unsigned      mqg20_pool3_16kb                          :  1;
     unsigned      mqg20_pool3_2kb                           :  1;
     unsigned      mqg20_pool3_256b                          :  1;
     unsigned      mqg20_pool2_64kb                          :  1;
     unsigned      mqg20_pool2_16kb                          :  1;
     unsigned      mqg20_pool2_2kb                           :  1;
     unsigned      mqg20_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg20_pool2_256b                          :  1;
     unsigned      mqg20_pool2_2kb                           :  1;
     unsigned      mqg20_pool2_16kb                          :  1;
     unsigned      mqg20_pool2_64kb                          :  1;
     unsigned      mqg20_pool3_256b                          :  1;
     unsigned      mqg20_pool3_2kb                           :  1;
     unsigned      mqg20_pool3_16kb                          :  1;
     unsigned      mqg20_pool3_64kb                          :  1;
     unsigned      mqg20_pool4_256b                          :  1;
     unsigned      mqg20_pool4_2kb                           :  1;
     unsigned      mqg20_pool4_16kb                          :  1;
     unsigned      mqg20_pool4_64kb                          :  1;
     unsigned      mqg20_pool5_256b                          :  1;
     unsigned      mqg20_pool5_2kb                           :  1;
     unsigned      mqg20_pool5_16kb                          :  1;
     unsigned      mqg20_pool5_64kb                          :  1;
     unsigned      mqg20_pool6_256b                          :  1;
     unsigned      mqg20_pool6_2kb                           :  1;
     unsigned      mqg20_pool6_16kb                          :  1;
     unsigned      mqg20_pool6_64kb                          :  1;
     unsigned      mqg20_pool7_256b                          :  1;
     unsigned      mqg20_pool7_2kb                           :  1;
     unsigned      mqg20_pool7_16kb                          :  1;
     unsigned      mqg20_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg20_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg21_lt0_status_r_t
 *  @brief Memory Quota Group 21 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg21_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 21 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg21_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg21_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg21_pool7_64kb                          :  1;
     unsigned      mqg21_pool7_16kb                          :  1;
     unsigned      mqg21_pool7_2kb                           :  1;
     unsigned      mqg21_pool7_256b                          :  1;
     unsigned      mqg21_pool6_64kb                          :  1;
     unsigned      mqg21_pool6_16kb                          :  1;
     unsigned      mqg21_pool6_2kb                           :  1;
     unsigned      mqg21_pool6_256b                          :  1;
     unsigned      mqg21_pool5_64kb                          :  1;
     unsigned      mqg21_pool5_16kb                          :  1;
     unsigned      mqg21_pool5_2kb                           :  1;
     unsigned      mqg21_pool5_256b                          :  1;
     unsigned      mqg21_pool4_64kb                          :  1;
     unsigned      mqg21_pool4_16kb                          :  1;
     unsigned      mqg21_pool4_2kb                           :  1;
     unsigned      mqg21_pool4_256b                          :  1;
     unsigned      mqg21_pool3_64kb                          :  1;
     unsigned      mqg21_pool3_16kb                          :  1;
     unsigned      mqg21_pool3_2kb                           :  1;
     unsigned      mqg21_pool3_256b                          :  1;
     unsigned      mqg21_pool2_64kb                          :  1;
     unsigned      mqg21_pool2_16kb                          :  1;
     unsigned      mqg21_pool2_2kb                           :  1;
     unsigned      mqg21_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg21_pool2_256b                          :  1;
     unsigned      mqg21_pool2_2kb                           :  1;
     unsigned      mqg21_pool2_16kb                          :  1;
     unsigned      mqg21_pool2_64kb                          :  1;
     unsigned      mqg21_pool3_256b                          :  1;
     unsigned      mqg21_pool3_2kb                           :  1;
     unsigned      mqg21_pool3_16kb                          :  1;
     unsigned      mqg21_pool3_64kb                          :  1;
     unsigned      mqg21_pool4_256b                          :  1;
     unsigned      mqg21_pool4_2kb                           :  1;
     unsigned      mqg21_pool4_16kb                          :  1;
     unsigned      mqg21_pool4_64kb                          :  1;
     unsigned      mqg21_pool5_256b                          :  1;
     unsigned      mqg21_pool5_2kb                           :  1;
     unsigned      mqg21_pool5_16kb                          :  1;
     unsigned      mqg21_pool5_64kb                          :  1;
     unsigned      mqg21_pool6_256b                          :  1;
     unsigned      mqg21_pool6_2kb                           :  1;
     unsigned      mqg21_pool6_16kb                          :  1;
     unsigned      mqg21_pool6_64kb                          :  1;
     unsigned      mqg21_pool7_256b                          :  1;
     unsigned      mqg21_pool7_2kb                           :  1;
     unsigned      mqg21_pool7_16kb                          :  1;
     unsigned      mqg21_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg21_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg22_lt0_status_r_t
 *  @brief Memory Quota Group 22 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg22_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 22 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg22_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg22_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg22_pool7_64kb                          :  1;
     unsigned      mqg22_pool7_16kb                          :  1;
     unsigned      mqg22_pool7_2kb                           :  1;
     unsigned      mqg22_pool7_256b                          :  1;
     unsigned      mqg22_pool6_64kb                          :  1;
     unsigned      mqg22_pool6_16kb                          :  1;
     unsigned      mqg22_pool6_2kb                           :  1;
     unsigned      mqg22_pool6_256b                          :  1;
     unsigned      mqg22_pool5_64kb                          :  1;
     unsigned      mqg22_pool5_16kb                          :  1;
     unsigned      mqg22_pool5_2kb                           :  1;
     unsigned      mqg22_pool5_256b                          :  1;
     unsigned      mqg22_pool4_64kb                          :  1;
     unsigned      mqg22_pool4_16kb                          :  1;
     unsigned      mqg22_pool4_2kb                           :  1;
     unsigned      mqg22_pool4_256b                          :  1;
     unsigned      mqg22_pool3_64kb                          :  1;
     unsigned      mqg22_pool3_16kb                          :  1;
     unsigned      mqg22_pool3_2kb                           :  1;
     unsigned      mqg22_pool3_256b                          :  1;
     unsigned      mqg22_pool2_64kb                          :  1;
     unsigned      mqg22_pool2_16kb                          :  1;
     unsigned      mqg22_pool2_2kb                           :  1;
     unsigned      mqg22_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg22_pool2_256b                          :  1;
     unsigned      mqg22_pool2_2kb                           :  1;
     unsigned      mqg22_pool2_16kb                          :  1;
     unsigned      mqg22_pool2_64kb                          :  1;
     unsigned      mqg22_pool3_256b                          :  1;
     unsigned      mqg22_pool3_2kb                           :  1;
     unsigned      mqg22_pool3_16kb                          :  1;
     unsigned      mqg22_pool3_64kb                          :  1;
     unsigned      mqg22_pool4_256b                          :  1;
     unsigned      mqg22_pool4_2kb                           :  1;
     unsigned      mqg22_pool4_16kb                          :  1;
     unsigned      mqg22_pool4_64kb                          :  1;
     unsigned      mqg22_pool5_256b                          :  1;
     unsigned      mqg22_pool5_2kb                           :  1;
     unsigned      mqg22_pool5_16kb                          :  1;
     unsigned      mqg22_pool5_64kb                          :  1;
     unsigned      mqg22_pool6_256b                          :  1;
     unsigned      mqg22_pool6_2kb                           :  1;
     unsigned      mqg22_pool6_16kb                          :  1;
     unsigned      mqg22_pool6_64kb                          :  1;
     unsigned      mqg22_pool7_256b                          :  1;
     unsigned      mqg22_pool7_2kb                           :  1;
     unsigned      mqg22_pool7_16kb                          :  1;
     unsigned      mqg22_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg22_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg23_lt0_status_r_t
 *  @brief Memory Quota Group 23 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg23_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 23 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg23_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg23_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg23_pool7_64kb                          :  1;
     unsigned      mqg23_pool7_16kb                          :  1;
     unsigned      mqg23_pool7_2kb                           :  1;
     unsigned      mqg23_pool7_256b                          :  1;
     unsigned      mqg23_pool6_64kb                          :  1;
     unsigned      mqg23_pool6_16kb                          :  1;
     unsigned      mqg23_pool6_2kb                           :  1;
     unsigned      mqg23_pool6_256b                          :  1;
     unsigned      mqg23_pool5_64kb                          :  1;
     unsigned      mqg23_pool5_16kb                          :  1;
     unsigned      mqg23_pool5_2kb                           :  1;
     unsigned      mqg23_pool5_256b                          :  1;
     unsigned      mqg23_pool4_64kb                          :  1;
     unsigned      mqg23_pool4_16kb                          :  1;
     unsigned      mqg23_pool4_2kb                           :  1;
     unsigned      mqg23_pool4_256b                          :  1;
     unsigned      mqg23_pool3_64kb                          :  1;
     unsigned      mqg23_pool3_16kb                          :  1;
     unsigned      mqg23_pool3_2kb                           :  1;
     unsigned      mqg23_pool3_256b                          :  1;
     unsigned      mqg23_pool2_64kb                          :  1;
     unsigned      mqg23_pool2_16kb                          :  1;
     unsigned      mqg23_pool2_2kb                           :  1;
     unsigned      mqg23_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg23_pool2_256b                          :  1;
     unsigned      mqg23_pool2_2kb                           :  1;
     unsigned      mqg23_pool2_16kb                          :  1;
     unsigned      mqg23_pool2_64kb                          :  1;
     unsigned      mqg23_pool3_256b                          :  1;
     unsigned      mqg23_pool3_2kb                           :  1;
     unsigned      mqg23_pool3_16kb                          :  1;
     unsigned      mqg23_pool3_64kb                          :  1;
     unsigned      mqg23_pool4_256b                          :  1;
     unsigned      mqg23_pool4_2kb                           :  1;
     unsigned      mqg23_pool4_16kb                          :  1;
     unsigned      mqg23_pool4_64kb                          :  1;
     unsigned      mqg23_pool5_256b                          :  1;
     unsigned      mqg23_pool5_2kb                           :  1;
     unsigned      mqg23_pool5_16kb                          :  1;
     unsigned      mqg23_pool5_64kb                          :  1;
     unsigned      mqg23_pool6_256b                          :  1;
     unsigned      mqg23_pool6_2kb                           :  1;
     unsigned      mqg23_pool6_16kb                          :  1;
     unsigned      mqg23_pool6_64kb                          :  1;
     unsigned      mqg23_pool7_256b                          :  1;
     unsigned      mqg23_pool7_2kb                           :  1;
     unsigned      mqg23_pool7_16kb                          :  1;
     unsigned      mqg23_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg23_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg24_lt0_status_r_t
 *  @brief Memory Quota Group 24 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg24_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 24 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg24_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg24_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg24_pool7_64kb                          :  1;
     unsigned      mqg24_pool7_16kb                          :  1;
     unsigned      mqg24_pool7_2kb                           :  1;
     unsigned      mqg24_pool7_256b                          :  1;
     unsigned      mqg24_pool6_64kb                          :  1;
     unsigned      mqg24_pool6_16kb                          :  1;
     unsigned      mqg24_pool6_2kb                           :  1;
     unsigned      mqg24_pool6_256b                          :  1;
     unsigned      mqg24_pool5_64kb                          :  1;
     unsigned      mqg24_pool5_16kb                          :  1;
     unsigned      mqg24_pool5_2kb                           :  1;
     unsigned      mqg24_pool5_256b                          :  1;
     unsigned      mqg24_pool4_64kb                          :  1;
     unsigned      mqg24_pool4_16kb                          :  1;
     unsigned      mqg24_pool4_2kb                           :  1;
     unsigned      mqg24_pool4_256b                          :  1;
     unsigned      mqg24_pool3_64kb                          :  1;
     unsigned      mqg24_pool3_16kb                          :  1;
     unsigned      mqg24_pool3_2kb                           :  1;
     unsigned      mqg24_pool3_256b                          :  1;
     unsigned      mqg24_pool2_64kb                          :  1;
     unsigned      mqg24_pool2_16kb                          :  1;
     unsigned      mqg24_pool2_2kb                           :  1;
     unsigned      mqg24_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg24_pool2_256b                          :  1;
     unsigned      mqg24_pool2_2kb                           :  1;
     unsigned      mqg24_pool2_16kb                          :  1;
     unsigned      mqg24_pool2_64kb                          :  1;
     unsigned      mqg24_pool3_256b                          :  1;
     unsigned      mqg24_pool3_2kb                           :  1;
     unsigned      mqg24_pool3_16kb                          :  1;
     unsigned      mqg24_pool3_64kb                          :  1;
     unsigned      mqg24_pool4_256b                          :  1;
     unsigned      mqg24_pool4_2kb                           :  1;
     unsigned      mqg24_pool4_16kb                          :  1;
     unsigned      mqg24_pool4_64kb                          :  1;
     unsigned      mqg24_pool5_256b                          :  1;
     unsigned      mqg24_pool5_2kb                           :  1;
     unsigned      mqg24_pool5_16kb                          :  1;
     unsigned      mqg24_pool5_64kb                          :  1;
     unsigned      mqg24_pool6_256b                          :  1;
     unsigned      mqg24_pool6_2kb                           :  1;
     unsigned      mqg24_pool6_16kb                          :  1;
     unsigned      mqg24_pool6_64kb                          :  1;
     unsigned      mqg24_pool7_256b                          :  1;
     unsigned      mqg24_pool7_2kb                           :  1;
     unsigned      mqg24_pool7_16kb                          :  1;
     unsigned      mqg24_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg24_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg25_lt0_status_r_t
 *  @brief Memory Quota Group 25 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg25_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 25 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg25_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg25_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg25_pool7_64kb                          :  1;
     unsigned      mqg25_pool7_16kb                          :  1;
     unsigned      mqg25_pool7_2kb                           :  1;
     unsigned      mqg25_pool7_256b                          :  1;
     unsigned      mqg25_pool6_64kb                          :  1;
     unsigned      mqg25_pool6_16kb                          :  1;
     unsigned      mqg25_pool6_2kb                           :  1;
     unsigned      mqg25_pool6_256b                          :  1;
     unsigned      mqg25_pool5_64kb                          :  1;
     unsigned      mqg25_pool5_16kb                          :  1;
     unsigned      mqg25_pool5_2kb                           :  1;
     unsigned      mqg25_pool5_256b                          :  1;
     unsigned      mqg25_pool4_64kb                          :  1;
     unsigned      mqg25_pool4_16kb                          :  1;
     unsigned      mqg25_pool4_2kb                           :  1;
     unsigned      mqg25_pool4_256b                          :  1;
     unsigned      mqg25_pool3_64kb                          :  1;
     unsigned      mqg25_pool3_16kb                          :  1;
     unsigned      mqg25_pool3_2kb                           :  1;
     unsigned      mqg25_pool3_256b                          :  1;
     unsigned      mqg25_pool2_64kb                          :  1;
     unsigned      mqg25_pool2_16kb                          :  1;
     unsigned      mqg25_pool2_2kb                           :  1;
     unsigned      mqg25_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg25_pool2_256b                          :  1;
     unsigned      mqg25_pool2_2kb                           :  1;
     unsigned      mqg25_pool2_16kb                          :  1;
     unsigned      mqg25_pool2_64kb                          :  1;
     unsigned      mqg25_pool3_256b                          :  1;
     unsigned      mqg25_pool3_2kb                           :  1;
     unsigned      mqg25_pool3_16kb                          :  1;
     unsigned      mqg25_pool3_64kb                          :  1;
     unsigned      mqg25_pool4_256b                          :  1;
     unsigned      mqg25_pool4_2kb                           :  1;
     unsigned      mqg25_pool4_16kb                          :  1;
     unsigned      mqg25_pool4_64kb                          :  1;
     unsigned      mqg25_pool5_256b                          :  1;
     unsigned      mqg25_pool5_2kb                           :  1;
     unsigned      mqg25_pool5_16kb                          :  1;
     unsigned      mqg25_pool5_64kb                          :  1;
     unsigned      mqg25_pool6_256b                          :  1;
     unsigned      mqg25_pool6_2kb                           :  1;
     unsigned      mqg25_pool6_16kb                          :  1;
     unsigned      mqg25_pool6_64kb                          :  1;
     unsigned      mqg25_pool7_256b                          :  1;
     unsigned      mqg25_pool7_2kb                           :  1;
     unsigned      mqg25_pool7_16kb                          :  1;
     unsigned      mqg25_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg25_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg26_lt0_status_r_t
 *  @brief Memory Quota Group 26 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg26_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 26 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg26_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg26_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg26_pool7_64kb                          :  1;
     unsigned      mqg26_pool7_16kb                          :  1;
     unsigned      mqg26_pool7_2kb                           :  1;
     unsigned      mqg26_pool7_256b                          :  1;
     unsigned      mqg26_pool6_64kb                          :  1;
     unsigned      mqg26_pool6_16kb                          :  1;
     unsigned      mqg26_pool6_2kb                           :  1;
     unsigned      mqg26_pool6_256b                          :  1;
     unsigned      mqg26_pool5_64kb                          :  1;
     unsigned      mqg26_pool5_16kb                          :  1;
     unsigned      mqg26_pool5_2kb                           :  1;
     unsigned      mqg26_pool5_256b                          :  1;
     unsigned      mqg26_pool4_64kb                          :  1;
     unsigned      mqg26_pool4_16kb                          :  1;
     unsigned      mqg26_pool4_2kb                           :  1;
     unsigned      mqg26_pool4_256b                          :  1;
     unsigned      mqg26_pool3_64kb                          :  1;
     unsigned      mqg26_pool3_16kb                          :  1;
     unsigned      mqg26_pool3_2kb                           :  1;
     unsigned      mqg26_pool3_256b                          :  1;
     unsigned      mqg26_pool2_64kb                          :  1;
     unsigned      mqg26_pool2_16kb                          :  1;
     unsigned      mqg26_pool2_2kb                           :  1;
     unsigned      mqg26_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg26_pool2_256b                          :  1;
     unsigned      mqg26_pool2_2kb                           :  1;
     unsigned      mqg26_pool2_16kb                          :  1;
     unsigned      mqg26_pool2_64kb                          :  1;
     unsigned      mqg26_pool3_256b                          :  1;
     unsigned      mqg26_pool3_2kb                           :  1;
     unsigned      mqg26_pool3_16kb                          :  1;
     unsigned      mqg26_pool3_64kb                          :  1;
     unsigned      mqg26_pool4_256b                          :  1;
     unsigned      mqg26_pool4_2kb                           :  1;
     unsigned      mqg26_pool4_16kb                          :  1;
     unsigned      mqg26_pool4_64kb                          :  1;
     unsigned      mqg26_pool5_256b                          :  1;
     unsigned      mqg26_pool5_2kb                           :  1;
     unsigned      mqg26_pool5_16kb                          :  1;
     unsigned      mqg26_pool5_64kb                          :  1;
     unsigned      mqg26_pool6_256b                          :  1;
     unsigned      mqg26_pool6_2kb                           :  1;
     unsigned      mqg26_pool6_16kb                          :  1;
     unsigned      mqg26_pool6_64kb                          :  1;
     unsigned      mqg26_pool7_256b                          :  1;
     unsigned      mqg26_pool7_2kb                           :  1;
     unsigned      mqg26_pool7_16kb                          :  1;
     unsigned      mqg26_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg26_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg27_lt0_status_r_t
 *  @brief Memory Quota Group 27 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg27_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 27 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg27_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg27_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg27_pool7_64kb                          :  1;
     unsigned      mqg27_pool7_16kb                          :  1;
     unsigned      mqg27_pool7_2kb                           :  1;
     unsigned      mqg27_pool7_256b                          :  1;
     unsigned      mqg27_pool6_64kb                          :  1;
     unsigned      mqg27_pool6_16kb                          :  1;
     unsigned      mqg27_pool6_2kb                           :  1;
     unsigned      mqg27_pool6_256b                          :  1;
     unsigned      mqg27_pool5_64kb                          :  1;
     unsigned      mqg27_pool5_16kb                          :  1;
     unsigned      mqg27_pool5_2kb                           :  1;
     unsigned      mqg27_pool5_256b                          :  1;
     unsigned      mqg27_pool4_64kb                          :  1;
     unsigned      mqg27_pool4_16kb                          :  1;
     unsigned      mqg27_pool4_2kb                           :  1;
     unsigned      mqg27_pool4_256b                          :  1;
     unsigned      mqg27_pool3_64kb                          :  1;
     unsigned      mqg27_pool3_16kb                          :  1;
     unsigned      mqg27_pool3_2kb                           :  1;
     unsigned      mqg27_pool3_256b                          :  1;
     unsigned      mqg27_pool2_64kb                          :  1;
     unsigned      mqg27_pool2_16kb                          :  1;
     unsigned      mqg27_pool2_2kb                           :  1;
     unsigned      mqg27_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg27_pool2_256b                          :  1;
     unsigned      mqg27_pool2_2kb                           :  1;
     unsigned      mqg27_pool2_16kb                          :  1;
     unsigned      mqg27_pool2_64kb                          :  1;
     unsigned      mqg27_pool3_256b                          :  1;
     unsigned      mqg27_pool3_2kb                           :  1;
     unsigned      mqg27_pool3_16kb                          :  1;
     unsigned      mqg27_pool3_64kb                          :  1;
     unsigned      mqg27_pool4_256b                          :  1;
     unsigned      mqg27_pool4_2kb                           :  1;
     unsigned      mqg27_pool4_16kb                          :  1;
     unsigned      mqg27_pool4_64kb                          :  1;
     unsigned      mqg27_pool5_256b                          :  1;
     unsigned      mqg27_pool5_2kb                           :  1;
     unsigned      mqg27_pool5_16kb                          :  1;
     unsigned      mqg27_pool5_64kb                          :  1;
     unsigned      mqg27_pool6_256b                          :  1;
     unsigned      mqg27_pool6_2kb                           :  1;
     unsigned      mqg27_pool6_16kb                          :  1;
     unsigned      mqg27_pool6_64kb                          :  1;
     unsigned      mqg27_pool7_256b                          :  1;
     unsigned      mqg27_pool7_2kb                           :  1;
     unsigned      mqg27_pool7_16kb                          :  1;
     unsigned      mqg27_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg27_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg28_lt0_status_r_t
 *  @brief Memory Quota Group 28 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg28_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 28 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg28_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg28_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg28_pool7_64kb                          :  1;
     unsigned      mqg28_pool7_16kb                          :  1;
     unsigned      mqg28_pool7_2kb                           :  1;
     unsigned      mqg28_pool7_256b                          :  1;
     unsigned      mqg28_pool6_64kb                          :  1;
     unsigned      mqg28_pool6_16kb                          :  1;
     unsigned      mqg28_pool6_2kb                           :  1;
     unsigned      mqg28_pool6_256b                          :  1;
     unsigned      mqg28_pool5_64kb                          :  1;
     unsigned      mqg28_pool5_16kb                          :  1;
     unsigned      mqg28_pool5_2kb                           :  1;
     unsigned      mqg28_pool5_256b                          :  1;
     unsigned      mqg28_pool4_64kb                          :  1;
     unsigned      mqg28_pool4_16kb                          :  1;
     unsigned      mqg28_pool4_2kb                           :  1;
     unsigned      mqg28_pool4_256b                          :  1;
     unsigned      mqg28_pool3_64kb                          :  1;
     unsigned      mqg28_pool3_16kb                          :  1;
     unsigned      mqg28_pool3_2kb                           :  1;
     unsigned      mqg28_pool3_256b                          :  1;
     unsigned      mqg28_pool2_64kb                          :  1;
     unsigned      mqg28_pool2_16kb                          :  1;
     unsigned      mqg28_pool2_2kb                           :  1;
     unsigned      mqg28_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg28_pool2_256b                          :  1;
     unsigned      mqg28_pool2_2kb                           :  1;
     unsigned      mqg28_pool2_16kb                          :  1;
     unsigned      mqg28_pool2_64kb                          :  1;
     unsigned      mqg28_pool3_256b                          :  1;
     unsigned      mqg28_pool3_2kb                           :  1;
     unsigned      mqg28_pool3_16kb                          :  1;
     unsigned      mqg28_pool3_64kb                          :  1;
     unsigned      mqg28_pool4_256b                          :  1;
     unsigned      mqg28_pool4_2kb                           :  1;
     unsigned      mqg28_pool4_16kb                          :  1;
     unsigned      mqg28_pool4_64kb                          :  1;
     unsigned      mqg28_pool5_256b                          :  1;
     unsigned      mqg28_pool5_2kb                           :  1;
     unsigned      mqg28_pool5_16kb                          :  1;
     unsigned      mqg28_pool5_64kb                          :  1;
     unsigned      mqg28_pool6_256b                          :  1;
     unsigned      mqg28_pool6_2kb                           :  1;
     unsigned      mqg28_pool6_16kb                          :  1;
     unsigned      mqg28_pool6_64kb                          :  1;
     unsigned      mqg28_pool7_256b                          :  1;
     unsigned      mqg28_pool7_2kb                           :  1;
     unsigned      mqg28_pool7_16kb                          :  1;
     unsigned      mqg28_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg28_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg29_lt0_status_r_t
 *  @brief Memory Quota Group 29 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg29_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 29 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg29_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg29_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg29_pool7_64kb                          :  1;
     unsigned      mqg29_pool7_16kb                          :  1;
     unsigned      mqg29_pool7_2kb                           :  1;
     unsigned      mqg29_pool7_256b                          :  1;
     unsigned      mqg29_pool6_64kb                          :  1;
     unsigned      mqg29_pool6_16kb                          :  1;
     unsigned      mqg29_pool6_2kb                           :  1;
     unsigned      mqg29_pool6_256b                          :  1;
     unsigned      mqg29_pool5_64kb                          :  1;
     unsigned      mqg29_pool5_16kb                          :  1;
     unsigned      mqg29_pool5_2kb                           :  1;
     unsigned      mqg29_pool5_256b                          :  1;
     unsigned      mqg29_pool4_64kb                          :  1;
     unsigned      mqg29_pool4_16kb                          :  1;
     unsigned      mqg29_pool4_2kb                           :  1;
     unsigned      mqg29_pool4_256b                          :  1;
     unsigned      mqg29_pool3_64kb                          :  1;
     unsigned      mqg29_pool3_16kb                          :  1;
     unsigned      mqg29_pool3_2kb                           :  1;
     unsigned      mqg29_pool3_256b                          :  1;
     unsigned      mqg29_pool2_64kb                          :  1;
     unsigned      mqg29_pool2_16kb                          :  1;
     unsigned      mqg29_pool2_2kb                           :  1;
     unsigned      mqg29_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg29_pool2_256b                          :  1;
     unsigned      mqg29_pool2_2kb                           :  1;
     unsigned      mqg29_pool2_16kb                          :  1;
     unsigned      mqg29_pool2_64kb                          :  1;
     unsigned      mqg29_pool3_256b                          :  1;
     unsigned      mqg29_pool3_2kb                           :  1;
     unsigned      mqg29_pool3_16kb                          :  1;
     unsigned      mqg29_pool3_64kb                          :  1;
     unsigned      mqg29_pool4_256b                          :  1;
     unsigned      mqg29_pool4_2kb                           :  1;
     unsigned      mqg29_pool4_16kb                          :  1;
     unsigned      mqg29_pool4_64kb                          :  1;
     unsigned      mqg29_pool5_256b                          :  1;
     unsigned      mqg29_pool5_2kb                           :  1;
     unsigned      mqg29_pool5_16kb                          :  1;
     unsigned      mqg29_pool5_64kb                          :  1;
     unsigned      mqg29_pool6_256b                          :  1;
     unsigned      mqg29_pool6_2kb                           :  1;
     unsigned      mqg29_pool6_16kb                          :  1;
     unsigned      mqg29_pool6_64kb                          :  1;
     unsigned      mqg29_pool7_256b                          :  1;
     unsigned      mqg29_pool7_2kb                           :  1;
     unsigned      mqg29_pool7_16kb                          :  1;
     unsigned      mqg29_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg29_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg30_lt0_status_r_t
 *  @brief Memory Quota Group 30 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg30_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 30 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg30_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg30_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg30_pool7_64kb                          :  1;
     unsigned      mqg30_pool7_16kb                          :  1;
     unsigned      mqg30_pool7_2kb                           :  1;
     unsigned      mqg30_pool7_256b                          :  1;
     unsigned      mqg30_pool6_64kb                          :  1;
     unsigned      mqg30_pool6_16kb                          :  1;
     unsigned      mqg30_pool6_2kb                           :  1;
     unsigned      mqg30_pool6_256b                          :  1;
     unsigned      mqg30_pool5_64kb                          :  1;
     unsigned      mqg30_pool5_16kb                          :  1;
     unsigned      mqg30_pool5_2kb                           :  1;
     unsigned      mqg30_pool5_256b                          :  1;
     unsigned      mqg30_pool4_64kb                          :  1;
     unsigned      mqg30_pool4_16kb                          :  1;
     unsigned      mqg30_pool4_2kb                           :  1;
     unsigned      mqg30_pool4_256b                          :  1;
     unsigned      mqg30_pool3_64kb                          :  1;
     unsigned      mqg30_pool3_16kb                          :  1;
     unsigned      mqg30_pool3_2kb                           :  1;
     unsigned      mqg30_pool3_256b                          :  1;
     unsigned      mqg30_pool2_64kb                          :  1;
     unsigned      mqg30_pool2_16kb                          :  1;
     unsigned      mqg30_pool2_2kb                           :  1;
     unsigned      mqg30_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg30_pool2_256b                          :  1;
     unsigned      mqg30_pool2_2kb                           :  1;
     unsigned      mqg30_pool2_16kb                          :  1;
     unsigned      mqg30_pool2_64kb                          :  1;
     unsigned      mqg30_pool3_256b                          :  1;
     unsigned      mqg30_pool3_2kb                           :  1;
     unsigned      mqg30_pool3_16kb                          :  1;
     unsigned      mqg30_pool3_64kb                          :  1;
     unsigned      mqg30_pool4_256b                          :  1;
     unsigned      mqg30_pool4_2kb                           :  1;
     unsigned      mqg30_pool4_16kb                          :  1;
     unsigned      mqg30_pool4_64kb                          :  1;
     unsigned      mqg30_pool5_256b                          :  1;
     unsigned      mqg30_pool5_2kb                           :  1;
     unsigned      mqg30_pool5_16kb                          :  1;
     unsigned      mqg30_pool5_64kb                          :  1;
     unsigned      mqg30_pool6_256b                          :  1;
     unsigned      mqg30_pool6_2kb                           :  1;
     unsigned      mqg30_pool6_16kb                          :  1;
     unsigned      mqg30_pool6_64kb                          :  1;
     unsigned      mqg30_pool7_256b                          :  1;
     unsigned      mqg30_pool7_2kb                           :  1;
     unsigned      mqg30_pool7_16kb                          :  1;
     unsigned      mqg30_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg30_lt0_status_r_t;

/*! @struct ncp_nca_mtp_mqg31_lt0_status_r_t
 *  @brief Memory Quota Group 31 Less Than Zero Status Register
 *  @details This register holds read-only status for the < zero status for each shared pool and size in the memory quota group.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_mqg31_lt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 7, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 7, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 7, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 7, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 6, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 6, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 6, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 6, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 5, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 5, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 5, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 5, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 4, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 4, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 4, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 4, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 3, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 3, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 3, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 3, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 2, 64KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 2, 16KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 2, 2KB blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 31 allocated blocks < 0 for pool 2, 256B blocks. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_mqg31_lt0_status_r_t
 *
 * Implemented by: 
 *      mqg31_lt0_status
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_pool7_64kb                          :  1;
     unsigned      mqg31_pool7_16kb                          :  1;
     unsigned      mqg31_pool7_2kb                           :  1;
     unsigned      mqg31_pool7_256b                          :  1;
     unsigned      mqg31_pool6_64kb                          :  1;
     unsigned      mqg31_pool6_16kb                          :  1;
     unsigned      mqg31_pool6_2kb                           :  1;
     unsigned      mqg31_pool6_256b                          :  1;
     unsigned      mqg31_pool5_64kb                          :  1;
     unsigned      mqg31_pool5_16kb                          :  1;
     unsigned      mqg31_pool5_2kb                           :  1;
     unsigned      mqg31_pool5_256b                          :  1;
     unsigned      mqg31_pool4_64kb                          :  1;
     unsigned      mqg31_pool4_16kb                          :  1;
     unsigned      mqg31_pool4_2kb                           :  1;
     unsigned      mqg31_pool4_256b                          :  1;
     unsigned      mqg31_pool3_64kb                          :  1;
     unsigned      mqg31_pool3_16kb                          :  1;
     unsigned      mqg31_pool3_2kb                           :  1;
     unsigned      mqg31_pool3_256b                          :  1;
     unsigned      mqg31_pool2_64kb                          :  1;
     unsigned      mqg31_pool2_16kb                          :  1;
     unsigned      mqg31_pool2_2kb                           :  1;
     unsigned      mqg31_pool2_256b                          :  1;
     unsigned      reserved0                                 :  8;
#else    /* Little Endian */
     unsigned      reserved0                                 :  8;
     unsigned      mqg31_pool2_256b                          :  1;
     unsigned      mqg31_pool2_2kb                           :  1;
     unsigned      mqg31_pool2_16kb                          :  1;
     unsigned      mqg31_pool2_64kb                          :  1;
     unsigned      mqg31_pool3_256b                          :  1;
     unsigned      mqg31_pool3_2kb                           :  1;
     unsigned      mqg31_pool3_16kb                          :  1;
     unsigned      mqg31_pool3_64kb                          :  1;
     unsigned      mqg31_pool4_256b                          :  1;
     unsigned      mqg31_pool4_2kb                           :  1;
     unsigned      mqg31_pool4_16kb                          :  1;
     unsigned      mqg31_pool4_64kb                          :  1;
     unsigned      mqg31_pool5_256b                          :  1;
     unsigned      mqg31_pool5_2kb                           :  1;
     unsigned      mqg31_pool5_16kb                          :  1;
     unsigned      mqg31_pool5_64kb                          :  1;
     unsigned      mqg31_pool6_256b                          :  1;
     unsigned      mqg31_pool6_2kb                           :  1;
     unsigned      mqg31_pool6_16kb                          :  1;
     unsigned      mqg31_pool6_64kb                          :  1;
     unsigned      mqg31_pool7_256b                          :  1;
     unsigned      mqg31_pool7_2kb                           :  1;
     unsigned      mqg31_pool7_16kb                          :  1;
     unsigned      mqg31_pool7_64kb                          :  1;
#endif
} ncp_nca_mtp_mqg31_lt0_status_r_t;

/*! @struct ncp_nca_mtp_counter_r_t
 *  @brief Event Counter
 *  @details This register holds a running count of the number of times an event has occurred.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_counter_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param count </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Counter value. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_counter_r_t
 *
 * Implemented by: 
 *      mcip_alloc_req_counter
 *      mcip_alloc_ack_counter
 *      mcip_alloc_nack_counter
 *      mpcq_alloc_req_counter
 *      mpcq_alloc_ack_counter
 *      mpcq_alloc_nack_counter
 *      itp_alloc_req_counter
 *      itp_alloc_ack_counter
 *      itp_alloc_nack_counter
 *      dmm_alloc_req_counter
 *      dmm_alloc_ack_counter
 *      dmm_alloc_nack_counter
 *      mcip_refcnt_inc_counter
 *      mcip_refcnt_dec_counter
 *      refcnt_snarfable_counter
 *      mcip_refcnt_resp_counter
 *      cow_refcnt_inc_counter
 *      cow_refcnt_resp_counter
 *      dmm_refcnt_dec_counter
 *      otp_refcnt_inc_counter
 *      otp_refcnt_dec_counter
 *      itp_refcnt_inc_counter
 *      otp_snarfed_counter
 *      dmm_snarfed_counter
 */
 
typedef struct
{
     unsigned  int                     count;
} ncp_nca_mtp_counter_r_t;

/*! @struct ncp_nca_mtp_counter_cor_r_t
 *  @brief Event Counter (Clear On Read)
 *  @details This register is an alias to a normal counter register and reading the counter using this address as opposed to the
	   counter's normal address results in the counter being cleared after the read.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_counter_cor_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param count </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Counter value. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_counter_cor_r_t
 *
 * Implemented by: 
 *      mcip_alloc_req_counter_cor
 *      mcip_alloc_ack_counter_cor
 *      mcip_alloc_nack_counter_cor
 *      mpcq_alloc_req_counter_cor
 *      mpcq_alloc_ack_counter_cor
 *      mpcq_alloc_nack_counter_cor
 *      itp_alloc_req_counter_cor
 *      itp_alloc_ack_counter_cor
 *      itp_alloc_nack_counter_cor
 *      dmm_alloc_req_counter_cor
 *      dmm_alloc_ack_counter_cor
 *      dmm_alloc_nack_counter_cor
 *      mcip_refcnt_inc_counter_cor
 *      mcip_refcnt_dec_counter_cor
 *      refcnt_snarfable_counter_cor
 *      mcip_refcnt_resp_counter_cor
 *      cow_refcnt_inc_counter_cor
 *      cow_refcnt_resp_counter_cor
 *      dmm_refcnt_dec_counter_cor
 *      otp_refcnt_inc_counter_cor
 *      otp_refcnt_dec_counter_cor
 *      itp_refcnt_inc_counter_cor
 *      otp_snarfed_counter_cor
 *      dmm_snarfed_counter_cor
 */
 
typedef struct
{
     unsigned  int                     count;
} ncp_nca_mtp_counter_cor_r_t;

/*! @struct ncp_nca_mtp_stripe_overflow_95_64_r_t
 *  @brief Pointer FIFO Overflow Register
 *  @details This register holds the read-only pointer FIFO overflow status.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_stripe_overflow_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool23_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool23_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool23_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool23_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool22_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool22_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool22_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool22_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool21_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool21_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool21_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool21_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool20_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool20_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool20_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool20_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool19_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool19_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool19_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool19_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool18_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool18_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool18_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool18_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool17_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool17_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool17_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool17_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool16_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool16_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool16_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool16_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 256B overflowed. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_stripe_overflow_95_64_r_t
 *
 * Implemented by: 
 *      stripe0_overflow_95_64
 *      stripe1_overflow_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      fifo_overflow_pool23_64kb                 :  1;
     unsigned      fifo_overflow_pool23_16kb                 :  1;
     unsigned      fifo_overflow_pool23_2kb                  :  1;
     unsigned      fifo_overflow_pool23_256b                 :  1;
     unsigned      fifo_overflow_pool22_64kb                 :  1;
     unsigned      fifo_overflow_pool22_16kb                 :  1;
     unsigned      fifo_overflow_pool22_2kb                  :  1;
     unsigned      fifo_overflow_pool22_256b                 :  1;
     unsigned      fifo_overflow_pool21_64kb                 :  1;
     unsigned      fifo_overflow_pool21_16kb                 :  1;
     unsigned      fifo_overflow_pool21_2kb                  :  1;
     unsigned      fifo_overflow_pool21_256b                 :  1;
     unsigned      fifo_overflow_pool20_64kb                 :  1;
     unsigned      fifo_overflow_pool20_16kb                 :  1;
     unsigned      fifo_overflow_pool20_2kb                  :  1;
     unsigned      fifo_overflow_pool20_256b                 :  1;
     unsigned      fifo_overflow_pool19_64kb                 :  1;
     unsigned      fifo_overflow_pool19_16kb                 :  1;
     unsigned      fifo_overflow_pool19_2kb                  :  1;
     unsigned      fifo_overflow_pool19_256b                 :  1;
     unsigned      fifo_overflow_pool18_64kb                 :  1;
     unsigned      fifo_overflow_pool18_16kb                 :  1;
     unsigned      fifo_overflow_pool18_2kb                  :  1;
     unsigned      fifo_overflow_pool18_256b                 :  1;
     unsigned      fifo_overflow_pool17_64kb                 :  1;
     unsigned      fifo_overflow_pool17_16kb                 :  1;
     unsigned      fifo_overflow_pool17_2kb                  :  1;
     unsigned      fifo_overflow_pool17_256b                 :  1;
     unsigned      fifo_overflow_pool16_64kb                 :  1;
     unsigned      fifo_overflow_pool16_16kb                 :  1;
     unsigned      fifo_overflow_pool16_2kb                  :  1;
     unsigned      fifo_overflow_pool16_256b                 :  1;
#else    /* Little Endian */
     unsigned      fifo_overflow_pool16_256b                 :  1;
     unsigned      fifo_overflow_pool16_2kb                  :  1;
     unsigned      fifo_overflow_pool16_16kb                 :  1;
     unsigned      fifo_overflow_pool16_64kb                 :  1;
     unsigned      fifo_overflow_pool17_256b                 :  1;
     unsigned      fifo_overflow_pool17_2kb                  :  1;
     unsigned      fifo_overflow_pool17_16kb                 :  1;
     unsigned      fifo_overflow_pool17_64kb                 :  1;
     unsigned      fifo_overflow_pool18_256b                 :  1;
     unsigned      fifo_overflow_pool18_2kb                  :  1;
     unsigned      fifo_overflow_pool18_16kb                 :  1;
     unsigned      fifo_overflow_pool18_64kb                 :  1;
     unsigned      fifo_overflow_pool19_256b                 :  1;
     unsigned      fifo_overflow_pool19_2kb                  :  1;
     unsigned      fifo_overflow_pool19_16kb                 :  1;
     unsigned      fifo_overflow_pool19_64kb                 :  1;
     unsigned      fifo_overflow_pool20_256b                 :  1;
     unsigned      fifo_overflow_pool20_2kb                  :  1;
     unsigned      fifo_overflow_pool20_16kb                 :  1;
     unsigned      fifo_overflow_pool20_64kb                 :  1;
     unsigned      fifo_overflow_pool21_256b                 :  1;
     unsigned      fifo_overflow_pool21_2kb                  :  1;
     unsigned      fifo_overflow_pool21_16kb                 :  1;
     unsigned      fifo_overflow_pool21_64kb                 :  1;
     unsigned      fifo_overflow_pool22_256b                 :  1;
     unsigned      fifo_overflow_pool22_2kb                  :  1;
     unsigned      fifo_overflow_pool22_16kb                 :  1;
     unsigned      fifo_overflow_pool22_64kb                 :  1;
     unsigned      fifo_overflow_pool23_256b                 :  1;
     unsigned      fifo_overflow_pool23_2kb                  :  1;
     unsigned      fifo_overflow_pool23_16kb                 :  1;
     unsigned      fifo_overflow_pool23_64kb                 :  1;
#endif
} ncp_nca_mtp_stripe_overflow_95_64_r_t;

/*! @struct ncp_nca_mtp_stripe_overflow_63_32_r_t
 *  @brief Pointer FIFO Overflow Register
 *  @details This register holds the read-only pointer FIFO overflow status.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_stripe_overflow_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool15_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool15_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool15_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool15_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool14_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool14_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool14_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool14_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool13_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool13_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool13_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool13_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool12_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool12_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool12_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool12_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool11_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool11_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool11_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool11_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool10_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool10_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool10_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool10_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool9_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool9_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool9_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool9_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool8_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool8_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool8_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool8_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 256B overflowed. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_stripe_overflow_63_32_r_t
 *
 * Implemented by: 
 *      stripe0_overflow_63_32
 *      stripe1_overflow_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      fifo_overflow_pool15_64kb                 :  1;
     unsigned      fifo_overflow_pool15_16kb                 :  1;
     unsigned      fifo_overflow_pool15_2kb                  :  1;
     unsigned      fifo_overflow_pool15_256b                 :  1;
     unsigned      fifo_overflow_pool14_64kb                 :  1;
     unsigned      fifo_overflow_pool14_16kb                 :  1;
     unsigned      fifo_overflow_pool14_2kb                  :  1;
     unsigned      fifo_overflow_pool14_256b                 :  1;
     unsigned      fifo_overflow_pool13_64kb                 :  1;
     unsigned      fifo_overflow_pool13_16kb                 :  1;
     unsigned      fifo_overflow_pool13_2kb                  :  1;
     unsigned      fifo_overflow_pool13_256b                 :  1;
     unsigned      fifo_overflow_pool12_64kb                 :  1;
     unsigned      fifo_overflow_pool12_16kb                 :  1;
     unsigned      fifo_overflow_pool12_2kb                  :  1;
     unsigned      fifo_overflow_pool12_256b                 :  1;
     unsigned      fifo_overflow_pool11_64kb                 :  1;
     unsigned      fifo_overflow_pool11_16kb                 :  1;
     unsigned      fifo_overflow_pool11_2kb                  :  1;
     unsigned      fifo_overflow_pool11_256b                 :  1;
     unsigned      fifo_overflow_pool10_64kb                 :  1;
     unsigned      fifo_overflow_pool10_16kb                 :  1;
     unsigned      fifo_overflow_pool10_2kb                  :  1;
     unsigned      fifo_overflow_pool10_256b                 :  1;
     unsigned      fifo_overflow_pool9_64kb                  :  1;
     unsigned      fifo_overflow_pool9_16kb                  :  1;
     unsigned      fifo_overflow_pool9_2kb                   :  1;
     unsigned      fifo_overflow_pool9_256b                  :  1;
     unsigned      fifo_overflow_pool8_64kb                  :  1;
     unsigned      fifo_overflow_pool8_16kb                  :  1;
     unsigned      fifo_overflow_pool8_2kb                   :  1;
     unsigned      fifo_overflow_pool8_256b                  :  1;
#else    /* Little Endian */
     unsigned      fifo_overflow_pool8_256b                  :  1;
     unsigned      fifo_overflow_pool8_2kb                   :  1;
     unsigned      fifo_overflow_pool8_16kb                  :  1;
     unsigned      fifo_overflow_pool8_64kb                  :  1;
     unsigned      fifo_overflow_pool9_256b                  :  1;
     unsigned      fifo_overflow_pool9_2kb                   :  1;
     unsigned      fifo_overflow_pool9_16kb                  :  1;
     unsigned      fifo_overflow_pool9_64kb                  :  1;
     unsigned      fifo_overflow_pool10_256b                 :  1;
     unsigned      fifo_overflow_pool10_2kb                  :  1;
     unsigned      fifo_overflow_pool10_16kb                 :  1;
     unsigned      fifo_overflow_pool10_64kb                 :  1;
     unsigned      fifo_overflow_pool11_256b                 :  1;
     unsigned      fifo_overflow_pool11_2kb                  :  1;
     unsigned      fifo_overflow_pool11_16kb                 :  1;
     unsigned      fifo_overflow_pool11_64kb                 :  1;
     unsigned      fifo_overflow_pool12_256b                 :  1;
     unsigned      fifo_overflow_pool12_2kb                  :  1;
     unsigned      fifo_overflow_pool12_16kb                 :  1;
     unsigned      fifo_overflow_pool12_64kb                 :  1;
     unsigned      fifo_overflow_pool13_256b                 :  1;
     unsigned      fifo_overflow_pool13_2kb                  :  1;
     unsigned      fifo_overflow_pool13_16kb                 :  1;
     unsigned      fifo_overflow_pool13_64kb                 :  1;
     unsigned      fifo_overflow_pool14_256b                 :  1;
     unsigned      fifo_overflow_pool14_2kb                  :  1;
     unsigned      fifo_overflow_pool14_16kb                 :  1;
     unsigned      fifo_overflow_pool14_64kb                 :  1;
     unsigned      fifo_overflow_pool15_256b                 :  1;
     unsigned      fifo_overflow_pool15_2kb                  :  1;
     unsigned      fifo_overflow_pool15_16kb                 :  1;
     unsigned      fifo_overflow_pool15_64kb                 :  1;
#endif
} ncp_nca_mtp_stripe_overflow_63_32_r_t;

/*! @struct ncp_nca_mtp_stripe_overflow_31_0_r_t
 *  @brief Pointer FIFO Overflow Register
 *  @details This register holds the read-only pointer FIFO overflow status.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_stripe_overflow_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool1_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool1_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool1_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool1_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 256B overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool0_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 64KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool0_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 16KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool0_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 2KB overflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_overflow_pool0_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 256B overflowed. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_stripe_overflow_31_0_r_t
 *
 * Implemented by: 
 *      stripe0_overflow_31_0
 *      stripe1_overflow_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      fifo_overflow_pool7_64kb                  :  1;
     unsigned      fifo_overflow_pool7_16kb                  :  1;
     unsigned      fifo_overflow_pool7_2kb                   :  1;
     unsigned      fifo_overflow_pool7_256b                  :  1;
     unsigned      fifo_overflow_pool6_64kb                  :  1;
     unsigned      fifo_overflow_pool6_16kb                  :  1;
     unsigned      fifo_overflow_pool6_2kb                   :  1;
     unsigned      fifo_overflow_pool6_256b                  :  1;
     unsigned      fifo_overflow_pool5_64kb                  :  1;
     unsigned      fifo_overflow_pool5_16kb                  :  1;
     unsigned      fifo_overflow_pool5_2kb                   :  1;
     unsigned      fifo_overflow_pool5_256b                  :  1;
     unsigned      fifo_overflow_pool4_64kb                  :  1;
     unsigned      fifo_overflow_pool4_16kb                  :  1;
     unsigned      fifo_overflow_pool4_2kb                   :  1;
     unsigned      fifo_overflow_pool4_256b                  :  1;
     unsigned      fifo_overflow_pool3_64kb                  :  1;
     unsigned      fifo_overflow_pool3_16kb                  :  1;
     unsigned      fifo_overflow_pool3_2kb                   :  1;
     unsigned      fifo_overflow_pool3_256b                  :  1;
     unsigned      fifo_overflow_pool2_64kb                  :  1;
     unsigned      fifo_overflow_pool2_16kb                  :  1;
     unsigned      fifo_overflow_pool2_2kb                   :  1;
     unsigned      fifo_overflow_pool2_256b                  :  1;
     unsigned      fifo_overflow_pool1_64kb                  :  1;
     unsigned      fifo_overflow_pool1_16kb                  :  1;
     unsigned      fifo_overflow_pool1_2kb                   :  1;
     unsigned      fifo_overflow_pool1_256b                  :  1;
     unsigned      fifo_overflow_pool0_64kb                  :  1;
     unsigned      fifo_overflow_pool0_16kb                  :  1;
     unsigned      fifo_overflow_pool0_2kb                   :  1;
     unsigned      fifo_overflow_pool0_256b                  :  1;
#else    /* Little Endian */
     unsigned      fifo_overflow_pool0_256b                  :  1;
     unsigned      fifo_overflow_pool0_2kb                   :  1;
     unsigned      fifo_overflow_pool0_16kb                  :  1;
     unsigned      fifo_overflow_pool0_64kb                  :  1;
     unsigned      fifo_overflow_pool1_256b                  :  1;
     unsigned      fifo_overflow_pool1_2kb                   :  1;
     unsigned      fifo_overflow_pool1_16kb                  :  1;
     unsigned      fifo_overflow_pool1_64kb                  :  1;
     unsigned      fifo_overflow_pool2_256b                  :  1;
     unsigned      fifo_overflow_pool2_2kb                   :  1;
     unsigned      fifo_overflow_pool2_16kb                  :  1;
     unsigned      fifo_overflow_pool2_64kb                  :  1;
     unsigned      fifo_overflow_pool3_256b                  :  1;
     unsigned      fifo_overflow_pool3_2kb                   :  1;
     unsigned      fifo_overflow_pool3_16kb                  :  1;
     unsigned      fifo_overflow_pool3_64kb                  :  1;
     unsigned      fifo_overflow_pool4_256b                  :  1;
     unsigned      fifo_overflow_pool4_2kb                   :  1;
     unsigned      fifo_overflow_pool4_16kb                  :  1;
     unsigned      fifo_overflow_pool4_64kb                  :  1;
     unsigned      fifo_overflow_pool5_256b                  :  1;
     unsigned      fifo_overflow_pool5_2kb                   :  1;
     unsigned      fifo_overflow_pool5_16kb                  :  1;
     unsigned      fifo_overflow_pool5_64kb                  :  1;
     unsigned      fifo_overflow_pool6_256b                  :  1;
     unsigned      fifo_overflow_pool6_2kb                   :  1;
     unsigned      fifo_overflow_pool6_16kb                  :  1;
     unsigned      fifo_overflow_pool6_64kb                  :  1;
     unsigned      fifo_overflow_pool7_256b                  :  1;
     unsigned      fifo_overflow_pool7_2kb                   :  1;
     unsigned      fifo_overflow_pool7_16kb                  :  1;
     unsigned      fifo_overflow_pool7_64kb                  :  1;
#endif
} ncp_nca_mtp_stripe_overflow_31_0_r_t;

/*! @struct ncp_nca_mtp_stripe_underflow_95_64_r_t
 *  @brief Pointer FIFO Overflow Register
 *  @details This register holds the read-only pointer FIFO underflow status.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_stripe_underflow_95_64_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool23_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool23_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool23_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool23_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Pointer FIFO for pool 23, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool22_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool22_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool22_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool22_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Pointer FIFO for pool 22, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool21_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool21_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool21_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool21_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Pointer FIFO for pool 21, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool20_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool20_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool20_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool20_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Pointer FIFO for pool 20, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool19_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool19_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool19_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool19_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Pointer FIFO for pool 19, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool18_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool18_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool18_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool18_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Pointer FIFO for pool 18, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool17_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool17_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool17_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool17_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Pointer FIFO for pool 17, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool16_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool16_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool16_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool16_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Pointer FIFO for pool 16, 256B underflowed. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_stripe_underflow_95_64_r_t
 *
 * Implemented by: 
 *      stripe0_underflow_95_64
 *      stripe1_underflow_95_64
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      fifo_underflow_pool23_64kb                :  1;
     unsigned      fifo_underflow_pool23_16kb                :  1;
     unsigned      fifo_underflow_pool23_2kb                 :  1;
     unsigned      fifo_underflow_pool23_256b                :  1;
     unsigned      fifo_underflow_pool22_64kb                :  1;
     unsigned      fifo_underflow_pool22_16kb                :  1;
     unsigned      fifo_underflow_pool22_2kb                 :  1;
     unsigned      fifo_underflow_pool22_256b                :  1;
     unsigned      fifo_underflow_pool21_64kb                :  1;
     unsigned      fifo_underflow_pool21_16kb                :  1;
     unsigned      fifo_underflow_pool21_2kb                 :  1;
     unsigned      fifo_underflow_pool21_256b                :  1;
     unsigned      fifo_underflow_pool20_64kb                :  1;
     unsigned      fifo_underflow_pool20_16kb                :  1;
     unsigned      fifo_underflow_pool20_2kb                 :  1;
     unsigned      fifo_underflow_pool20_256b                :  1;
     unsigned      fifo_underflow_pool19_64kb                :  1;
     unsigned      fifo_underflow_pool19_16kb                :  1;
     unsigned      fifo_underflow_pool19_2kb                 :  1;
     unsigned      fifo_underflow_pool19_256b                :  1;
     unsigned      fifo_underflow_pool18_64kb                :  1;
     unsigned      fifo_underflow_pool18_16kb                :  1;
     unsigned      fifo_underflow_pool18_2kb                 :  1;
     unsigned      fifo_underflow_pool18_256b                :  1;
     unsigned      fifo_underflow_pool17_64kb                :  1;
     unsigned      fifo_underflow_pool17_16kb                :  1;
     unsigned      fifo_underflow_pool17_2kb                 :  1;
     unsigned      fifo_underflow_pool17_256b                :  1;
     unsigned      fifo_underflow_pool16_64kb                :  1;
     unsigned      fifo_underflow_pool16_16kb                :  1;
     unsigned      fifo_underflow_pool16_2kb                 :  1;
     unsigned      fifo_underflow_pool16_256b                :  1;
#else    /* Little Endian */
     unsigned      fifo_underflow_pool16_256b                :  1;
     unsigned      fifo_underflow_pool16_2kb                 :  1;
     unsigned      fifo_underflow_pool16_16kb                :  1;
     unsigned      fifo_underflow_pool16_64kb                :  1;
     unsigned      fifo_underflow_pool17_256b                :  1;
     unsigned      fifo_underflow_pool17_2kb                 :  1;
     unsigned      fifo_underflow_pool17_16kb                :  1;
     unsigned      fifo_underflow_pool17_64kb                :  1;
     unsigned      fifo_underflow_pool18_256b                :  1;
     unsigned      fifo_underflow_pool18_2kb                 :  1;
     unsigned      fifo_underflow_pool18_16kb                :  1;
     unsigned      fifo_underflow_pool18_64kb                :  1;
     unsigned      fifo_underflow_pool19_256b                :  1;
     unsigned      fifo_underflow_pool19_2kb                 :  1;
     unsigned      fifo_underflow_pool19_16kb                :  1;
     unsigned      fifo_underflow_pool19_64kb                :  1;
     unsigned      fifo_underflow_pool20_256b                :  1;
     unsigned      fifo_underflow_pool20_2kb                 :  1;
     unsigned      fifo_underflow_pool20_16kb                :  1;
     unsigned      fifo_underflow_pool20_64kb                :  1;
     unsigned      fifo_underflow_pool21_256b                :  1;
     unsigned      fifo_underflow_pool21_2kb                 :  1;
     unsigned      fifo_underflow_pool21_16kb                :  1;
     unsigned      fifo_underflow_pool21_64kb                :  1;
     unsigned      fifo_underflow_pool22_256b                :  1;
     unsigned      fifo_underflow_pool22_2kb                 :  1;
     unsigned      fifo_underflow_pool22_16kb                :  1;
     unsigned      fifo_underflow_pool22_64kb                :  1;
     unsigned      fifo_underflow_pool23_256b                :  1;
     unsigned      fifo_underflow_pool23_2kb                 :  1;
     unsigned      fifo_underflow_pool23_16kb                :  1;
     unsigned      fifo_underflow_pool23_64kb                :  1;
#endif
} ncp_nca_mtp_stripe_underflow_95_64_r_t;

/*! @struct ncp_nca_mtp_stripe_underflow_63_32_r_t
 *  @brief Pointer FIFO Overflow Register
 *  @details This register holds the read-only pointer FIFO underflow status.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_stripe_underflow_63_32_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool15_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool15_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool15_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool15_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Pointer FIFO for pool 15, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool14_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool14_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool14_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool14_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Pointer FIFO for pool 14, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool13_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool13_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool13_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool13_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Pointer FIFO for pool 13, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool12_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool12_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool12_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool12_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Pointer FIFO for pool 12, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool11_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool11_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool11_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool11_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Pointer FIFO for pool 11, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool10_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool10_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool10_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool10_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Pointer FIFO for pool 10, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool9_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool9_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool9_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool9_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Pointer FIFO for pool 9, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool8_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool8_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool8_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool8_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Pointer FIFO for pool 8, 256B underflowed. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_stripe_underflow_63_32_r_t
 *
 * Implemented by: 
 *      stripe0_underflow_63_32
 *      stripe1_underflow_63_32
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      fifo_underflow_pool15_64kb                :  1;
     unsigned      fifo_underflow_pool15_16kb                :  1;
     unsigned      fifo_underflow_pool15_2kb                 :  1;
     unsigned      fifo_underflow_pool15_256b                :  1;
     unsigned      fifo_underflow_pool14_64kb                :  1;
     unsigned      fifo_underflow_pool14_16kb                :  1;
     unsigned      fifo_underflow_pool14_2kb                 :  1;
     unsigned      fifo_underflow_pool14_256b                :  1;
     unsigned      fifo_underflow_pool13_64kb                :  1;
     unsigned      fifo_underflow_pool13_16kb                :  1;
     unsigned      fifo_underflow_pool13_2kb                 :  1;
     unsigned      fifo_underflow_pool13_256b                :  1;
     unsigned      fifo_underflow_pool12_64kb                :  1;
     unsigned      fifo_underflow_pool12_16kb                :  1;
     unsigned      fifo_underflow_pool12_2kb                 :  1;
     unsigned      fifo_underflow_pool12_256b                :  1;
     unsigned      fifo_underflow_pool11_64kb                :  1;
     unsigned      fifo_underflow_pool11_16kb                :  1;
     unsigned      fifo_underflow_pool11_2kb                 :  1;
     unsigned      fifo_underflow_pool11_256b                :  1;
     unsigned      fifo_underflow_pool10_64kb                :  1;
     unsigned      fifo_underflow_pool10_16kb                :  1;
     unsigned      fifo_underflow_pool10_2kb                 :  1;
     unsigned      fifo_underflow_pool10_256b                :  1;
     unsigned      fifo_underflow_pool9_64kb                 :  1;
     unsigned      fifo_underflow_pool9_16kb                 :  1;
     unsigned      fifo_underflow_pool9_2kb                  :  1;
     unsigned      fifo_underflow_pool9_256b                 :  1;
     unsigned      fifo_underflow_pool8_64kb                 :  1;
     unsigned      fifo_underflow_pool8_16kb                 :  1;
     unsigned      fifo_underflow_pool8_2kb                  :  1;
     unsigned      fifo_underflow_pool8_256b                 :  1;
#else    /* Little Endian */
     unsigned      fifo_underflow_pool8_256b                 :  1;
     unsigned      fifo_underflow_pool8_2kb                  :  1;
     unsigned      fifo_underflow_pool8_16kb                 :  1;
     unsigned      fifo_underflow_pool8_64kb                 :  1;
     unsigned      fifo_underflow_pool9_256b                 :  1;
     unsigned      fifo_underflow_pool9_2kb                  :  1;
     unsigned      fifo_underflow_pool9_16kb                 :  1;
     unsigned      fifo_underflow_pool9_64kb                 :  1;
     unsigned      fifo_underflow_pool10_256b                :  1;
     unsigned      fifo_underflow_pool10_2kb                 :  1;
     unsigned      fifo_underflow_pool10_16kb                :  1;
     unsigned      fifo_underflow_pool10_64kb                :  1;
     unsigned      fifo_underflow_pool11_256b                :  1;
     unsigned      fifo_underflow_pool11_2kb                 :  1;
     unsigned      fifo_underflow_pool11_16kb                :  1;
     unsigned      fifo_underflow_pool11_64kb                :  1;
     unsigned      fifo_underflow_pool12_256b                :  1;
     unsigned      fifo_underflow_pool12_2kb                 :  1;
     unsigned      fifo_underflow_pool12_16kb                :  1;
     unsigned      fifo_underflow_pool12_64kb                :  1;
     unsigned      fifo_underflow_pool13_256b                :  1;
     unsigned      fifo_underflow_pool13_2kb                 :  1;
     unsigned      fifo_underflow_pool13_16kb                :  1;
     unsigned      fifo_underflow_pool13_64kb                :  1;
     unsigned      fifo_underflow_pool14_256b                :  1;
     unsigned      fifo_underflow_pool14_2kb                 :  1;
     unsigned      fifo_underflow_pool14_16kb                :  1;
     unsigned      fifo_underflow_pool14_64kb                :  1;
     unsigned      fifo_underflow_pool15_256b                :  1;
     unsigned      fifo_underflow_pool15_2kb                 :  1;
     unsigned      fifo_underflow_pool15_16kb                :  1;
     unsigned      fifo_underflow_pool15_64kb                :  1;
#endif
} ncp_nca_mtp_stripe_underflow_63_32_r_t;

/*! @struct ncp_nca_mtp_stripe_underflow_31_0_r_t
 *  @brief Pointer FIFO Overflow Register
 *  @details This register holds the read-only pointer FIFO underflow status.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_stripe_underflow_31_0_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool7_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool7_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool7_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool7_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Pointer FIFO for pool 7, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool6_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool6_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool6_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool6_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> Pointer FIFO for pool 6, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool5_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool5_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool5_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool5_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> Pointer FIFO for pool 5, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool4_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool4_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool4_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool4_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Pointer FIFO for pool 4, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool3_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool3_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool3_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool3_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Pointer FIFO for pool 3, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool2_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool2_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool2_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool2_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Pointer FIFO for pool 2, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool1_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool1_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool1_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool1_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> Pointer FIFO for pool 1, 256B underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool0_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 64KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool0_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 16KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool0_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 2KB underflowed. </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_underflow_pool0_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Pointer FIFO for pool 0, 256B underflowed. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_stripe_underflow_31_0_r_t
 *
 * Implemented by: 
 *      stripe0_underflow_31_0
 *      stripe1_underflow_31_0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      fifo_underflow_pool7_64kb                 :  1;
     unsigned      fifo_underflow_pool7_16kb                 :  1;
     unsigned      fifo_underflow_pool7_2kb                  :  1;
     unsigned      fifo_underflow_pool7_256b                 :  1;
     unsigned      fifo_underflow_pool6_64kb                 :  1;
     unsigned      fifo_underflow_pool6_16kb                 :  1;
     unsigned      fifo_underflow_pool6_2kb                  :  1;
     unsigned      fifo_underflow_pool6_256b                 :  1;
     unsigned      fifo_underflow_pool5_64kb                 :  1;
     unsigned      fifo_underflow_pool5_16kb                 :  1;
     unsigned      fifo_underflow_pool5_2kb                  :  1;
     unsigned      fifo_underflow_pool5_256b                 :  1;
     unsigned      fifo_underflow_pool4_64kb                 :  1;
     unsigned      fifo_underflow_pool4_16kb                 :  1;
     unsigned      fifo_underflow_pool4_2kb                  :  1;
     unsigned      fifo_underflow_pool4_256b                 :  1;
     unsigned      fifo_underflow_pool3_64kb                 :  1;
     unsigned      fifo_underflow_pool3_16kb                 :  1;
     unsigned      fifo_underflow_pool3_2kb                  :  1;
     unsigned      fifo_underflow_pool3_256b                 :  1;
     unsigned      fifo_underflow_pool2_64kb                 :  1;
     unsigned      fifo_underflow_pool2_16kb                 :  1;
     unsigned      fifo_underflow_pool2_2kb                  :  1;
     unsigned      fifo_underflow_pool2_256b                 :  1;
     unsigned      fifo_underflow_pool1_64kb                 :  1;
     unsigned      fifo_underflow_pool1_16kb                 :  1;
     unsigned      fifo_underflow_pool1_2kb                  :  1;
     unsigned      fifo_underflow_pool1_256b                 :  1;
     unsigned      fifo_underflow_pool0_64kb                 :  1;
     unsigned      fifo_underflow_pool0_16kb                 :  1;
     unsigned      fifo_underflow_pool0_2kb                  :  1;
     unsigned      fifo_underflow_pool0_256b                 :  1;
#else    /* Little Endian */
     unsigned      fifo_underflow_pool0_256b                 :  1;
     unsigned      fifo_underflow_pool0_2kb                  :  1;
     unsigned      fifo_underflow_pool0_16kb                 :  1;
     unsigned      fifo_underflow_pool0_64kb                 :  1;
     unsigned      fifo_underflow_pool1_256b                 :  1;
     unsigned      fifo_underflow_pool1_2kb                  :  1;
     unsigned      fifo_underflow_pool1_16kb                 :  1;
     unsigned      fifo_underflow_pool1_64kb                 :  1;
     unsigned      fifo_underflow_pool2_256b                 :  1;
     unsigned      fifo_underflow_pool2_2kb                  :  1;
     unsigned      fifo_underflow_pool2_16kb                 :  1;
     unsigned      fifo_underflow_pool2_64kb                 :  1;
     unsigned      fifo_underflow_pool3_256b                 :  1;
     unsigned      fifo_underflow_pool3_2kb                  :  1;
     unsigned      fifo_underflow_pool3_16kb                 :  1;
     unsigned      fifo_underflow_pool3_64kb                 :  1;
     unsigned      fifo_underflow_pool4_256b                 :  1;
     unsigned      fifo_underflow_pool4_2kb                  :  1;
     unsigned      fifo_underflow_pool4_16kb                 :  1;
     unsigned      fifo_underflow_pool4_64kb                 :  1;
     unsigned      fifo_underflow_pool5_256b                 :  1;
     unsigned      fifo_underflow_pool5_2kb                  :  1;
     unsigned      fifo_underflow_pool5_16kb                 :  1;
     unsigned      fifo_underflow_pool5_64kb                 :  1;
     unsigned      fifo_underflow_pool6_256b                 :  1;
     unsigned      fifo_underflow_pool6_2kb                  :  1;
     unsigned      fifo_underflow_pool6_16kb                 :  1;
     unsigned      fifo_underflow_pool6_64kb                 :  1;
     unsigned      fifo_underflow_pool7_256b                 :  1;
     unsigned      fifo_underflow_pool7_2kb                  :  1;
     unsigned      fifo_underflow_pool7_16kb                 :  1;
     unsigned      fifo_underflow_pool7_64kb                 :  1;
#endif
} ncp_nca_mtp_stripe_underflow_31_0_r_t;

/*! @struct ncp_nca_mtp_hysteresis_r_t
 *  @brief Prefetch Buffer Hysteresis RAM
 *  @details Holds the number of pointers (-1) to fetch from the MCIP when a pointer FIFO's depth drops to the low watermark for each of
		the individual pointer FIFOs, where the offset from this base address divided by 4 maps to the entry in the RAM for
		the FIFO associated with {pool[4:0], size[1:0]}.  This structure is initialized to by the hardware to hwm-lwm-1 during
		the initial pointer prefetch initiated by setting the NCA's global prefetch init bit.  Once the prefetch has completed,
		which can be determined from the NCA's global prefetch complete status bit, software can choose to overwrite the
		hardware initialized values before pointer allocation requests are initiated.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_hysteresis_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 21 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param num_ptrs_m1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Number of pointers to fetch minus 1. </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_hysteresis_r_t
 *
 * Implemented by: 
 *      hysteresis_ram
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 21;
     unsigned      num_ptrs_m1                               : 11;
#else    /* Little Endian */
     unsigned      num_ptrs_m1                               : 11;
     unsigned      reserved0                                 : 21;
#endif
} ncp_nca_mtp_hysteresis_r_t;

/*! @struct ncp_nca_mtp_syndrome_r_t
 *  @brief Error Syndrome Register
 *  @details On the first occurrence of an MQG counter overflow or underflow, this sticky register captures the quoata group, pool,
		 and size associated with the error.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_syndrome_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 16 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param overflow_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> If set, the first error was a counter overflow for
 *        64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param overflow_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> If set, the first error was a counter overflow for
 *        16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param overflow_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> If set, the first error was a counter overflow for
 *        2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param overflow_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> If set, the first error was a counter overflow for
 *        256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param underflow_64kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> If set, the first error was a counter underflow for
 *        64KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param underflow_16kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> If set, the first error was a counter underflow for
 *        16KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param underflow_2kb </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> If set, the first error was a counter underflow for
 *        2KB blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param underflow_256b </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> If set, the first error was a counter underflow for
 *        256B blocks.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg </td>
 *     <td width="20%" align="center"> 5 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Quota group associated with first counter overflow/underflow
 *        error.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pool </td>
 *     <td width="20%" align="center"> 3 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> Pool minus 2 associated with first counter overflow/underflow
 *        error.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_syndrome_r_t
 *
 * Implemented by: 
 *      error_syndrome
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 16;
     unsigned      overflow_64kb                             :  1;
     unsigned      overflow_16kb                             :  1;
     unsigned      overflow_2kb                              :  1;
     unsigned      overflow_256b                             :  1;
     unsigned      underflow_64kb                            :  1;
     unsigned      underflow_16kb                            :  1;
     unsigned      underflow_2kb                             :  1;
     unsigned      underflow_256b                            :  1;
     unsigned      mqg                                       :  5;
     unsigned      pool                                      :  3;
#else    /* Little Endian */
     unsigned      pool                                      :  3;
     unsigned      mqg                                       :  5;
     unsigned      underflow_256b                            :  1;
     unsigned      underflow_2kb                             :  1;
     unsigned      underflow_16kb                            :  1;
     unsigned      underflow_64kb                            :  1;
     unsigned      overflow_256b                             :  1;
     unsigned      overflow_2kb                              :  1;
     unsigned      overflow_16kb                             :  1;
     unsigned      overflow_64kb                             :  1;
     unsigned      reserved0                                 : 16;
#endif
} ncp_nca_mtp_syndrome_r_t;

/*! @struct ncp_nca_mtp_interrupt0_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt0_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 exceeded its configured treshold. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 exceeded its configured treshold. Status </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt0_status_r_t
 *
 * Implemented by: 
 *      status0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_exceeded                            :  1;
     unsigned      mqg30_exceeded                            :  1;
     unsigned      mqg29_exceeded                            :  1;
     unsigned      mqg28_exceeded                            :  1;
     unsigned      mqg27_exceeded                            :  1;
     unsigned      mqg26_exceeded                            :  1;
     unsigned      mqg25_exceeded                            :  1;
     unsigned      mqg24_exceeded                            :  1;
     unsigned      mqg23_exceeded                            :  1;
     unsigned      mqg22_exceeded                            :  1;
     unsigned      mqg21_exceeded                            :  1;
     unsigned      mqg20_exceeded                            :  1;
     unsigned      mqg19_exceeded                            :  1;
     unsigned      mqg18_exceeded                            :  1;
     unsigned      mqg17_exceeded                            :  1;
     unsigned      mqg16_exceeded                            :  1;
     unsigned      mqg15_exceeded                            :  1;
     unsigned      mqg14_exceeded                            :  1;
     unsigned      mqg13_exceeded                            :  1;
     unsigned      mqg12_exceeded                            :  1;
     unsigned      mqg11_exceeded                            :  1;
     unsigned      mqg10_exceeded                            :  1;
     unsigned      mqg9_exceeded                             :  1;
     unsigned      mqg8_exceeded                             :  1;
     unsigned      mqg7_exceeded                             :  1;
     unsigned      mqg6_exceeded                             :  1;
     unsigned      mqg5_exceeded                             :  1;
     unsigned      mqg4_exceeded                             :  1;
     unsigned      mqg3_exceeded                             :  1;
     unsigned      mqg2_exceeded                             :  1;
     unsigned      mqg1_exceeded                             :  1;
     unsigned      mqg0_exceeded                             :  1;
#else    /* Little Endian */
     unsigned      mqg0_exceeded                             :  1;
     unsigned      mqg1_exceeded                             :  1;
     unsigned      mqg2_exceeded                             :  1;
     unsigned      mqg3_exceeded                             :  1;
     unsigned      mqg4_exceeded                             :  1;
     unsigned      mqg5_exceeded                             :  1;
     unsigned      mqg6_exceeded                             :  1;
     unsigned      mqg7_exceeded                             :  1;
     unsigned      mqg8_exceeded                             :  1;
     unsigned      mqg9_exceeded                             :  1;
     unsigned      mqg10_exceeded                            :  1;
     unsigned      mqg11_exceeded                            :  1;
     unsigned      mqg12_exceeded                            :  1;
     unsigned      mqg13_exceeded                            :  1;
     unsigned      mqg14_exceeded                            :  1;
     unsigned      mqg15_exceeded                            :  1;
     unsigned      mqg16_exceeded                            :  1;
     unsigned      mqg17_exceeded                            :  1;
     unsigned      mqg18_exceeded                            :  1;
     unsigned      mqg19_exceeded                            :  1;
     unsigned      mqg20_exceeded                            :  1;
     unsigned      mqg21_exceeded                            :  1;
     unsigned      mqg22_exceeded                            :  1;
     unsigned      mqg23_exceeded                            :  1;
     unsigned      mqg24_exceeded                            :  1;
     unsigned      mqg25_exceeded                            :  1;
     unsigned      mqg26_exceeded                            :  1;
     unsigned      mqg27_exceeded                            :  1;
     unsigned      mqg28_exceeded                            :  1;
     unsigned      mqg29_exceeded                            :  1;
     unsigned      mqg30_exceeded                            :  1;
     unsigned      mqg31_exceeded                            :  1;
#endif
} ncp_nca_mtp_interrupt0_status_r_t;

/*! @struct ncp_nca_mtp_interrupt1_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt1_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 underflowed by more than a counter's worth
 *        of blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 underflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt1_status_r_t
 *
 * Implemented by: 
 *      status1
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_underflow                           :  1;
     unsigned      mqg30_underflow                           :  1;
     unsigned      mqg29_underflow                           :  1;
     unsigned      mqg28_underflow                           :  1;
     unsigned      mqg27_underflow                           :  1;
     unsigned      mqg26_underflow                           :  1;
     unsigned      mqg25_underflow                           :  1;
     unsigned      mqg24_underflow                           :  1;
     unsigned      mqg23_underflow                           :  1;
     unsigned      mqg22_underflow                           :  1;
     unsigned      mqg21_underflow                           :  1;
     unsigned      mqg20_underflow                           :  1;
     unsigned      mqg19_underflow                           :  1;
     unsigned      mqg18_underflow                           :  1;
     unsigned      mqg17_underflow                           :  1;
     unsigned      mqg16_underflow                           :  1;
     unsigned      mqg15_underflow                           :  1;
     unsigned      mqg14_underflow                           :  1;
     unsigned      mqg13_underflow                           :  1;
     unsigned      mqg12_underflow                           :  1;
     unsigned      mqg11_underflow                           :  1;
     unsigned      mqg10_underflow                           :  1;
     unsigned      mqg9_underflow                            :  1;
     unsigned      mqg8_underflow                            :  1;
     unsigned      mqg7_underflow                            :  1;
     unsigned      mqg6_underflow                            :  1;
     unsigned      mqg5_underflow                            :  1;
     unsigned      mqg4_underflow                            :  1;
     unsigned      mqg3_underflow                            :  1;
     unsigned      mqg2_underflow                            :  1;
     unsigned      mqg1_underflow                            :  1;
     unsigned      mqg0_underflow                            :  1;
#else    /* Little Endian */
     unsigned      mqg0_underflow                            :  1;
     unsigned      mqg1_underflow                            :  1;
     unsigned      mqg2_underflow                            :  1;
     unsigned      mqg3_underflow                            :  1;
     unsigned      mqg4_underflow                            :  1;
     unsigned      mqg5_underflow                            :  1;
     unsigned      mqg6_underflow                            :  1;
     unsigned      mqg7_underflow                            :  1;
     unsigned      mqg8_underflow                            :  1;
     unsigned      mqg9_underflow                            :  1;
     unsigned      mqg10_underflow                           :  1;
     unsigned      mqg11_underflow                           :  1;
     unsigned      mqg12_underflow                           :  1;
     unsigned      mqg13_underflow                           :  1;
     unsigned      mqg14_underflow                           :  1;
     unsigned      mqg15_underflow                           :  1;
     unsigned      mqg16_underflow                           :  1;
     unsigned      mqg17_underflow                           :  1;
     unsigned      mqg18_underflow                           :  1;
     unsigned      mqg19_underflow                           :  1;
     unsigned      mqg20_underflow                           :  1;
     unsigned      mqg21_underflow                           :  1;
     unsigned      mqg22_underflow                           :  1;
     unsigned      mqg23_underflow                           :  1;
     unsigned      mqg24_underflow                           :  1;
     unsigned      mqg25_underflow                           :  1;
     unsigned      mqg26_underflow                           :  1;
     unsigned      mqg27_underflow                           :  1;
     unsigned      mqg28_underflow                           :  1;
     unsigned      mqg29_underflow                           :  1;
     unsigned      mqg30_underflow                           :  1;
     unsigned      mqg31_underflow                           :  1;
#endif
} ncp_nca_mtp_interrupt1_status_r_t;

/*! @struct ncp_nca_mtp_interrupt2_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt2_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 overflowed by more than a counter's worth of
 *        blocks. Status
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt2_status_r_t
 *
 * Implemented by: 
 *      status2
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_overflow                            :  1;
     unsigned      mqg30_overflow                            :  1;
     unsigned      mqg29_overflow                            :  1;
     unsigned      mqg28_overflow                            :  1;
     unsigned      mqg27_overflow                            :  1;
     unsigned      mqg26_overflow                            :  1;
     unsigned      mqg25_overflow                            :  1;
     unsigned      mqg24_overflow                            :  1;
     unsigned      mqg23_overflow                            :  1;
     unsigned      mqg22_overflow                            :  1;
     unsigned      mqg21_overflow                            :  1;
     unsigned      mqg20_overflow                            :  1;
     unsigned      mqg19_overflow                            :  1;
     unsigned      mqg18_overflow                            :  1;
     unsigned      mqg17_overflow                            :  1;
     unsigned      mqg16_overflow                            :  1;
     unsigned      mqg15_overflow                            :  1;
     unsigned      mqg14_overflow                            :  1;
     unsigned      mqg13_overflow                            :  1;
     unsigned      mqg12_overflow                            :  1;
     unsigned      mqg11_overflow                            :  1;
     unsigned      mqg10_overflow                            :  1;
     unsigned      mqg9_overflow                             :  1;
     unsigned      mqg8_overflow                             :  1;
     unsigned      mqg7_overflow                             :  1;
     unsigned      mqg6_overflow                             :  1;
     unsigned      mqg5_overflow                             :  1;
     unsigned      mqg4_overflow                             :  1;
     unsigned      mqg3_overflow                             :  1;
     unsigned      mqg2_overflow                             :  1;
     unsigned      mqg1_overflow                             :  1;
     unsigned      mqg0_overflow                             :  1;
#else    /* Little Endian */
     unsigned      mqg0_overflow                             :  1;
     unsigned      mqg1_overflow                             :  1;
     unsigned      mqg2_overflow                             :  1;
     unsigned      mqg3_overflow                             :  1;
     unsigned      mqg4_overflow                             :  1;
     unsigned      mqg5_overflow                             :  1;
     unsigned      mqg6_overflow                             :  1;
     unsigned      mqg7_overflow                             :  1;
     unsigned      mqg8_overflow                             :  1;
     unsigned      mqg9_overflow                             :  1;
     unsigned      mqg10_overflow                            :  1;
     unsigned      mqg11_overflow                            :  1;
     unsigned      mqg12_overflow                            :  1;
     unsigned      mqg13_overflow                            :  1;
     unsigned      mqg14_overflow                            :  1;
     unsigned      mqg15_overflow                            :  1;
     unsigned      mqg16_overflow                            :  1;
     unsigned      mqg17_overflow                            :  1;
     unsigned      mqg18_overflow                            :  1;
     unsigned      mqg19_overflow                            :  1;
     unsigned      mqg20_overflow                            :  1;
     unsigned      mqg21_overflow                            :  1;
     unsigned      mqg22_overflow                            :  1;
     unsigned      mqg23_overflow                            :  1;
     unsigned      mqg24_overflow                            :  1;
     unsigned      mqg25_overflow                            :  1;
     unsigned      mqg26_overflow                            :  1;
     unsigned      mqg27_overflow                            :  1;
     unsigned      mqg28_overflow                            :  1;
     unsigned      mqg29_overflow                            :  1;
     unsigned      mqg30_overflow                            :  1;
     unsigned      mqg31_overflow                            :  1;
#endif
} ncp_nca_mtp_interrupt2_status_r_t;

/*! @struct ncp_nca_mtp_interrupt3_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt3_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MTP DMM dealloc request was to an unconfigured pool/size.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_core_berr </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Received non-OKAY response code on MPCQ result write
 *        response interface. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_core_berr </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Received non-OKAY response code on OTP result write
 *        response interface. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> OTP pointer adjust request had a protocol error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> OTP pointer adjust request was not for a shared vpp
 *        pool. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MPCQ allocate request protocol error Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_par_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MPCQ allocate request parity error Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_ptr_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MPCQ allocate request was not for 2, 4, or 8 pointers.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_id_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MPCQ allocate request src_id (NCAP) was out of range
 *        or dst_id was not 0 (NCA). Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_pgit_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MPCQ allocate request PGIT was out of range. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MPCQ allocate request was not for a shared vpp pool.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MPCQ allocate request lookup table was not valid for
 *        provided src_id and PGIT. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> ITP allocate request had a protocol error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> ITP allocate request was not for a shared vpp or cpu
 *        pool. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> ITP pointer adjust request had a protocol error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> ITP pointer adjust request was not for a shared vpp
 *        pool. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wreq_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> DMM deallocate request had a protocol error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> DMM deallocate request had an invalid pool (pool not
 *        2-7). Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wlu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> DMM deallocate request lookup table was not valid
 *        for provided PGIT. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rreq_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> DMM allocate request had a protocol error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> DMM allocate request was not for a shared vpp pool.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rlu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> DMM allocate request lookup table was not valid for
 *        provided PGIT. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_synd_status_int </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Syndrome interrupt Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_smon_int </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> SMON interrupt Status </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt3_status_r_t
 *
 * Implemented by: 
 *      status3
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      dmm_dealloc_fifo_notvalid_err             :  1;
     unsigned      dmm_dealloc_ac7_err                       :  1;
     unsigned      dmm_dealloc_ac6_err                       :  1;
     unsigned      dmm_dealloc_ac5_err                       :  1;
     unsigned      dmm_dealloc_ac4_err                       :  1;
     unsigned      dmm_dealloc_ac3_err                       :  1;
     unsigned      dmm_dealloc_ac2_err                       :  1;
     unsigned      dmm_dealloc_ac1_err                       :  1;
     unsigned      dmm_dealloc_ac0_err                       :  1;
     unsigned      ncav3_mpcq_res_core_berr                  :  1;
     unsigned      mtp_otp_res_core_berr                     :  1;
     unsigned      otp_req_error                             :  1;
     unsigned      otp_pool_error                            :  1;
     unsigned      mpcq_req_error                            :  1;
     unsigned      mpcq_par_error                            :  1;
     unsigned      mpcq_ptr_error                            :  1;
     unsigned      mpcq_id_error                             :  1;
     unsigned      mpcq_pgit_error                           :  1;
     unsigned      mpcq_pool_error                           :  1;
     unsigned      mpcq_lu_error                             :  1;
     unsigned      itp_req_error                             :  1;
     unsigned      itp_pool_error                            :  1;
     unsigned      itp_tx_req_error                          :  1;
     unsigned      itp_tx_pool_error                         :  1;
     unsigned      dmm_wreq_error                            :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_wlu_error                             :  1;
     unsigned      dmm_rreq_error                            :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_rlu_error                             :  1;
     unsigned      cfg_synd_status_int                       :  1;
     unsigned      cfg_smon_int                              :  1;
#else    /* Little Endian */
     unsigned      cfg_smon_int                              :  1;
     unsigned      cfg_synd_status_int                       :  1;
     unsigned      dmm_rlu_error                             :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_rreq_error                            :  1;
     unsigned      dmm_wlu_error                             :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_wreq_error                            :  1;
     unsigned      itp_tx_pool_error                         :  1;
     unsigned      itp_tx_req_error                          :  1;
     unsigned      itp_pool_error                            :  1;
     unsigned      itp_req_error                             :  1;
     unsigned      mpcq_lu_error                             :  1;
     unsigned      mpcq_pool_error                           :  1;
     unsigned      mpcq_pgit_error                           :  1;
     unsigned      mpcq_id_error                             :  1;
     unsigned      mpcq_ptr_error                            :  1;
     unsigned      mpcq_par_error                            :  1;
     unsigned      mpcq_req_error                            :  1;
     unsigned      otp_pool_error                            :  1;
     unsigned      otp_req_error                             :  1;
     unsigned      mtp_otp_res_core_berr                     :  1;
     unsigned      ncav3_mpcq_res_core_berr                  :  1;
     unsigned      dmm_dealloc_ac0_err                       :  1;
     unsigned      dmm_dealloc_ac1_err                       :  1;
     unsigned      dmm_dealloc_ac2_err                       :  1;
     unsigned      dmm_dealloc_ac3_err                       :  1;
     unsigned      dmm_dealloc_ac4_err                       :  1;
     unsigned      dmm_dealloc_ac5_err                       :  1;
     unsigned      dmm_dealloc_ac6_err                       :  1;
     unsigned      dmm_dealloc_ac7_err                       :  1;
     unsigned      dmm_dealloc_fifo_notvalid_err             :  1;
#endif
} ncp_nca_mtp_interrupt3_status_r_t;

/*! @struct ncp_nca_mtp_interrupt4_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt4_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MTP DMM allocate request was to an unconfigured pool/size.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MTP ITP allocate request was to an unconfigured pool/size.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP MPCQ allocate request was to an unconfigured pool/size.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP ITP transmit request was to an unconfigured pool/size.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP OTP command request was to an unconfigured pool/size.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> DMM allocate request was non-secure and non-secure
 *        accesses are not enabled. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> DMM deallocate request was non-secure and non-secure
 *        accesses are not enabled. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        SB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        SB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused150 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused149 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory SB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        SB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory SB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory SB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory SB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory SB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory SB
 *        ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory SB ECC
 *        error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory SB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory SB ECC error. Status </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt4_status_r_t
 *
 * Implemented by: 
 *      status4
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      dmm_fifo_notvalid_err                     :  1;
     unsigned      itp_fifo_notvalid_err                     :  1;
     unsigned      mpcq_fifo_notvalid_err                    :  1;
     unsigned      itp_tx_fifo_notvalid_err                  :  1;
     unsigned      otp_fifo_notvalid_err                     :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      pf_dmm_ac1_sbe_error                      :  1;
     unsigned      pf_dmm_ac0_sbe_error                      :  1;
     unsigned      unused150                                 :  1;
     unsigned      unused149                                 :  1;
     unsigned      pf_mpcq_ac1_sbe_error                     :  1;
     unsigned      pf_mpcq_ac0_sbe_error                     :  1;
     unsigned      pf_stripe1_cfg_sbe_error                  :  1;
     unsigned      pf_stripe0_cfg_sbe_error                  :  1;
     unsigned      pf_stripe1_state_sbe_error                :  1;
     unsigned      pf_stripe0_state_sbe_error                :  1;
     unsigned      pf_stripe1_fifo_sbe_error                 :  1;
     unsigned      pf_stripe0_fifo_sbe_error                 :  1;
     unsigned      pf_hyst_sbe_error                         :  1;
     unsigned      dmm_dealloc_ac1_sbe_error                 :  1;
     unsigned      dmm_dealloc_ac0_sbe_error                 :  1;
     unsigned      dmm_lu_sbe_error                          :  1;
     unsigned      mpcq_lu_sbe_error                         :  1;
     unsigned      mqg_64k_thresh_sbe_error                  :  1;
     unsigned      mqg_16k_thresh_sbe_error                  :  1;
     unsigned      mqg_2kb_thresh_sbe_error                  :  1;
     unsigned      mqg_256_thresh_sbe_error                  :  1;
     unsigned      mqg_64k_cnt_sbe_error                     :  1;
     unsigned      mqg_16k_cnt_sbe_error                     :  1;
     unsigned      mqg_2kb_cnt_sbe_error                     :  1;
     unsigned      mqg_256_cnt_sbe_error                     :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_sbe_error                     :  1;
     unsigned      mqg_2kb_cnt_sbe_error                     :  1;
     unsigned      mqg_16k_cnt_sbe_error                     :  1;
     unsigned      mqg_64k_cnt_sbe_error                     :  1;
     unsigned      mqg_256_thresh_sbe_error                  :  1;
     unsigned      mqg_2kb_thresh_sbe_error                  :  1;
     unsigned      mqg_16k_thresh_sbe_error                  :  1;
     unsigned      mqg_64k_thresh_sbe_error                  :  1;
     unsigned      mpcq_lu_sbe_error                         :  1;
     unsigned      dmm_lu_sbe_error                          :  1;
     unsigned      dmm_dealloc_ac0_sbe_error                 :  1;
     unsigned      dmm_dealloc_ac1_sbe_error                 :  1;
     unsigned      pf_hyst_sbe_error                         :  1;
     unsigned      pf_stripe0_fifo_sbe_error                 :  1;
     unsigned      pf_stripe1_fifo_sbe_error                 :  1;
     unsigned      pf_stripe0_state_sbe_error                :  1;
     unsigned      pf_stripe1_state_sbe_error                :  1;
     unsigned      pf_stripe0_cfg_sbe_error                  :  1;
     unsigned      pf_stripe1_cfg_sbe_error                  :  1;
     unsigned      pf_mpcq_ac0_sbe_error                     :  1;
     unsigned      pf_mpcq_ac1_sbe_error                     :  1;
     unsigned      unused149                                 :  1;
     unsigned      unused150                                 :  1;
     unsigned      pf_dmm_ac0_sbe_error                      :  1;
     unsigned      pf_dmm_ac1_sbe_error                      :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      otp_fifo_notvalid_err                     :  1;
     unsigned      itp_tx_fifo_notvalid_err                  :  1;
     unsigned      mpcq_fifo_notvalid_err                    :  1;
     unsigned      itp_fifo_notvalid_err                     :  1;
     unsigned      dmm_fifo_notvalid_err                     :  1;
#endif
} ncp_nca_mtp_interrupt4_status_r_t;

/*! @struct ncp_nca_mtp_interrupt5_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt5_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param unused191 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused190 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused189 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused188 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused187 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused186 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused185 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        MB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        MB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused182 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused181 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory MB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        MB ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory MB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory MB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory MB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory MB ECC error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory MB
 *        ECC error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory MB ECC
 *        error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory MB ECC error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory MB ECC error. Status </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt5_status_r_t
 *
 * Implemented by: 
 *      status5
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      unused191                                 :  1;
     unsigned      unused190                                 :  1;
     unsigned      unused189                                 :  1;
     unsigned      unused188                                 :  1;
     unsigned      unused187                                 :  1;
     unsigned      unused186                                 :  1;
     unsigned      unused185                                 :  1;
     unsigned      pf_dmm_ac1_mbe_error                      :  1;
     unsigned      pf_dmm_ac0_mbe_error                      :  1;
     unsigned      unused182                                 :  1;
     unsigned      unused181                                 :  1;
     unsigned      pf_mpcq_ac1_mbe_error                     :  1;
     unsigned      pf_mpcq_ac0_mbe_error                     :  1;
     unsigned      pf_stripe1_cfg_mbe_error                  :  1;
     unsigned      pf_stripe0_cfg_mbe_error                  :  1;
     unsigned      pf_stripe1_state_mbe_error                :  1;
     unsigned      pf_stripe0_state_mbe_error                :  1;
     unsigned      pf_stripe1_fifo_mbe_error                 :  1;
     unsigned      pf_stripe0_fifo_mbe_error                 :  1;
     unsigned      pf_hyst_mbe_error                         :  1;
     unsigned      dmm_dealloc_ac1_mbe_error                 :  1;
     unsigned      dmm_dealloc_ac0_mbe_error                 :  1;
     unsigned      dmm_lu_mbe_error                          :  1;
     unsigned      mpcq_lu_mbe_error                         :  1;
     unsigned      mqg_64k_thresh_mbe_error                  :  1;
     unsigned      mqg_16k_thresh_mbe_error                  :  1;
     unsigned      mqg_2kb_thresh_mbe_error                  :  1;
     unsigned      mqg_256_thresh_mbe_error                  :  1;
     unsigned      mqg_64k_cnt_mbe_error                     :  1;
     unsigned      mqg_16k_cnt_mbe_error                     :  1;
     unsigned      mqg_2kb_cnt_mbe_error                     :  1;
     unsigned      mqg_256_cnt_mbe_error                     :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_mbe_error                     :  1;
     unsigned      mqg_2kb_cnt_mbe_error                     :  1;
     unsigned      mqg_16k_cnt_mbe_error                     :  1;
     unsigned      mqg_64k_cnt_mbe_error                     :  1;
     unsigned      mqg_256_thresh_mbe_error                  :  1;
     unsigned      mqg_2kb_thresh_mbe_error                  :  1;
     unsigned      mqg_16k_thresh_mbe_error                  :  1;
     unsigned      mqg_64k_thresh_mbe_error                  :  1;
     unsigned      mpcq_lu_mbe_error                         :  1;
     unsigned      dmm_lu_mbe_error                          :  1;
     unsigned      dmm_dealloc_ac0_mbe_error                 :  1;
     unsigned      dmm_dealloc_ac1_mbe_error                 :  1;
     unsigned      pf_hyst_mbe_error                         :  1;
     unsigned      pf_stripe0_fifo_mbe_error                 :  1;
     unsigned      pf_stripe1_fifo_mbe_error                 :  1;
     unsigned      pf_stripe0_state_mbe_error                :  1;
     unsigned      pf_stripe1_state_mbe_error                :  1;
     unsigned      pf_stripe0_cfg_mbe_error                  :  1;
     unsigned      pf_stripe1_cfg_mbe_error                  :  1;
     unsigned      pf_mpcq_ac0_mbe_error                     :  1;
     unsigned      pf_mpcq_ac1_mbe_error                     :  1;
     unsigned      unused181                                 :  1;
     unsigned      unused182                                 :  1;
     unsigned      pf_dmm_ac0_mbe_error                      :  1;
     unsigned      pf_dmm_ac1_mbe_error                      :  1;
     unsigned      unused185                                 :  1;
     unsigned      unused186                                 :  1;
     unsigned      unused187                                 :  1;
     unsigned      unused188                                 :  1;
     unsigned      unused189                                 :  1;
     unsigned      unused190                                 :  1;
     unsigned      unused191                                 :  1;
#endif
} ncp_nca_mtp_interrupt5_status_r_t;

/*! @struct ncp_nca_mtp_interrupt6_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt6_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param read_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> CFG read error Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param write_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> CFG write error Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused221 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused220 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused219 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused218 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused217 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        read/write error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        read/write error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused214 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused213 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory read/write error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        read/write error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory read/write error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory read/write error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory read/write error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory read/write error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory read/write error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory read/write error.
 *        Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory read/write
 *        error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory read/write
 *        error. Status
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory read/write error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory read/write error. Status </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt6_status_r_t
 *
 * Implemented by: 
 *      status6
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      read_err                                  :  1;
     unsigned      write_err                                 :  1;
     unsigned      unused221                                 :  1;
     unsigned      unused220                                 :  1;
     unsigned      unused219                                 :  1;
     unsigned      unused218                                 :  1;
     unsigned      unused217                                 :  1;
     unsigned      pf_dmm_ac1_rw_error                       :  1;
     unsigned      pf_dmm_ac0_rw_error                       :  1;
     unsigned      unused214                                 :  1;
     unsigned      unused213                                 :  1;
     unsigned      pf_mpcq_ac1_rw_error                      :  1;
     unsigned      pf_mpcq_ac0_rw_error                      :  1;
     unsigned      pf_stripe1_cfg_rw_error                   :  1;
     unsigned      pf_stripe0_cfg_rw_error                   :  1;
     unsigned      pf_stripe1_state_rw_error                 :  1;
     unsigned      pf_stripe0_state_rw_error                 :  1;
     unsigned      pf_stripe1_fifo_rw_error                  :  1;
     unsigned      pf_stripe0_fifo_rw_error                  :  1;
     unsigned      pf_hyst_rw_error                          :  1;
     unsigned      dmm_dealloc_ac1_rw_error                  :  1;
     unsigned      dmm_dealloc_ac0_rw_error                  :  1;
     unsigned      dmm_lu_rw_error                           :  1;
     unsigned      mpcq_lu_rw_error                          :  1;
     unsigned      mqg_64k_thresh_rw_error                   :  1;
     unsigned      mqg_16k_thresh_rw_error                   :  1;
     unsigned      mqg_2kb_thresh_rw_error                   :  1;
     unsigned      mqg_256_thresh_rw_error                   :  1;
     unsigned      mqg_64k_cnt_rw_error                      :  1;
     unsigned      mqg_16k_cnt_rw_error                      :  1;
     unsigned      mqg_2kb_cnt_rw_error                      :  1;
     unsigned      mqg_256_cnt_rw_error                      :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_rw_error                      :  1;
     unsigned      mqg_2kb_cnt_rw_error                      :  1;
     unsigned      mqg_16k_cnt_rw_error                      :  1;
     unsigned      mqg_64k_cnt_rw_error                      :  1;
     unsigned      mqg_256_thresh_rw_error                   :  1;
     unsigned      mqg_2kb_thresh_rw_error                   :  1;
     unsigned      mqg_16k_thresh_rw_error                   :  1;
     unsigned      mqg_64k_thresh_rw_error                   :  1;
     unsigned      mpcq_lu_rw_error                          :  1;
     unsigned      dmm_lu_rw_error                           :  1;
     unsigned      dmm_dealloc_ac0_rw_error                  :  1;
     unsigned      dmm_dealloc_ac1_rw_error                  :  1;
     unsigned      pf_hyst_rw_error                          :  1;
     unsigned      pf_stripe0_fifo_rw_error                  :  1;
     unsigned      pf_stripe1_fifo_rw_error                  :  1;
     unsigned      pf_stripe0_state_rw_error                 :  1;
     unsigned      pf_stripe1_state_rw_error                 :  1;
     unsigned      pf_stripe0_cfg_rw_error                   :  1;
     unsigned      pf_stripe1_cfg_rw_error                   :  1;
     unsigned      pf_mpcq_ac0_rw_error                      :  1;
     unsigned      pf_mpcq_ac1_rw_error                      :  1;
     unsigned      unused213                                 :  1;
     unsigned      unused214                                 :  1;
     unsigned      pf_dmm_ac0_rw_error                       :  1;
     unsigned      pf_dmm_ac1_rw_error                       :  1;
     unsigned      unused217                                 :  1;
     unsigned      unused218                                 :  1;
     unsigned      unused219                                 :  1;
     unsigned      unused220                                 :  1;
     unsigned      unused221                                 :  1;
     unsigned      write_err                                 :  1;
     unsigned      read_err                                  :  1;
#endif
} ncp_nca_mtp_interrupt6_status_r_t;

/*! @struct ncp_nca_mtp_interrupt7_status_r_t
 *  @brief Interrupt Status Register
 *  @details This register holds interrupt status
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt7_status_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_fifo_of </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> NCAV3 CFG module FIFO OF Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_fifo_uf </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> NCAV3 CFG module FIFO UF Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_resp_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP prefetch stripe 1 response error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP prefetch stripe 1 FIFO overflow error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP prefetch stripe 1 FIFO underflow error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_resp_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MTP prefetch stripe 0 response error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MTP prefetch stripe 0 FIFO overflow error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch stripe 0 FIFO underflow error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused239 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused238 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused237 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused236 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused235 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused234 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused233 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused232 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Unused Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Status </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt7_status_r_t
 *
 * Implemented by: 
 *      status7
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      cfg_fifo_of                               :  1;
     unsigned      cfg_fifo_uf                               :  1;
     unsigned      pf_stripe1_resp_err                       :  1;
     unsigned      pf_stripe1_fifo_overflow                  :  1;
     unsigned      pf_stripe1_fifo_underflow                 :  1;
     unsigned      pf_stripe0_resp_err                       :  1;
     unsigned      pf_stripe0_fifo_overflow                  :  1;
     unsigned      pf_stripe0_fifo_underflow                 :  1;
     unsigned      dmm_alloc_ac7_err                         :  1;
     unsigned      dmm_alloc_ac6_err                         :  1;
     unsigned      dmm_alloc_ac5_err                         :  1;
     unsigned      dmm_alloc_ac4_err                         :  1;
     unsigned      dmm_alloc_ac3_err                         :  1;
     unsigned      dmm_alloc_ac2_err                         :  1;
     unsigned      dmm_alloc_ac1_err                         :  1;
     unsigned      dmm_alloc_ac0_err                         :  1;
     unsigned      unused239                                 :  1;
     unsigned      unused238                                 :  1;
     unsigned      unused237                                 :  1;
     unsigned      unused236                                 :  1;
     unsigned      unused235                                 :  1;
     unsigned      unused234                                 :  1;
     unsigned      unused233                                 :  1;
     unsigned      unused232                                 :  1;
     unsigned      mpcq_alloc_ac7_err                        :  1;
     unsigned      mpcq_alloc_ac6_err                        :  1;
     unsigned      mpcq_alloc_ac5_err                        :  1;
     unsigned      mpcq_alloc_ac4_err                        :  1;
     unsigned      mpcq_alloc_ac3_err                        :  1;
     unsigned      mpcq_alloc_ac2_err                        :  1;
     unsigned      mpcq_alloc_ac1_err                        :  1;
     unsigned      mpcq_alloc_ac0_err                        :  1;
#else    /* Little Endian */
     unsigned      mpcq_alloc_ac0_err                        :  1;
     unsigned      mpcq_alloc_ac1_err                        :  1;
     unsigned      mpcq_alloc_ac2_err                        :  1;
     unsigned      mpcq_alloc_ac3_err                        :  1;
     unsigned      mpcq_alloc_ac4_err                        :  1;
     unsigned      mpcq_alloc_ac5_err                        :  1;
     unsigned      mpcq_alloc_ac6_err                        :  1;
     unsigned      mpcq_alloc_ac7_err                        :  1;
     unsigned      unused232                                 :  1;
     unsigned      unused233                                 :  1;
     unsigned      unused234                                 :  1;
     unsigned      unused235                                 :  1;
     unsigned      unused236                                 :  1;
     unsigned      unused237                                 :  1;
     unsigned      unused238                                 :  1;
     unsigned      unused239                                 :  1;
     unsigned      dmm_alloc_ac0_err                         :  1;
     unsigned      dmm_alloc_ac1_err                         :  1;
     unsigned      dmm_alloc_ac2_err                         :  1;
     unsigned      dmm_alloc_ac3_err                         :  1;
     unsigned      dmm_alloc_ac4_err                         :  1;
     unsigned      dmm_alloc_ac5_err                         :  1;
     unsigned      dmm_alloc_ac6_err                         :  1;
     unsigned      dmm_alloc_ac7_err                         :  1;
     unsigned      pf_stripe0_fifo_underflow                 :  1;
     unsigned      pf_stripe0_fifo_overflow                  :  1;
     unsigned      pf_stripe0_resp_err                       :  1;
     unsigned      pf_stripe1_fifo_underflow                 :  1;
     unsigned      pf_stripe1_fifo_overflow                  :  1;
     unsigned      pf_stripe1_resp_err                       :  1;
     unsigned      cfg_fifo_uf                               :  1;
     unsigned      cfg_fifo_of                               :  1;
#endif
} ncp_nca_mtp_interrupt7_status_r_t;

/*! @struct ncp_nca_mtp_interrupt0_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt0_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 exceeded its configured treshold. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 exceeded its configured treshold. Enable </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt0_en_r_t
 *
 * Implemented by: 
 *      en0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_exceeded                            :  1;
     unsigned      mqg30_exceeded                            :  1;
     unsigned      mqg29_exceeded                            :  1;
     unsigned      mqg28_exceeded                            :  1;
     unsigned      mqg27_exceeded                            :  1;
     unsigned      mqg26_exceeded                            :  1;
     unsigned      mqg25_exceeded                            :  1;
     unsigned      mqg24_exceeded                            :  1;
     unsigned      mqg23_exceeded                            :  1;
     unsigned      mqg22_exceeded                            :  1;
     unsigned      mqg21_exceeded                            :  1;
     unsigned      mqg20_exceeded                            :  1;
     unsigned      mqg19_exceeded                            :  1;
     unsigned      mqg18_exceeded                            :  1;
     unsigned      mqg17_exceeded                            :  1;
     unsigned      mqg16_exceeded                            :  1;
     unsigned      mqg15_exceeded                            :  1;
     unsigned      mqg14_exceeded                            :  1;
     unsigned      mqg13_exceeded                            :  1;
     unsigned      mqg12_exceeded                            :  1;
     unsigned      mqg11_exceeded                            :  1;
     unsigned      mqg10_exceeded                            :  1;
     unsigned      mqg9_exceeded                             :  1;
     unsigned      mqg8_exceeded                             :  1;
     unsigned      mqg7_exceeded                             :  1;
     unsigned      mqg6_exceeded                             :  1;
     unsigned      mqg5_exceeded                             :  1;
     unsigned      mqg4_exceeded                             :  1;
     unsigned      mqg3_exceeded                             :  1;
     unsigned      mqg2_exceeded                             :  1;
     unsigned      mqg1_exceeded                             :  1;
     unsigned      mqg0_exceeded                             :  1;
#else    /* Little Endian */
     unsigned      mqg0_exceeded                             :  1;
     unsigned      mqg1_exceeded                             :  1;
     unsigned      mqg2_exceeded                             :  1;
     unsigned      mqg3_exceeded                             :  1;
     unsigned      mqg4_exceeded                             :  1;
     unsigned      mqg5_exceeded                             :  1;
     unsigned      mqg6_exceeded                             :  1;
     unsigned      mqg7_exceeded                             :  1;
     unsigned      mqg8_exceeded                             :  1;
     unsigned      mqg9_exceeded                             :  1;
     unsigned      mqg10_exceeded                            :  1;
     unsigned      mqg11_exceeded                            :  1;
     unsigned      mqg12_exceeded                            :  1;
     unsigned      mqg13_exceeded                            :  1;
     unsigned      mqg14_exceeded                            :  1;
     unsigned      mqg15_exceeded                            :  1;
     unsigned      mqg16_exceeded                            :  1;
     unsigned      mqg17_exceeded                            :  1;
     unsigned      mqg18_exceeded                            :  1;
     unsigned      mqg19_exceeded                            :  1;
     unsigned      mqg20_exceeded                            :  1;
     unsigned      mqg21_exceeded                            :  1;
     unsigned      mqg22_exceeded                            :  1;
     unsigned      mqg23_exceeded                            :  1;
     unsigned      mqg24_exceeded                            :  1;
     unsigned      mqg25_exceeded                            :  1;
     unsigned      mqg26_exceeded                            :  1;
     unsigned      mqg27_exceeded                            :  1;
     unsigned      mqg28_exceeded                            :  1;
     unsigned      mqg29_exceeded                            :  1;
     unsigned      mqg30_exceeded                            :  1;
     unsigned      mqg31_exceeded                            :  1;
#endif
} ncp_nca_mtp_interrupt0_en_r_t;

/*! @struct ncp_nca_mtp_interrupt1_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt1_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 underflowed by more than a counter's worth
 *        of blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 underflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt1_en_r_t
 *
 * Implemented by: 
 *      en1
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_underflow                           :  1;
     unsigned      mqg30_underflow                           :  1;
     unsigned      mqg29_underflow                           :  1;
     unsigned      mqg28_underflow                           :  1;
     unsigned      mqg27_underflow                           :  1;
     unsigned      mqg26_underflow                           :  1;
     unsigned      mqg25_underflow                           :  1;
     unsigned      mqg24_underflow                           :  1;
     unsigned      mqg23_underflow                           :  1;
     unsigned      mqg22_underflow                           :  1;
     unsigned      mqg21_underflow                           :  1;
     unsigned      mqg20_underflow                           :  1;
     unsigned      mqg19_underflow                           :  1;
     unsigned      mqg18_underflow                           :  1;
     unsigned      mqg17_underflow                           :  1;
     unsigned      mqg16_underflow                           :  1;
     unsigned      mqg15_underflow                           :  1;
     unsigned      mqg14_underflow                           :  1;
     unsigned      mqg13_underflow                           :  1;
     unsigned      mqg12_underflow                           :  1;
     unsigned      mqg11_underflow                           :  1;
     unsigned      mqg10_underflow                           :  1;
     unsigned      mqg9_underflow                            :  1;
     unsigned      mqg8_underflow                            :  1;
     unsigned      mqg7_underflow                            :  1;
     unsigned      mqg6_underflow                            :  1;
     unsigned      mqg5_underflow                            :  1;
     unsigned      mqg4_underflow                            :  1;
     unsigned      mqg3_underflow                            :  1;
     unsigned      mqg2_underflow                            :  1;
     unsigned      mqg1_underflow                            :  1;
     unsigned      mqg0_underflow                            :  1;
#else    /* Little Endian */
     unsigned      mqg0_underflow                            :  1;
     unsigned      mqg1_underflow                            :  1;
     unsigned      mqg2_underflow                            :  1;
     unsigned      mqg3_underflow                            :  1;
     unsigned      mqg4_underflow                            :  1;
     unsigned      mqg5_underflow                            :  1;
     unsigned      mqg6_underflow                            :  1;
     unsigned      mqg7_underflow                            :  1;
     unsigned      mqg8_underflow                            :  1;
     unsigned      mqg9_underflow                            :  1;
     unsigned      mqg10_underflow                           :  1;
     unsigned      mqg11_underflow                           :  1;
     unsigned      mqg12_underflow                           :  1;
     unsigned      mqg13_underflow                           :  1;
     unsigned      mqg14_underflow                           :  1;
     unsigned      mqg15_underflow                           :  1;
     unsigned      mqg16_underflow                           :  1;
     unsigned      mqg17_underflow                           :  1;
     unsigned      mqg18_underflow                           :  1;
     unsigned      mqg19_underflow                           :  1;
     unsigned      mqg20_underflow                           :  1;
     unsigned      mqg21_underflow                           :  1;
     unsigned      mqg22_underflow                           :  1;
     unsigned      mqg23_underflow                           :  1;
     unsigned      mqg24_underflow                           :  1;
     unsigned      mqg25_underflow                           :  1;
     unsigned      mqg26_underflow                           :  1;
     unsigned      mqg27_underflow                           :  1;
     unsigned      mqg28_underflow                           :  1;
     unsigned      mqg29_underflow                           :  1;
     unsigned      mqg30_underflow                           :  1;
     unsigned      mqg31_underflow                           :  1;
#endif
} ncp_nca_mtp_interrupt1_en_r_t;

/*! @struct ncp_nca_mtp_interrupt2_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt2_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 overflowed by more than a counter's worth of
 *        blocks. Enable
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt2_en_r_t
 *
 * Implemented by: 
 *      en2
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_overflow                            :  1;
     unsigned      mqg30_overflow                            :  1;
     unsigned      mqg29_overflow                            :  1;
     unsigned      mqg28_overflow                            :  1;
     unsigned      mqg27_overflow                            :  1;
     unsigned      mqg26_overflow                            :  1;
     unsigned      mqg25_overflow                            :  1;
     unsigned      mqg24_overflow                            :  1;
     unsigned      mqg23_overflow                            :  1;
     unsigned      mqg22_overflow                            :  1;
     unsigned      mqg21_overflow                            :  1;
     unsigned      mqg20_overflow                            :  1;
     unsigned      mqg19_overflow                            :  1;
     unsigned      mqg18_overflow                            :  1;
     unsigned      mqg17_overflow                            :  1;
     unsigned      mqg16_overflow                            :  1;
     unsigned      mqg15_overflow                            :  1;
     unsigned      mqg14_overflow                            :  1;
     unsigned      mqg13_overflow                            :  1;
     unsigned      mqg12_overflow                            :  1;
     unsigned      mqg11_overflow                            :  1;
     unsigned      mqg10_overflow                            :  1;
     unsigned      mqg9_overflow                             :  1;
     unsigned      mqg8_overflow                             :  1;
     unsigned      mqg7_overflow                             :  1;
     unsigned      mqg6_overflow                             :  1;
     unsigned      mqg5_overflow                             :  1;
     unsigned      mqg4_overflow                             :  1;
     unsigned      mqg3_overflow                             :  1;
     unsigned      mqg2_overflow                             :  1;
     unsigned      mqg1_overflow                             :  1;
     unsigned      mqg0_overflow                             :  1;
#else    /* Little Endian */
     unsigned      mqg0_overflow                             :  1;
     unsigned      mqg1_overflow                             :  1;
     unsigned      mqg2_overflow                             :  1;
     unsigned      mqg3_overflow                             :  1;
     unsigned      mqg4_overflow                             :  1;
     unsigned      mqg5_overflow                             :  1;
     unsigned      mqg6_overflow                             :  1;
     unsigned      mqg7_overflow                             :  1;
     unsigned      mqg8_overflow                             :  1;
     unsigned      mqg9_overflow                             :  1;
     unsigned      mqg10_overflow                            :  1;
     unsigned      mqg11_overflow                            :  1;
     unsigned      mqg12_overflow                            :  1;
     unsigned      mqg13_overflow                            :  1;
     unsigned      mqg14_overflow                            :  1;
     unsigned      mqg15_overflow                            :  1;
     unsigned      mqg16_overflow                            :  1;
     unsigned      mqg17_overflow                            :  1;
     unsigned      mqg18_overflow                            :  1;
     unsigned      mqg19_overflow                            :  1;
     unsigned      mqg20_overflow                            :  1;
     unsigned      mqg21_overflow                            :  1;
     unsigned      mqg22_overflow                            :  1;
     unsigned      mqg23_overflow                            :  1;
     unsigned      mqg24_overflow                            :  1;
     unsigned      mqg25_overflow                            :  1;
     unsigned      mqg26_overflow                            :  1;
     unsigned      mqg27_overflow                            :  1;
     unsigned      mqg28_overflow                            :  1;
     unsigned      mqg29_overflow                            :  1;
     unsigned      mqg30_overflow                            :  1;
     unsigned      mqg31_overflow                            :  1;
#endif
} ncp_nca_mtp_interrupt2_en_r_t;

/*! @struct ncp_nca_mtp_interrupt3_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt3_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MTP DMM dealloc request was to an unconfigured pool/size.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_core_berr </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Received non-OKAY response code on MPCQ result write
 *        response interface. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_core_berr </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Received non-OKAY response code on OTP result write
 *        response interface. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> OTP pointer adjust request had a protocol error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> OTP pointer adjust request was not for a shared vpp
 *        pool. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MPCQ allocate request protocol error Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_par_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MPCQ allocate request parity error Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_ptr_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MPCQ allocate request was not for 2, 4, or 8 pointers.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_id_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MPCQ allocate request src_id (NCAP) was out of range
 *        or dst_id was not 0 (NCA). Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_pgit_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MPCQ allocate request PGIT was out of range. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MPCQ allocate request was not for a shared vpp pool.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MPCQ allocate request lookup table was not valid for
 *        provided src_id and PGIT. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> ITP allocate request had a protocol error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> ITP allocate request was not for a shared vpp or cpu
 *        pool. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> ITP pointer adjust request had a protocol error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> ITP pointer adjust request was not for a shared vpp
 *        pool. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wreq_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> DMM deallocate request had a protocol error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> DMM deallocate request had an invalid pool (pool not
 *        2-7). Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wlu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> DMM deallocate request lookup table was not valid
 *        for provided PGIT. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rreq_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> DMM allocate request had a protocol error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> DMM allocate request was not for a shared vpp pool.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rlu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> DMM allocate request lookup table was not valid for
 *        provided PGIT. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_synd_status_int </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Syndrome interrupt Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_smon_int </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> SMON interrupt Enable </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt3_en_r_t
 *
 * Implemented by: 
 *      en3
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      dmm_dealloc_fifo_notvalid_err             :  1;
     unsigned      dmm_dealloc_ac7_err                       :  1;
     unsigned      dmm_dealloc_ac6_err                       :  1;
     unsigned      dmm_dealloc_ac5_err                       :  1;
     unsigned      dmm_dealloc_ac4_err                       :  1;
     unsigned      dmm_dealloc_ac3_err                       :  1;
     unsigned      dmm_dealloc_ac2_err                       :  1;
     unsigned      dmm_dealloc_ac1_err                       :  1;
     unsigned      dmm_dealloc_ac0_err                       :  1;
     unsigned      ncav3_mpcq_res_core_berr                  :  1;
     unsigned      mtp_otp_res_core_berr                     :  1;
     unsigned      otp_req_error                             :  1;
     unsigned      otp_pool_error                            :  1;
     unsigned      mpcq_req_error                            :  1;
     unsigned      mpcq_par_error                            :  1;
     unsigned      mpcq_ptr_error                            :  1;
     unsigned      mpcq_id_error                             :  1;
     unsigned      mpcq_pgit_error                           :  1;
     unsigned      mpcq_pool_error                           :  1;
     unsigned      mpcq_lu_error                             :  1;
     unsigned      itp_req_error                             :  1;
     unsigned      itp_pool_error                            :  1;
     unsigned      itp_tx_req_error                          :  1;
     unsigned      itp_tx_pool_error                         :  1;
     unsigned      dmm_wreq_error                            :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_wlu_error                             :  1;
     unsigned      dmm_rreq_error                            :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_rlu_error                             :  1;
     unsigned      cfg_synd_status_int                       :  1;
     unsigned      cfg_smon_int                              :  1;
#else    /* Little Endian */
     unsigned      cfg_smon_int                              :  1;
     unsigned      cfg_synd_status_int                       :  1;
     unsigned      dmm_rlu_error                             :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_rreq_error                            :  1;
     unsigned      dmm_wlu_error                             :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_wreq_error                            :  1;
     unsigned      itp_tx_pool_error                         :  1;
     unsigned      itp_tx_req_error                          :  1;
     unsigned      itp_pool_error                            :  1;
     unsigned      itp_req_error                             :  1;
     unsigned      mpcq_lu_error                             :  1;
     unsigned      mpcq_pool_error                           :  1;
     unsigned      mpcq_pgit_error                           :  1;
     unsigned      mpcq_id_error                             :  1;
     unsigned      mpcq_ptr_error                            :  1;
     unsigned      mpcq_par_error                            :  1;
     unsigned      mpcq_req_error                            :  1;
     unsigned      otp_pool_error                            :  1;
     unsigned      otp_req_error                             :  1;
     unsigned      mtp_otp_res_core_berr                     :  1;
     unsigned      ncav3_mpcq_res_core_berr                  :  1;
     unsigned      dmm_dealloc_ac0_err                       :  1;
     unsigned      dmm_dealloc_ac1_err                       :  1;
     unsigned      dmm_dealloc_ac2_err                       :  1;
     unsigned      dmm_dealloc_ac3_err                       :  1;
     unsigned      dmm_dealloc_ac4_err                       :  1;
     unsigned      dmm_dealloc_ac5_err                       :  1;
     unsigned      dmm_dealloc_ac6_err                       :  1;
     unsigned      dmm_dealloc_ac7_err                       :  1;
     unsigned      dmm_dealloc_fifo_notvalid_err             :  1;
#endif
} ncp_nca_mtp_interrupt3_en_r_t;

/*! @struct ncp_nca_mtp_interrupt4_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt4_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MTP DMM allocate request was to an unconfigured pool/size.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MTP ITP allocate request was to an unconfigured pool/size.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP MPCQ allocate request was to an unconfigured pool/size.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP ITP transmit request was to an unconfigured pool/size.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP OTP command request was to an unconfigured pool/size.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> DMM allocate request was non-secure and non-secure
 *        accesses are not enabled. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> DMM deallocate request was non-secure and non-secure
 *        accesses are not enabled. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        SB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        SB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused150 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused149 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory SB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        SB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory SB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory SB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory SB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory SB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory SB
 *        ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory SB ECC
 *        error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory SB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory SB ECC error. Enable </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt4_en_r_t
 *
 * Implemented by: 
 *      en4
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      dmm_fifo_notvalid_err                     :  1;
     unsigned      itp_fifo_notvalid_err                     :  1;
     unsigned      mpcq_fifo_notvalid_err                    :  1;
     unsigned      itp_tx_fifo_notvalid_err                  :  1;
     unsigned      otp_fifo_notvalid_err                     :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      pf_dmm_ac1_sbe_error                      :  1;
     unsigned      pf_dmm_ac0_sbe_error                      :  1;
     unsigned      unused150                                 :  1;
     unsigned      unused149                                 :  1;
     unsigned      pf_mpcq_ac1_sbe_error                     :  1;
     unsigned      pf_mpcq_ac0_sbe_error                     :  1;
     unsigned      pf_stripe1_cfg_sbe_error                  :  1;
     unsigned      pf_stripe0_cfg_sbe_error                  :  1;
     unsigned      pf_stripe1_state_sbe_error                :  1;
     unsigned      pf_stripe0_state_sbe_error                :  1;
     unsigned      pf_stripe1_fifo_sbe_error                 :  1;
     unsigned      pf_stripe0_fifo_sbe_error                 :  1;
     unsigned      pf_hyst_sbe_error                         :  1;
     unsigned      dmm_dealloc_ac1_sbe_error                 :  1;
     unsigned      dmm_dealloc_ac0_sbe_error                 :  1;
     unsigned      dmm_lu_sbe_error                          :  1;
     unsigned      mpcq_lu_sbe_error                         :  1;
     unsigned      mqg_64k_thresh_sbe_error                  :  1;
     unsigned      mqg_16k_thresh_sbe_error                  :  1;
     unsigned      mqg_2kb_thresh_sbe_error                  :  1;
     unsigned      mqg_256_thresh_sbe_error                  :  1;
     unsigned      mqg_64k_cnt_sbe_error                     :  1;
     unsigned      mqg_16k_cnt_sbe_error                     :  1;
     unsigned      mqg_2kb_cnt_sbe_error                     :  1;
     unsigned      mqg_256_cnt_sbe_error                     :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_sbe_error                     :  1;
     unsigned      mqg_2kb_cnt_sbe_error                     :  1;
     unsigned      mqg_16k_cnt_sbe_error                     :  1;
     unsigned      mqg_64k_cnt_sbe_error                     :  1;
     unsigned      mqg_256_thresh_sbe_error                  :  1;
     unsigned      mqg_2kb_thresh_sbe_error                  :  1;
     unsigned      mqg_16k_thresh_sbe_error                  :  1;
     unsigned      mqg_64k_thresh_sbe_error                  :  1;
     unsigned      mpcq_lu_sbe_error                         :  1;
     unsigned      dmm_lu_sbe_error                          :  1;
     unsigned      dmm_dealloc_ac0_sbe_error                 :  1;
     unsigned      dmm_dealloc_ac1_sbe_error                 :  1;
     unsigned      pf_hyst_sbe_error                         :  1;
     unsigned      pf_stripe0_fifo_sbe_error                 :  1;
     unsigned      pf_stripe1_fifo_sbe_error                 :  1;
     unsigned      pf_stripe0_state_sbe_error                :  1;
     unsigned      pf_stripe1_state_sbe_error                :  1;
     unsigned      pf_stripe0_cfg_sbe_error                  :  1;
     unsigned      pf_stripe1_cfg_sbe_error                  :  1;
     unsigned      pf_mpcq_ac0_sbe_error                     :  1;
     unsigned      pf_mpcq_ac1_sbe_error                     :  1;
     unsigned      unused149                                 :  1;
     unsigned      unused150                                 :  1;
     unsigned      pf_dmm_ac0_sbe_error                      :  1;
     unsigned      pf_dmm_ac1_sbe_error                      :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      otp_fifo_notvalid_err                     :  1;
     unsigned      itp_tx_fifo_notvalid_err                  :  1;
     unsigned      mpcq_fifo_notvalid_err                    :  1;
     unsigned      itp_fifo_notvalid_err                     :  1;
     unsigned      dmm_fifo_notvalid_err                     :  1;
#endif
} ncp_nca_mtp_interrupt4_en_r_t;

/*! @struct ncp_nca_mtp_interrupt5_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt5_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param unused191 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused190 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused189 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused188 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused187 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused186 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused185 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        MB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        MB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused182 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused181 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory MB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        MB ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory MB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory MB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory MB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory MB ECC error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory MB
 *        ECC error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory MB ECC
 *        error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory MB ECC error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory MB ECC error. Enable </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt5_en_r_t
 *
 * Implemented by: 
 *      en5
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      unused191                                 :  1;
     unsigned      unused190                                 :  1;
     unsigned      unused189                                 :  1;
     unsigned      unused188                                 :  1;
     unsigned      unused187                                 :  1;
     unsigned      unused186                                 :  1;
     unsigned      unused185                                 :  1;
     unsigned      pf_dmm_ac1_mbe_error                      :  1;
     unsigned      pf_dmm_ac0_mbe_error                      :  1;
     unsigned      unused182                                 :  1;
     unsigned      unused181                                 :  1;
     unsigned      pf_mpcq_ac1_mbe_error                     :  1;
     unsigned      pf_mpcq_ac0_mbe_error                     :  1;
     unsigned      pf_stripe1_cfg_mbe_error                  :  1;
     unsigned      pf_stripe0_cfg_mbe_error                  :  1;
     unsigned      pf_stripe1_state_mbe_error                :  1;
     unsigned      pf_stripe0_state_mbe_error                :  1;
     unsigned      pf_stripe1_fifo_mbe_error                 :  1;
     unsigned      pf_stripe0_fifo_mbe_error                 :  1;
     unsigned      pf_hyst_mbe_error                         :  1;
     unsigned      dmm_dealloc_ac1_mbe_error                 :  1;
     unsigned      dmm_dealloc_ac0_mbe_error                 :  1;
     unsigned      dmm_lu_mbe_error                          :  1;
     unsigned      mpcq_lu_mbe_error                         :  1;
     unsigned      mqg_64k_thresh_mbe_error                  :  1;
     unsigned      mqg_16k_thresh_mbe_error                  :  1;
     unsigned      mqg_2kb_thresh_mbe_error                  :  1;
     unsigned      mqg_256_thresh_mbe_error                  :  1;
     unsigned      mqg_64k_cnt_mbe_error                     :  1;
     unsigned      mqg_16k_cnt_mbe_error                     :  1;
     unsigned      mqg_2kb_cnt_mbe_error                     :  1;
     unsigned      mqg_256_cnt_mbe_error                     :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_mbe_error                     :  1;
     unsigned      mqg_2kb_cnt_mbe_error                     :  1;
     unsigned      mqg_16k_cnt_mbe_error                     :  1;
     unsigned      mqg_64k_cnt_mbe_error                     :  1;
     unsigned      mqg_256_thresh_mbe_error                  :  1;
     unsigned      mqg_2kb_thresh_mbe_error                  :  1;
     unsigned      mqg_16k_thresh_mbe_error                  :  1;
     unsigned      mqg_64k_thresh_mbe_error                  :  1;
     unsigned      mpcq_lu_mbe_error                         :  1;
     unsigned      dmm_lu_mbe_error                          :  1;
     unsigned      dmm_dealloc_ac0_mbe_error                 :  1;
     unsigned      dmm_dealloc_ac1_mbe_error                 :  1;
     unsigned      pf_hyst_mbe_error                         :  1;
     unsigned      pf_stripe0_fifo_mbe_error                 :  1;
     unsigned      pf_stripe1_fifo_mbe_error                 :  1;
     unsigned      pf_stripe0_state_mbe_error                :  1;
     unsigned      pf_stripe1_state_mbe_error                :  1;
     unsigned      pf_stripe0_cfg_mbe_error                  :  1;
     unsigned      pf_stripe1_cfg_mbe_error                  :  1;
     unsigned      pf_mpcq_ac0_mbe_error                     :  1;
     unsigned      pf_mpcq_ac1_mbe_error                     :  1;
     unsigned      unused181                                 :  1;
     unsigned      unused182                                 :  1;
     unsigned      pf_dmm_ac0_mbe_error                      :  1;
     unsigned      pf_dmm_ac1_mbe_error                      :  1;
     unsigned      unused185                                 :  1;
     unsigned      unused186                                 :  1;
     unsigned      unused187                                 :  1;
     unsigned      unused188                                 :  1;
     unsigned      unused189                                 :  1;
     unsigned      unused190                                 :  1;
     unsigned      unused191                                 :  1;
#endif
} ncp_nca_mtp_interrupt5_en_r_t;

/*! @struct ncp_nca_mtp_interrupt6_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt6_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param read_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> CFG read error Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param write_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> CFG write error Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused221 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused220 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused219 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused218 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused217 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        read/write error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        read/write error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused214 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused213 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory read/write error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        read/write error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory read/write error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory read/write error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory read/write error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory read/write error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory read/write error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory read/write error.
 *        Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory read/write
 *        error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory read/write
 *        error. Enable
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory read/write error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory read/write error. Enable </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt6_en_r_t
 *
 * Implemented by: 
 *      en6
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      read_err                                  :  1;
     unsigned      write_err                                 :  1;
     unsigned      unused221                                 :  1;
     unsigned      unused220                                 :  1;
     unsigned      unused219                                 :  1;
     unsigned      unused218                                 :  1;
     unsigned      unused217                                 :  1;
     unsigned      pf_dmm_ac1_rw_error                       :  1;
     unsigned      pf_dmm_ac0_rw_error                       :  1;
     unsigned      unused214                                 :  1;
     unsigned      unused213                                 :  1;
     unsigned      pf_mpcq_ac1_rw_error                      :  1;
     unsigned      pf_mpcq_ac0_rw_error                      :  1;
     unsigned      pf_stripe1_cfg_rw_error                   :  1;
     unsigned      pf_stripe0_cfg_rw_error                   :  1;
     unsigned      pf_stripe1_state_rw_error                 :  1;
     unsigned      pf_stripe0_state_rw_error                 :  1;
     unsigned      pf_stripe1_fifo_rw_error                  :  1;
     unsigned      pf_stripe0_fifo_rw_error                  :  1;
     unsigned      pf_hyst_rw_error                          :  1;
     unsigned      dmm_dealloc_ac1_rw_error                  :  1;
     unsigned      dmm_dealloc_ac0_rw_error                  :  1;
     unsigned      dmm_lu_rw_error                           :  1;
     unsigned      mpcq_lu_rw_error                          :  1;
     unsigned      mqg_64k_thresh_rw_error                   :  1;
     unsigned      mqg_16k_thresh_rw_error                   :  1;
     unsigned      mqg_2kb_thresh_rw_error                   :  1;
     unsigned      mqg_256_thresh_rw_error                   :  1;
     unsigned      mqg_64k_cnt_rw_error                      :  1;
     unsigned      mqg_16k_cnt_rw_error                      :  1;
     unsigned      mqg_2kb_cnt_rw_error                      :  1;
     unsigned      mqg_256_cnt_rw_error                      :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_rw_error                      :  1;
     unsigned      mqg_2kb_cnt_rw_error                      :  1;
     unsigned      mqg_16k_cnt_rw_error                      :  1;
     unsigned      mqg_64k_cnt_rw_error                      :  1;
     unsigned      mqg_256_thresh_rw_error                   :  1;
     unsigned      mqg_2kb_thresh_rw_error                   :  1;
     unsigned      mqg_16k_thresh_rw_error                   :  1;
     unsigned      mqg_64k_thresh_rw_error                   :  1;
     unsigned      mpcq_lu_rw_error                          :  1;
     unsigned      dmm_lu_rw_error                           :  1;
     unsigned      dmm_dealloc_ac0_rw_error                  :  1;
     unsigned      dmm_dealloc_ac1_rw_error                  :  1;
     unsigned      pf_hyst_rw_error                          :  1;
     unsigned      pf_stripe0_fifo_rw_error                  :  1;
     unsigned      pf_stripe1_fifo_rw_error                  :  1;
     unsigned      pf_stripe0_state_rw_error                 :  1;
     unsigned      pf_stripe1_state_rw_error                 :  1;
     unsigned      pf_stripe0_cfg_rw_error                   :  1;
     unsigned      pf_stripe1_cfg_rw_error                   :  1;
     unsigned      pf_mpcq_ac0_rw_error                      :  1;
     unsigned      pf_mpcq_ac1_rw_error                      :  1;
     unsigned      unused213                                 :  1;
     unsigned      unused214                                 :  1;
     unsigned      pf_dmm_ac0_rw_error                       :  1;
     unsigned      pf_dmm_ac1_rw_error                       :  1;
     unsigned      unused217                                 :  1;
     unsigned      unused218                                 :  1;
     unsigned      unused219                                 :  1;
     unsigned      unused220                                 :  1;
     unsigned      unused221                                 :  1;
     unsigned      write_err                                 :  1;
     unsigned      read_err                                  :  1;
#endif
} ncp_nca_mtp_interrupt6_en_r_t;

/*! @struct ncp_nca_mtp_interrupt7_en_r_t
 *  @brief Interrupt Enable Register
 *  @details This register enables interrupts
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt7_en_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_fifo_of </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> NCAV3 CFG module FIFO OF Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_fifo_uf </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> NCAV3 CFG module FIFO UF Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_resp_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP prefetch stripe 1 response error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP prefetch stripe 1 FIFO overflow error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP prefetch stripe 1 FIFO underflow error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_resp_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MTP prefetch stripe 0 response error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MTP prefetch stripe 0 FIFO overflow error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch stripe 0 FIFO underflow error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused239 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused238 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused237 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused236 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused235 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused234 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused233 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused232 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Unused Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Enable </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt7_en_r_t
 *
 * Implemented by: 
 *      en7
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      cfg_fifo_of                               :  1;
     unsigned      cfg_fifo_uf                               :  1;
     unsigned      pf_stripe1_resp_err                       :  1;
     unsigned      pf_stripe1_fifo_overflow                  :  1;
     unsigned      pf_stripe1_fifo_underflow                 :  1;
     unsigned      pf_stripe0_resp_err                       :  1;
     unsigned      pf_stripe0_fifo_overflow                  :  1;
     unsigned      pf_stripe0_fifo_underflow                 :  1;
     unsigned      dmm_alloc_ac7_err                         :  1;
     unsigned      dmm_alloc_ac6_err                         :  1;
     unsigned      dmm_alloc_ac5_err                         :  1;
     unsigned      dmm_alloc_ac4_err                         :  1;
     unsigned      dmm_alloc_ac3_err                         :  1;
     unsigned      dmm_alloc_ac2_err                         :  1;
     unsigned      dmm_alloc_ac1_err                         :  1;
     unsigned      dmm_alloc_ac0_err                         :  1;
     unsigned      unused239                                 :  1;
     unsigned      unused238                                 :  1;
     unsigned      unused237                                 :  1;
     unsigned      unused236                                 :  1;
     unsigned      unused235                                 :  1;
     unsigned      unused234                                 :  1;
     unsigned      unused233                                 :  1;
     unsigned      unused232                                 :  1;
     unsigned      mpcq_alloc_ac7_err                        :  1;
     unsigned      mpcq_alloc_ac6_err                        :  1;
     unsigned      mpcq_alloc_ac5_err                        :  1;
     unsigned      mpcq_alloc_ac4_err                        :  1;
     unsigned      mpcq_alloc_ac3_err                        :  1;
     unsigned      mpcq_alloc_ac2_err                        :  1;
     unsigned      mpcq_alloc_ac1_err                        :  1;
     unsigned      mpcq_alloc_ac0_err                        :  1;
#else    /* Little Endian */
     unsigned      mpcq_alloc_ac0_err                        :  1;
     unsigned      mpcq_alloc_ac1_err                        :  1;
     unsigned      mpcq_alloc_ac2_err                        :  1;
     unsigned      mpcq_alloc_ac3_err                        :  1;
     unsigned      mpcq_alloc_ac4_err                        :  1;
     unsigned      mpcq_alloc_ac5_err                        :  1;
     unsigned      mpcq_alloc_ac6_err                        :  1;
     unsigned      mpcq_alloc_ac7_err                        :  1;
     unsigned      unused232                                 :  1;
     unsigned      unused233                                 :  1;
     unsigned      unused234                                 :  1;
     unsigned      unused235                                 :  1;
     unsigned      unused236                                 :  1;
     unsigned      unused237                                 :  1;
     unsigned      unused238                                 :  1;
     unsigned      unused239                                 :  1;
     unsigned      dmm_alloc_ac0_err                         :  1;
     unsigned      dmm_alloc_ac1_err                         :  1;
     unsigned      dmm_alloc_ac2_err                         :  1;
     unsigned      dmm_alloc_ac3_err                         :  1;
     unsigned      dmm_alloc_ac4_err                         :  1;
     unsigned      dmm_alloc_ac5_err                         :  1;
     unsigned      dmm_alloc_ac6_err                         :  1;
     unsigned      dmm_alloc_ac7_err                         :  1;
     unsigned      pf_stripe0_fifo_underflow                 :  1;
     unsigned      pf_stripe0_fifo_overflow                  :  1;
     unsigned      pf_stripe0_resp_err                       :  1;
     unsigned      pf_stripe1_fifo_underflow                 :  1;
     unsigned      pf_stripe1_fifo_overflow                  :  1;
     unsigned      pf_stripe1_resp_err                       :  1;
     unsigned      cfg_fifo_uf                               :  1;
     unsigned      cfg_fifo_of                               :  1;
#endif
} ncp_nca_mtp_interrupt7_en_r_t;

/*! @struct ncp_nca_mtp_interrupt0_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt0_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 exceeded its configured treshold. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_exceeded </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 exceeded its configured treshold. Force </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt0_force_r_t
 *
 * Implemented by: 
 *      frc0
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_exceeded                            :  1;
     unsigned      mqg30_exceeded                            :  1;
     unsigned      mqg29_exceeded                            :  1;
     unsigned      mqg28_exceeded                            :  1;
     unsigned      mqg27_exceeded                            :  1;
     unsigned      mqg26_exceeded                            :  1;
     unsigned      mqg25_exceeded                            :  1;
     unsigned      mqg24_exceeded                            :  1;
     unsigned      mqg23_exceeded                            :  1;
     unsigned      mqg22_exceeded                            :  1;
     unsigned      mqg21_exceeded                            :  1;
     unsigned      mqg20_exceeded                            :  1;
     unsigned      mqg19_exceeded                            :  1;
     unsigned      mqg18_exceeded                            :  1;
     unsigned      mqg17_exceeded                            :  1;
     unsigned      mqg16_exceeded                            :  1;
     unsigned      mqg15_exceeded                            :  1;
     unsigned      mqg14_exceeded                            :  1;
     unsigned      mqg13_exceeded                            :  1;
     unsigned      mqg12_exceeded                            :  1;
     unsigned      mqg11_exceeded                            :  1;
     unsigned      mqg10_exceeded                            :  1;
     unsigned      mqg9_exceeded                             :  1;
     unsigned      mqg8_exceeded                             :  1;
     unsigned      mqg7_exceeded                             :  1;
     unsigned      mqg6_exceeded                             :  1;
     unsigned      mqg5_exceeded                             :  1;
     unsigned      mqg4_exceeded                             :  1;
     unsigned      mqg3_exceeded                             :  1;
     unsigned      mqg2_exceeded                             :  1;
     unsigned      mqg1_exceeded                             :  1;
     unsigned      mqg0_exceeded                             :  1;
#else    /* Little Endian */
     unsigned      mqg0_exceeded                             :  1;
     unsigned      mqg1_exceeded                             :  1;
     unsigned      mqg2_exceeded                             :  1;
     unsigned      mqg3_exceeded                             :  1;
     unsigned      mqg4_exceeded                             :  1;
     unsigned      mqg5_exceeded                             :  1;
     unsigned      mqg6_exceeded                             :  1;
     unsigned      mqg7_exceeded                             :  1;
     unsigned      mqg8_exceeded                             :  1;
     unsigned      mqg9_exceeded                             :  1;
     unsigned      mqg10_exceeded                            :  1;
     unsigned      mqg11_exceeded                            :  1;
     unsigned      mqg12_exceeded                            :  1;
     unsigned      mqg13_exceeded                            :  1;
     unsigned      mqg14_exceeded                            :  1;
     unsigned      mqg15_exceeded                            :  1;
     unsigned      mqg16_exceeded                            :  1;
     unsigned      mqg17_exceeded                            :  1;
     unsigned      mqg18_exceeded                            :  1;
     unsigned      mqg19_exceeded                            :  1;
     unsigned      mqg20_exceeded                            :  1;
     unsigned      mqg21_exceeded                            :  1;
     unsigned      mqg22_exceeded                            :  1;
     unsigned      mqg23_exceeded                            :  1;
     unsigned      mqg24_exceeded                            :  1;
     unsigned      mqg25_exceeded                            :  1;
     unsigned      mqg26_exceeded                            :  1;
     unsigned      mqg27_exceeded                            :  1;
     unsigned      mqg28_exceeded                            :  1;
     unsigned      mqg29_exceeded                            :  1;
     unsigned      mqg30_exceeded                            :  1;
     unsigned      mqg31_exceeded                            :  1;
#endif
} ncp_nca_mtp_interrupt0_force_r_t;

/*! @struct ncp_nca_mtp_interrupt1_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt1_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 underflowed by more than a counter's worth
 *        of blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 underflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt1_force_r_t
 *
 * Implemented by: 
 *      frc1
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_underflow                           :  1;
     unsigned      mqg30_underflow                           :  1;
     unsigned      mqg29_underflow                           :  1;
     unsigned      mqg28_underflow                           :  1;
     unsigned      mqg27_underflow                           :  1;
     unsigned      mqg26_underflow                           :  1;
     unsigned      mqg25_underflow                           :  1;
     unsigned      mqg24_underflow                           :  1;
     unsigned      mqg23_underflow                           :  1;
     unsigned      mqg22_underflow                           :  1;
     unsigned      mqg21_underflow                           :  1;
     unsigned      mqg20_underflow                           :  1;
     unsigned      mqg19_underflow                           :  1;
     unsigned      mqg18_underflow                           :  1;
     unsigned      mqg17_underflow                           :  1;
     unsigned      mqg16_underflow                           :  1;
     unsigned      mqg15_underflow                           :  1;
     unsigned      mqg14_underflow                           :  1;
     unsigned      mqg13_underflow                           :  1;
     unsigned      mqg12_underflow                           :  1;
     unsigned      mqg11_underflow                           :  1;
     unsigned      mqg10_underflow                           :  1;
     unsigned      mqg9_underflow                            :  1;
     unsigned      mqg8_underflow                            :  1;
     unsigned      mqg7_underflow                            :  1;
     unsigned      mqg6_underflow                            :  1;
     unsigned      mqg5_underflow                            :  1;
     unsigned      mqg4_underflow                            :  1;
     unsigned      mqg3_underflow                            :  1;
     unsigned      mqg2_underflow                            :  1;
     unsigned      mqg1_underflow                            :  1;
     unsigned      mqg0_underflow                            :  1;
#else    /* Little Endian */
     unsigned      mqg0_underflow                            :  1;
     unsigned      mqg1_underflow                            :  1;
     unsigned      mqg2_underflow                            :  1;
     unsigned      mqg3_underflow                            :  1;
     unsigned      mqg4_underflow                            :  1;
     unsigned      mqg5_underflow                            :  1;
     unsigned      mqg6_underflow                            :  1;
     unsigned      mqg7_underflow                            :  1;
     unsigned      mqg8_underflow                            :  1;
     unsigned      mqg9_underflow                            :  1;
     unsigned      mqg10_underflow                           :  1;
     unsigned      mqg11_underflow                           :  1;
     unsigned      mqg12_underflow                           :  1;
     unsigned      mqg13_underflow                           :  1;
     unsigned      mqg14_underflow                           :  1;
     unsigned      mqg15_underflow                           :  1;
     unsigned      mqg16_underflow                           :  1;
     unsigned      mqg17_underflow                           :  1;
     unsigned      mqg18_underflow                           :  1;
     unsigned      mqg19_underflow                           :  1;
     unsigned      mqg20_underflow                           :  1;
     unsigned      mqg21_underflow                           :  1;
     unsigned      mqg22_underflow                           :  1;
     unsigned      mqg23_underflow                           :  1;
     unsigned      mqg24_underflow                           :  1;
     unsigned      mqg25_underflow                           :  1;
     unsigned      mqg26_underflow                           :  1;
     unsigned      mqg27_underflow                           :  1;
     unsigned      mqg28_underflow                           :  1;
     unsigned      mqg29_underflow                           :  1;
     unsigned      mqg30_underflow                           :  1;
     unsigned      mqg31_underflow                           :  1;
#endif
} ncp_nca_mtp_interrupt1_force_r_t;

/*! @struct ncp_nca_mtp_interrupt2_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt2_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param mqg31_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MQG 31 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg30_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MQG 30 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg29_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MQG 29 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg28_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MQG 28 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg27_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MQG 27 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg26_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MQG 26 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg25_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MQG 25 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg24_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MQG 24 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg23_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MQG 23 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg22_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MQG 22 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg21_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MQG 21 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg20_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MQG 20 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg19_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MQG 19 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg18_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MQG 18 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg17_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MQG 17 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg16_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MQG 16 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg15_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MQG 15 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg14_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MQG 14 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg13_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MQG 13 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg12_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MQG 12 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg11_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MQG 11 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg10_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MQG 10 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg9_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MQG 9 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg8_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MQG 8 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg7_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 7 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg6_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 6 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg5_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 5 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg4_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 4 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg3_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 3 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg2_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 2 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg1_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 1 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg0_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 0 overflowed by more than a counter's worth of
 *        blocks. Force
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt2_force_r_t
 *
 * Implemented by: 
 *      frc2
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      mqg31_overflow                            :  1;
     unsigned      mqg30_overflow                            :  1;
     unsigned      mqg29_overflow                            :  1;
     unsigned      mqg28_overflow                            :  1;
     unsigned      mqg27_overflow                            :  1;
     unsigned      mqg26_overflow                            :  1;
     unsigned      mqg25_overflow                            :  1;
     unsigned      mqg24_overflow                            :  1;
     unsigned      mqg23_overflow                            :  1;
     unsigned      mqg22_overflow                            :  1;
     unsigned      mqg21_overflow                            :  1;
     unsigned      mqg20_overflow                            :  1;
     unsigned      mqg19_overflow                            :  1;
     unsigned      mqg18_overflow                            :  1;
     unsigned      mqg17_overflow                            :  1;
     unsigned      mqg16_overflow                            :  1;
     unsigned      mqg15_overflow                            :  1;
     unsigned      mqg14_overflow                            :  1;
     unsigned      mqg13_overflow                            :  1;
     unsigned      mqg12_overflow                            :  1;
     unsigned      mqg11_overflow                            :  1;
     unsigned      mqg10_overflow                            :  1;
     unsigned      mqg9_overflow                             :  1;
     unsigned      mqg8_overflow                             :  1;
     unsigned      mqg7_overflow                             :  1;
     unsigned      mqg6_overflow                             :  1;
     unsigned      mqg5_overflow                             :  1;
     unsigned      mqg4_overflow                             :  1;
     unsigned      mqg3_overflow                             :  1;
     unsigned      mqg2_overflow                             :  1;
     unsigned      mqg1_overflow                             :  1;
     unsigned      mqg0_overflow                             :  1;
#else    /* Little Endian */
     unsigned      mqg0_overflow                             :  1;
     unsigned      mqg1_overflow                             :  1;
     unsigned      mqg2_overflow                             :  1;
     unsigned      mqg3_overflow                             :  1;
     unsigned      mqg4_overflow                             :  1;
     unsigned      mqg5_overflow                             :  1;
     unsigned      mqg6_overflow                             :  1;
     unsigned      mqg7_overflow                             :  1;
     unsigned      mqg8_overflow                             :  1;
     unsigned      mqg9_overflow                             :  1;
     unsigned      mqg10_overflow                            :  1;
     unsigned      mqg11_overflow                            :  1;
     unsigned      mqg12_overflow                            :  1;
     unsigned      mqg13_overflow                            :  1;
     unsigned      mqg14_overflow                            :  1;
     unsigned      mqg15_overflow                            :  1;
     unsigned      mqg16_overflow                            :  1;
     unsigned      mqg17_overflow                            :  1;
     unsigned      mqg18_overflow                            :  1;
     unsigned      mqg19_overflow                            :  1;
     unsigned      mqg20_overflow                            :  1;
     unsigned      mqg21_overflow                            :  1;
     unsigned      mqg22_overflow                            :  1;
     unsigned      mqg23_overflow                            :  1;
     unsigned      mqg24_overflow                            :  1;
     unsigned      mqg25_overflow                            :  1;
     unsigned      mqg26_overflow                            :  1;
     unsigned      mqg27_overflow                            :  1;
     unsigned      mqg28_overflow                            :  1;
     unsigned      mqg29_overflow                            :  1;
     unsigned      mqg30_overflow                            :  1;
     unsigned      mqg31_overflow                            :  1;
#endif
} ncp_nca_mtp_interrupt2_force_r_t;

/*! @struct ncp_nca_mtp_interrupt3_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt3_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MTP DMM dealloc request was to an unconfigured pool/size.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM dealloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param ncav3_mpcq_res_core_berr </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Received non-OKAY response code on MPCQ result write
 *        response interface. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mtp_otp_res_core_berr </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Received non-OKAY response code on OTP result write
 *        response interface. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> OTP pointer adjust request had a protocol error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> OTP pointer adjust request was not for a shared vpp
 *        pool. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MPCQ allocate request protocol error Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_par_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MPCQ allocate request parity error Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_ptr_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MPCQ allocate request was not for 2, 4, or 8 pointers.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_id_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MPCQ allocate request src_id (NCAP) was out of range
 *        or dst_id was not 0 (NCA). Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_pgit_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MPCQ allocate request PGIT was out of range. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MPCQ allocate request was not for a shared vpp pool.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MPCQ allocate request lookup table was not valid for
 *        provided src_id and PGIT. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> ITP allocate request had a protocol error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> ITP allocate request was not for a shared vpp or cpu
 *        pool. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_req_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> ITP pointer adjust request had a protocol error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_pool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> ITP pointer adjust request was not for a shared vpp
 *        pool. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wreq_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> DMM deallocate request had a protocol error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> DMM deallocate request had an invalid pool (pool not
 *        2-7). Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wlu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> DMM deallocate request lookup table was not valid
 *        for provided PGIT. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rreq_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> DMM allocate request had a protocol error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> DMM allocate request was not for a shared vpp pool.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rlu_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> DMM allocate request lookup table was not valid for
 *        provided PGIT. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_synd_status_int </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> Syndrome interrupt Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_smon_int </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> SMON interrupt Force </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt3_force_r_t
 *
 * Implemented by: 
 *      frc3
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      dmm_dealloc_fifo_notvalid_err             :  1;
     unsigned      dmm_dealloc_ac7_err                       :  1;
     unsigned      dmm_dealloc_ac6_err                       :  1;
     unsigned      dmm_dealloc_ac5_err                       :  1;
     unsigned      dmm_dealloc_ac4_err                       :  1;
     unsigned      dmm_dealloc_ac3_err                       :  1;
     unsigned      dmm_dealloc_ac2_err                       :  1;
     unsigned      dmm_dealloc_ac1_err                       :  1;
     unsigned      dmm_dealloc_ac0_err                       :  1;
     unsigned      ncav3_mpcq_res_core_berr                  :  1;
     unsigned      mtp_otp_res_core_berr                     :  1;
     unsigned      otp_req_error                             :  1;
     unsigned      otp_pool_error                            :  1;
     unsigned      mpcq_req_error                            :  1;
     unsigned      mpcq_par_error                            :  1;
     unsigned      mpcq_ptr_error                            :  1;
     unsigned      mpcq_id_error                             :  1;
     unsigned      mpcq_pgit_error                           :  1;
     unsigned      mpcq_pool_error                           :  1;
     unsigned      mpcq_lu_error                             :  1;
     unsigned      itp_req_error                             :  1;
     unsigned      itp_pool_error                            :  1;
     unsigned      itp_tx_req_error                          :  1;
     unsigned      itp_tx_pool_error                         :  1;
     unsigned      dmm_wreq_error                            :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_wlu_error                             :  1;
     unsigned      dmm_rreq_error                            :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_rlu_error                             :  1;
     unsigned      cfg_synd_status_int                       :  1;
     unsigned      cfg_smon_int                              :  1;
#else    /* Little Endian */
     unsigned      cfg_smon_int                              :  1;
     unsigned      cfg_synd_status_int                       :  1;
     unsigned      dmm_rlu_error                             :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_rreq_error                            :  1;
     unsigned      dmm_wlu_error                             :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_wreq_error                            :  1;
     unsigned      itp_tx_pool_error                         :  1;
     unsigned      itp_tx_req_error                          :  1;
     unsigned      itp_pool_error                            :  1;
     unsigned      itp_req_error                             :  1;
     unsigned      mpcq_lu_error                             :  1;
     unsigned      mpcq_pool_error                           :  1;
     unsigned      mpcq_pgit_error                           :  1;
     unsigned      mpcq_id_error                             :  1;
     unsigned      mpcq_ptr_error                            :  1;
     unsigned      mpcq_par_error                            :  1;
     unsigned      mpcq_req_error                            :  1;
     unsigned      otp_pool_error                            :  1;
     unsigned      otp_req_error                             :  1;
     unsigned      mtp_otp_res_core_berr                     :  1;
     unsigned      ncav3_mpcq_res_core_berr                  :  1;
     unsigned      dmm_dealloc_ac0_err                       :  1;
     unsigned      dmm_dealloc_ac1_err                       :  1;
     unsigned      dmm_dealloc_ac2_err                       :  1;
     unsigned      dmm_dealloc_ac3_err                       :  1;
     unsigned      dmm_dealloc_ac4_err                       :  1;
     unsigned      dmm_dealloc_ac5_err                       :  1;
     unsigned      dmm_dealloc_ac6_err                       :  1;
     unsigned      dmm_dealloc_ac7_err                       :  1;
     unsigned      dmm_dealloc_fifo_notvalid_err             :  1;
#endif
} ncp_nca_mtp_interrupt3_force_r_t;

/*! @struct ncp_nca_mtp_interrupt4_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt4_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> MTP DMM allocate request was to an unconfigured pool/size.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> MTP ITP allocate request was to an unconfigured pool/size.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP MPCQ allocate request was to an unconfigured pool/size.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param itp_tx_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP ITP transmit request was to an unconfigured pool/size.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param otp_fifo_notvalid_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP OTP command request was to an unconfigured pool/size.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_rpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> DMM allocate request was non-secure and non-secure
 *        accesses are not enabled. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_wpool_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> DMM deallocate request was non-secure and non-secure
 *        accesses are not enabled. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        SB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        SB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused150 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused149 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory SB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        SB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory SB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory SB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory SB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory SB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory SB
 *        ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory SB ECC
 *        error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory SB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_sbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory SB ECC error. Force </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt4_force_r_t
 *
 * Implemented by: 
 *      frc4
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      dmm_fifo_notvalid_err                     :  1;
     unsigned      itp_fifo_notvalid_err                     :  1;
     unsigned      mpcq_fifo_notvalid_err                    :  1;
     unsigned      itp_tx_fifo_notvalid_err                  :  1;
     unsigned      otp_fifo_notvalid_err                     :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      pf_dmm_ac1_sbe_error                      :  1;
     unsigned      pf_dmm_ac0_sbe_error                      :  1;
     unsigned      unused150                                 :  1;
     unsigned      unused149                                 :  1;
     unsigned      pf_mpcq_ac1_sbe_error                     :  1;
     unsigned      pf_mpcq_ac0_sbe_error                     :  1;
     unsigned      pf_stripe1_cfg_sbe_error                  :  1;
     unsigned      pf_stripe0_cfg_sbe_error                  :  1;
     unsigned      pf_stripe1_state_sbe_error                :  1;
     unsigned      pf_stripe0_state_sbe_error                :  1;
     unsigned      pf_stripe1_fifo_sbe_error                 :  1;
     unsigned      pf_stripe0_fifo_sbe_error                 :  1;
     unsigned      pf_hyst_sbe_error                         :  1;
     unsigned      dmm_dealloc_ac1_sbe_error                 :  1;
     unsigned      dmm_dealloc_ac0_sbe_error                 :  1;
     unsigned      dmm_lu_sbe_error                          :  1;
     unsigned      mpcq_lu_sbe_error                         :  1;
     unsigned      mqg_64k_thresh_sbe_error                  :  1;
     unsigned      mqg_16k_thresh_sbe_error                  :  1;
     unsigned      mqg_2kb_thresh_sbe_error                  :  1;
     unsigned      mqg_256_thresh_sbe_error                  :  1;
     unsigned      mqg_64k_cnt_sbe_error                     :  1;
     unsigned      mqg_16k_cnt_sbe_error                     :  1;
     unsigned      mqg_2kb_cnt_sbe_error                     :  1;
     unsigned      mqg_256_cnt_sbe_error                     :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_sbe_error                     :  1;
     unsigned      mqg_2kb_cnt_sbe_error                     :  1;
     unsigned      mqg_16k_cnt_sbe_error                     :  1;
     unsigned      mqg_64k_cnt_sbe_error                     :  1;
     unsigned      mqg_256_thresh_sbe_error                  :  1;
     unsigned      mqg_2kb_thresh_sbe_error                  :  1;
     unsigned      mqg_16k_thresh_sbe_error                  :  1;
     unsigned      mqg_64k_thresh_sbe_error                  :  1;
     unsigned      mpcq_lu_sbe_error                         :  1;
     unsigned      dmm_lu_sbe_error                          :  1;
     unsigned      dmm_dealloc_ac0_sbe_error                 :  1;
     unsigned      dmm_dealloc_ac1_sbe_error                 :  1;
     unsigned      pf_hyst_sbe_error                         :  1;
     unsigned      pf_stripe0_fifo_sbe_error                 :  1;
     unsigned      pf_stripe1_fifo_sbe_error                 :  1;
     unsigned      pf_stripe0_state_sbe_error                :  1;
     unsigned      pf_stripe1_state_sbe_error                :  1;
     unsigned      pf_stripe0_cfg_sbe_error                  :  1;
     unsigned      pf_stripe1_cfg_sbe_error                  :  1;
     unsigned      pf_mpcq_ac0_sbe_error                     :  1;
     unsigned      pf_mpcq_ac1_sbe_error                     :  1;
     unsigned      unused149                                 :  1;
     unsigned      unused150                                 :  1;
     unsigned      pf_dmm_ac0_sbe_error                      :  1;
     unsigned      pf_dmm_ac1_sbe_error                      :  1;
     unsigned      dmm_wpool_error                           :  1;
     unsigned      dmm_rpool_error                           :  1;
     unsigned      otp_fifo_notvalid_err                     :  1;
     unsigned      itp_tx_fifo_notvalid_err                  :  1;
     unsigned      mpcq_fifo_notvalid_err                    :  1;
     unsigned      itp_fifo_notvalid_err                     :  1;
     unsigned      dmm_fifo_notvalid_err                     :  1;
#endif
} ncp_nca_mtp_interrupt4_force_r_t;

/*! @struct ncp_nca_mtp_interrupt5_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt5_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param unused191 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused190 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused189 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused188 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused187 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused186 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused185 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        MB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        MB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused182 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused181 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory MB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        MB ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory MB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory MB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory MB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory MB ECC error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory MB
 *        ECC error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory MB ECC
 *        error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory MB ECC error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_mbe_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory MB ECC error. Force </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt5_force_r_t
 *
 * Implemented by: 
 *      frc5
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      unused191                                 :  1;
     unsigned      unused190                                 :  1;
     unsigned      unused189                                 :  1;
     unsigned      unused188                                 :  1;
     unsigned      unused187                                 :  1;
     unsigned      unused186                                 :  1;
     unsigned      unused185                                 :  1;
     unsigned      pf_dmm_ac1_mbe_error                      :  1;
     unsigned      pf_dmm_ac0_mbe_error                      :  1;
     unsigned      unused182                                 :  1;
     unsigned      unused181                                 :  1;
     unsigned      pf_mpcq_ac1_mbe_error                     :  1;
     unsigned      pf_mpcq_ac0_mbe_error                     :  1;
     unsigned      pf_stripe1_cfg_mbe_error                  :  1;
     unsigned      pf_stripe0_cfg_mbe_error                  :  1;
     unsigned      pf_stripe1_state_mbe_error                :  1;
     unsigned      pf_stripe0_state_mbe_error                :  1;
     unsigned      pf_stripe1_fifo_mbe_error                 :  1;
     unsigned      pf_stripe0_fifo_mbe_error                 :  1;
     unsigned      pf_hyst_mbe_error                         :  1;
     unsigned      dmm_dealloc_ac1_mbe_error                 :  1;
     unsigned      dmm_dealloc_ac0_mbe_error                 :  1;
     unsigned      dmm_lu_mbe_error                          :  1;
     unsigned      mpcq_lu_mbe_error                         :  1;
     unsigned      mqg_64k_thresh_mbe_error                  :  1;
     unsigned      mqg_16k_thresh_mbe_error                  :  1;
     unsigned      mqg_2kb_thresh_mbe_error                  :  1;
     unsigned      mqg_256_thresh_mbe_error                  :  1;
     unsigned      mqg_64k_cnt_mbe_error                     :  1;
     unsigned      mqg_16k_cnt_mbe_error                     :  1;
     unsigned      mqg_2kb_cnt_mbe_error                     :  1;
     unsigned      mqg_256_cnt_mbe_error                     :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_mbe_error                     :  1;
     unsigned      mqg_2kb_cnt_mbe_error                     :  1;
     unsigned      mqg_16k_cnt_mbe_error                     :  1;
     unsigned      mqg_64k_cnt_mbe_error                     :  1;
     unsigned      mqg_256_thresh_mbe_error                  :  1;
     unsigned      mqg_2kb_thresh_mbe_error                  :  1;
     unsigned      mqg_16k_thresh_mbe_error                  :  1;
     unsigned      mqg_64k_thresh_mbe_error                  :  1;
     unsigned      mpcq_lu_mbe_error                         :  1;
     unsigned      dmm_lu_mbe_error                          :  1;
     unsigned      dmm_dealloc_ac0_mbe_error                 :  1;
     unsigned      dmm_dealloc_ac1_mbe_error                 :  1;
     unsigned      pf_hyst_mbe_error                         :  1;
     unsigned      pf_stripe0_fifo_mbe_error                 :  1;
     unsigned      pf_stripe1_fifo_mbe_error                 :  1;
     unsigned      pf_stripe0_state_mbe_error                :  1;
     unsigned      pf_stripe1_state_mbe_error                :  1;
     unsigned      pf_stripe0_cfg_mbe_error                  :  1;
     unsigned      pf_stripe1_cfg_mbe_error                  :  1;
     unsigned      pf_mpcq_ac0_mbe_error                     :  1;
     unsigned      pf_mpcq_ac1_mbe_error                     :  1;
     unsigned      unused181                                 :  1;
     unsigned      unused182                                 :  1;
     unsigned      pf_dmm_ac0_mbe_error                      :  1;
     unsigned      pf_dmm_ac1_mbe_error                      :  1;
     unsigned      unused185                                 :  1;
     unsigned      unused186                                 :  1;
     unsigned      unused187                                 :  1;
     unsigned      unused188                                 :  1;
     unsigned      unused189                                 :  1;
     unsigned      unused190                                 :  1;
     unsigned      unused191                                 :  1;
#endif
} ncp_nca_mtp_interrupt5_force_r_t;

/*! @struct ncp_nca_mtp_interrupt6_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt6_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param read_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> CFG read error Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param write_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> CFG write error Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused221 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused220 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused219 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused218 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused217 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert translate memory
 *        read/write error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_dmm_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert pool memory
 *        read/write error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused214 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused213 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert translate
 *        memory read/write error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_mpcq_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert pool memory
 *        read/write error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_cfg_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch stripe 1 config memory read/write error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_cfg_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch stripe 0 config memory read/write error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_state_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch stripe 1 state memory read/write error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_state_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> MTP prefetch stripe 0 state memory read/write error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> MTP prefetch stripe 1 pointer memory read/write error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> MTP prefetch stripe 0 pointer memory read/write error.
 *        Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_hyst_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> MTP prefetch hysteresis memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac1_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> MTP DMM dealloc address convert translate memory read/write
 *        error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_dealloc_ac0_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> MTP DMM dealloc address convert pool memory read/write
 *        error. Force
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_lu_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> MTP DMM lookup memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_lu_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> MTP MPCQ lookup memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MQG 64KB threshold memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MQG 16KB threshold memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MQG 2KB threshold memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_thresh_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MQG 256B threshold memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_64k_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MQG 64KB counter memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_16k_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MQG 16KB counter memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_2kb_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MQG 2KB counter memory read/write error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mqg_256_cnt_rw_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MQG 256B counter memory read/write error. Force </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt6_force_r_t
 *
 * Implemented by: 
 *      frc6
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      read_err                                  :  1;
     unsigned      write_err                                 :  1;
     unsigned      unused221                                 :  1;
     unsigned      unused220                                 :  1;
     unsigned      unused219                                 :  1;
     unsigned      unused218                                 :  1;
     unsigned      unused217                                 :  1;
     unsigned      pf_dmm_ac1_rw_error                       :  1;
     unsigned      pf_dmm_ac0_rw_error                       :  1;
     unsigned      unused214                                 :  1;
     unsigned      unused213                                 :  1;
     unsigned      pf_mpcq_ac1_rw_error                      :  1;
     unsigned      pf_mpcq_ac0_rw_error                      :  1;
     unsigned      pf_stripe1_cfg_rw_error                   :  1;
     unsigned      pf_stripe0_cfg_rw_error                   :  1;
     unsigned      pf_stripe1_state_rw_error                 :  1;
     unsigned      pf_stripe0_state_rw_error                 :  1;
     unsigned      pf_stripe1_fifo_rw_error                  :  1;
     unsigned      pf_stripe0_fifo_rw_error                  :  1;
     unsigned      pf_hyst_rw_error                          :  1;
     unsigned      dmm_dealloc_ac1_rw_error                  :  1;
     unsigned      dmm_dealloc_ac0_rw_error                  :  1;
     unsigned      dmm_lu_rw_error                           :  1;
     unsigned      mpcq_lu_rw_error                          :  1;
     unsigned      mqg_64k_thresh_rw_error                   :  1;
     unsigned      mqg_16k_thresh_rw_error                   :  1;
     unsigned      mqg_2kb_thresh_rw_error                   :  1;
     unsigned      mqg_256_thresh_rw_error                   :  1;
     unsigned      mqg_64k_cnt_rw_error                      :  1;
     unsigned      mqg_16k_cnt_rw_error                      :  1;
     unsigned      mqg_2kb_cnt_rw_error                      :  1;
     unsigned      mqg_256_cnt_rw_error                      :  1;
#else    /* Little Endian */
     unsigned      mqg_256_cnt_rw_error                      :  1;
     unsigned      mqg_2kb_cnt_rw_error                      :  1;
     unsigned      mqg_16k_cnt_rw_error                      :  1;
     unsigned      mqg_64k_cnt_rw_error                      :  1;
     unsigned      mqg_256_thresh_rw_error                   :  1;
     unsigned      mqg_2kb_thresh_rw_error                   :  1;
     unsigned      mqg_16k_thresh_rw_error                   :  1;
     unsigned      mqg_64k_thresh_rw_error                   :  1;
     unsigned      mpcq_lu_rw_error                          :  1;
     unsigned      dmm_lu_rw_error                           :  1;
     unsigned      dmm_dealloc_ac0_rw_error                  :  1;
     unsigned      dmm_dealloc_ac1_rw_error                  :  1;
     unsigned      pf_hyst_rw_error                          :  1;
     unsigned      pf_stripe0_fifo_rw_error                  :  1;
     unsigned      pf_stripe1_fifo_rw_error                  :  1;
     unsigned      pf_stripe0_state_rw_error                 :  1;
     unsigned      pf_stripe1_state_rw_error                 :  1;
     unsigned      pf_stripe0_cfg_rw_error                   :  1;
     unsigned      pf_stripe1_cfg_rw_error                   :  1;
     unsigned      pf_mpcq_ac0_rw_error                      :  1;
     unsigned      pf_mpcq_ac1_rw_error                      :  1;
     unsigned      unused213                                 :  1;
     unsigned      unused214                                 :  1;
     unsigned      pf_dmm_ac0_rw_error                       :  1;
     unsigned      pf_dmm_ac1_rw_error                       :  1;
     unsigned      unused217                                 :  1;
     unsigned      unused218                                 :  1;
     unsigned      unused219                                 :  1;
     unsigned      unused220                                 :  1;
     unsigned      unused221                                 :  1;
     unsigned      write_err                                 :  1;
     unsigned      read_err                                  :  1;
#endif
} ncp_nca_mtp_interrupt6_force_r_t;

/*! @struct ncp_nca_mtp_interrupt7_force_r_t
 *  @brief Interrupt Force Register
 *  @details This address is an alias for the Interrupt Status register
		that allows normal CFG writes (as opposed to the Clear-On-Write-One
		behavior if the Interrupt Status register address is used).  This
		allows CFG to set interrupt bits for testing purposes.  Reading this
		address returns the current value of the Interrupt Status Register.
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_interrupt7_force_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_fifo_of </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 31 </td>
 *   <td width="30%"> NCAV3 CFG module FIFO OF Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param cfg_fifo_uf </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 30 </td>
 *   <td width="30%"> NCAV3 CFG module FIFO UF Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_resp_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 29 </td>
 *   <td width="30%"> MTP prefetch stripe 1 response error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> MTP prefetch stripe 1 FIFO overflow error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe1_fifo_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 27 </td>
 *   <td width="30%"> MTP prefetch stripe 1 FIFO underflow error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_resp_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 26 </td>
 *   <td width="30%"> MTP prefetch stripe 0 response error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_overflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 25 </td>
 *   <td width="30%"> MTP prefetch stripe 0 FIFO overflow error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param pf_stripe0_fifo_underflow </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> MTP prefetch stripe 0 FIFO underflow error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 23 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 21 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 19 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 18 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 17 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param dmm_alloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> MTP prefetch DMM alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused239 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 15 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused238 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 14 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused237 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 13 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused236 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 12 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused235 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused234 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 10 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused233 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 9 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param unused232 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> Unused Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac7_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 7 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac6_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 6 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac5_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 5 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac4_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 4 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac3_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac2_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac1_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mpcq_alloc_ac0_err </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> MTP prefetch MPCQ alloc address convert error. Force </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_interrupt7_force_r_t
 *
 * Implemented by: 
 *      frc7
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      cfg_fifo_of                               :  1;
     unsigned      cfg_fifo_uf                               :  1;
     unsigned      pf_stripe1_resp_err                       :  1;
     unsigned      pf_stripe1_fifo_overflow                  :  1;
     unsigned      pf_stripe1_fifo_underflow                 :  1;
     unsigned      pf_stripe0_resp_err                       :  1;
     unsigned      pf_stripe0_fifo_overflow                  :  1;
     unsigned      pf_stripe0_fifo_underflow                 :  1;
     unsigned      dmm_alloc_ac7_err                         :  1;
     unsigned      dmm_alloc_ac6_err                         :  1;
     unsigned      dmm_alloc_ac5_err                         :  1;
     unsigned      dmm_alloc_ac4_err                         :  1;
     unsigned      dmm_alloc_ac3_err                         :  1;
     unsigned      dmm_alloc_ac2_err                         :  1;
     unsigned      dmm_alloc_ac1_err                         :  1;
     unsigned      dmm_alloc_ac0_err                         :  1;
     unsigned      unused239                                 :  1;
     unsigned      unused238                                 :  1;
     unsigned      unused237                                 :  1;
     unsigned      unused236                                 :  1;
     unsigned      unused235                                 :  1;
     unsigned      unused234                                 :  1;
     unsigned      unused233                                 :  1;
     unsigned      unused232                                 :  1;
     unsigned      mpcq_alloc_ac7_err                        :  1;
     unsigned      mpcq_alloc_ac6_err                        :  1;
     unsigned      mpcq_alloc_ac5_err                        :  1;
     unsigned      mpcq_alloc_ac4_err                        :  1;
     unsigned      mpcq_alloc_ac3_err                        :  1;
     unsigned      mpcq_alloc_ac2_err                        :  1;
     unsigned      mpcq_alloc_ac1_err                        :  1;
     unsigned      mpcq_alloc_ac0_err                        :  1;
#else    /* Little Endian */
     unsigned      mpcq_alloc_ac0_err                        :  1;
     unsigned      mpcq_alloc_ac1_err                        :  1;
     unsigned      mpcq_alloc_ac2_err                        :  1;
     unsigned      mpcq_alloc_ac3_err                        :  1;
     unsigned      mpcq_alloc_ac4_err                        :  1;
     unsigned      mpcq_alloc_ac5_err                        :  1;
     unsigned      mpcq_alloc_ac6_err                        :  1;
     unsigned      mpcq_alloc_ac7_err                        :  1;
     unsigned      unused232                                 :  1;
     unsigned      unused233                                 :  1;
     unsigned      unused234                                 :  1;
     unsigned      unused235                                 :  1;
     unsigned      unused236                                 :  1;
     unsigned      unused237                                 :  1;
     unsigned      unused238                                 :  1;
     unsigned      unused239                                 :  1;
     unsigned      dmm_alloc_ac0_err                         :  1;
     unsigned      dmm_alloc_ac1_err                         :  1;
     unsigned      dmm_alloc_ac2_err                         :  1;
     unsigned      dmm_alloc_ac3_err                         :  1;
     unsigned      dmm_alloc_ac4_err                         :  1;
     unsigned      dmm_alloc_ac5_err                         :  1;
     unsigned      dmm_alloc_ac6_err                         :  1;
     unsigned      dmm_alloc_ac7_err                         :  1;
     unsigned      pf_stripe0_fifo_underflow                 :  1;
     unsigned      pf_stripe0_fifo_overflow                  :  1;
     unsigned      pf_stripe0_resp_err                       :  1;
     unsigned      pf_stripe1_fifo_underflow                 :  1;
     unsigned      pf_stripe1_fifo_overflow                  :  1;
     unsigned      pf_stripe1_resp_err                       :  1;
     unsigned      cfg_fifo_uf                               :  1;
     unsigned      cfg_fifo_of                               :  1;
#endif
} ncp_nca_mtp_interrupt7_force_r_t;

/*! @struct ncp_nca_mtp_AW_smon01_smon_r_t
 *  @brief AW_smon CONTROL1 register
 *  @details This is used to configure the operation of the 2 internal counters in the SMON
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_AW_smon01_smon_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 16 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mode1 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 8 </td>
 *   <td width="30%"> select input signal for SMON1 engine </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param mode0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> select input signal for SMON0 engine </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_AW_smon01_smon_r_t
 *
 * Implemented by: 
 *      AW_SMON01_smon
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 16;
     unsigned      mode1                                     :  8;
     unsigned      mode0                                     :  8;
#else    /* Little Endian */
     unsigned      mode0                                     :  8;
     unsigned      mode1                                     :  8;
     unsigned      reserved0                                 : 16;
#endif
} ncp_nca_mtp_AW_smon01_smon_r_t;

/*! @struct ncp_nca_mtp_cfg_setup_r_t
 *  @brief null
 *  @details cfg_setup reigster for CFG block
 *  <table width="70%" align="center">
 *  <tr>
 *   <td colspan="4" align="center">
 *    struct ncp_nca_mtp_cfg_setup_r_t\n
 *   </td>
 *  </tr>
 *  <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *  </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 29 </td>
 *     <td width="20%" align="center"> 3 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param enable_read_error </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 2 </td>
 *   <td width="30%"> enable read error. When this is set to 1 then illegal
 *        CFG read access will return an error indication
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param enable_nsa </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> enable non-secure CFG access. When this is set to
 *        1 non-secure CFG access are processed. When this is
 *        set to 0 then non-secure CFG access are not processed
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param disable_write </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> disable CFG write access. When this is set to 1 (sticky)
 *        then CFG write access to specified registers is disabled
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_cfg_setup_r_t
 *
 * Implemented by: 
 *      cfg_setup
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
     unsigned      reserved0                                 : 29;
     unsigned      enable_read_error                         :  1;
     unsigned      enable_nsa                                :  1;
     unsigned      disable_write                             :  1;
#else    /* Little Endian */
     unsigned      disable_write                             :  1;
     unsigned      enable_nsa                                :  1;
     unsigned      enable_read_error                         :  1;
     unsigned      reserved0                                 : 29;
#endif
} ncp_nca_mtp_cfg_setup_r_t;

/*! @struct ncp_nca_mtp_fifo_cfg_ram_r_t
 *  @brief Multi-word data structure
 *  <table width="70%" align="center">
 *   <tr>
 *     <td colspan="4" align="center">
 *       struct ncp_nca_mtp_fifo_cfg_ram_r_t
 *     </td>
 *   </tr>
 *   <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *   </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 21 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_base </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> FIFO Base Address </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_size_10_10 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 1 bits of fifo_size. FIFO Size </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_size_9_0 </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> 10 bits of fifo_size. FIFO Size </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_high_wm </td>
 *     <td width="20%" align="center"> 11 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> FIFO High Watermark </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_low_wm </td>
 *     <td width="20%" align="center"> 11 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> FIFO Low Watermark </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_cfg_ram_r_t
 *
 * Implemented by: 
 *      prefetch_fifo_cfg_ram_stripe_0
 *      prefetch_fifo_cfg_ram_stripe_1
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
          /* word 0 */
     unsigned      reserved0                                 : 21;
     unsigned      fifo_base                                 : 10;
     unsigned      fifo_size_10_10                           :  1;
          /* word 1 */
     unsigned      fifo_size_9_0                             : 10;
     unsigned      fifo_high_wm                              : 11;
     unsigned      fifo_low_wm                               : 11;
#else    /* Little Endian */
          /* word 0 */
     unsigned      fifo_size_10_10                           :  1;
     unsigned      fifo_base                                 : 10;
     unsigned      reserved0                                 : 21;
          /* word 1 */
     unsigned      fifo_low_wm                               : 11;
     unsigned      fifo_high_wm                              : 11;
     unsigned      fifo_size_9_0                             : 10;
#endif
} ncp_nca_mtp_fifo_cfg_ram_r_t;

/*! @struct ncp_nca_mtp_fifo_cfg_ram_write_r_t
 *  @brief Multi-word data structure
 *  <table width="70%" align="center">
 *   <tr>
 *     <td colspan="4" align="center">
 *       struct ncp_nca_mtp_fifo_cfg_ram_write_r_t
 *     </td>
 *   </tr>
 *   <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *   </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0 </td>
 *     <td width="20%" align="center"> 21 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_base </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 1 </td>
 *   <td width="30%"> FIFO Base Address </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_size_10_10 </td>
 *     <td width="20%" align="center"> 1 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 1 bits of fifo_size. FIFO Size </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_size_9_0 </td>
 *     <td width="20%" align="center"> 10 </td>
 *     <td width="20%" align="center"> 22 </td>
 *   <td width="30%"> 10 bits of fifo_size. FIFO Size </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_high_wm </td>
 *     <td width="20%" align="center"> 11 </td>
 *     <td width="20%" align="center"> 11 </td>
 *   <td width="30%"> FIFO High Watermark </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param fifo_low_wm </td>
 *     <td width="20%" align="center"> 11 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> FIFO Low Watermark </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_fifo_cfg_ram_write_r_t
 *
 * Implemented by: 
 *      prefetch_fifo_cfg_ram_stripe_write
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
          /* word 0 */
     unsigned      reserved0                                 : 21;
     unsigned      fifo_base                                 : 10;
     unsigned      fifo_size_10_10                           :  1;
          /* word 1 */
     unsigned      fifo_size_9_0                             : 10;
     unsigned      fifo_high_wm                              : 11;
     unsigned      fifo_low_wm                               : 11;
#else    /* Little Endian */
          /* word 0 */
     unsigned      fifo_size_10_10                           :  1;
     unsigned      fifo_base                                 : 10;
     unsigned      reserved0                                 : 21;
          /* word 1 */
     unsigned      fifo_low_wm                               : 11;
     unsigned      fifo_high_wm                              : 11;
     unsigned      fifo_size_9_0                             : 10;
#endif
} ncp_nca_mtp_fifo_cfg_ram_write_r_t;

/*! @struct ncp_nca_mtp_addrconvert_poolbaseindex_r_t
 *  @brief Multi-word data structure
 *  <table width="70%" align="center">
 *   <tr>
 *     <td colspan="4" align="center">
 *       struct ncp_nca_mtp_addrconvert_poolbaseindex_r_t
 *     </td>
 *   </tr>
 *   <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *   </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0_107_76 </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 32 bits of reserved0. Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0_75_44 </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 32 bits of reserved0. Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0_43_12 </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 32 bits of reserved0. Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param reserved0_11_0 </td>
 *     <td width="20%" align="center"> 12 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> 12 bits of reserved0. Reserved for future use </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolmaxindex_35_16 </td>
 *     <td width="20%" align="center"> 20 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 20 bits of poolmaxindex. POOL maximum indedx. This
 *        is the maximum index of the pool
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolmaxindex_15_0 </td>
 *     <td width="20%" align="center"> 16 </td>
 *     <td width="20%" align="center"> 16 </td>
 *   <td width="30%"> 16 bits of poolmaxindex. POOL maximum indedx. This
 *        is the maximum index of the pool
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbaseindex256_27_12 </td>
 *     <td width="20%" align="center"> 16 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 16 bits of poolbaseindex256. POOL 256 data block size
 *        base index. This is the starting index of the 256B
 *        memory space of the pool. This is the most significant
 *        28b of the index base, bits 35:8
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbaseindex256_11_0 </td>
 *     <td width="20%" align="center"> 12 </td>
 *     <td width="20%" align="center"> 20 </td>
 *   <td width="30%"> 12 bits of poolbaseindex256. POOL 256 data block size
 *        base index. This is the starting index of the 256B
 *        memory space of the pool. This is the most significant
 *        28b of the index base, bits 35:8
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbaseindex2k_27_8 </td>
 *     <td width="20%" align="center"> 20 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 20 bits of poolbaseindex2k. POOL 2k data block size
 *        base index. This is the starting index of the 2k memory
 *        space of the pool. This is the most significant 28b
 *        of the index base, bits 35:8
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbaseindex2k_7_0 </td>
 *     <td width="20%" align="center"> 8 </td>
 *     <td width="20%" align="center"> 24 </td>
 *   <td width="30%"> 8 bits of poolbaseindex2k. POOL 2k data block size
 *        base index. This is the starting index of the 2k memory
 *        space of the pool. This is the most significant 28b
 *        of the index base, bits 35:8
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbaseindex16k_27_4 </td>
 *     <td width="20%" align="center"> 24 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 24 bits of poolbaseindex16k. POOL 16k data block size
 *        base index. This is the starting index of the 16k
 *        memory space of the pool. This is the most significant
 *        28b of the index base, bits 35:8
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbaseindex16k_3_0 </td>
 *     <td width="20%" align="center"> 4 </td>
 *     <td width="20%" align="center"> 28 </td>
 *   <td width="30%"> 4 bits of poolbaseindex16k. POOL 16k data block size
 *        base index. This is the starting index of the 16k
 *        memory space of the pool. This is the most significant
 *        28b of the index base, bits 35:8
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbaseindex64k </td>
 *     <td width="20%" align="center"> 28 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> POOL 64k data block size base index. This is the starting
 *        index of the 64k memory space of the pool. This is
 *        the most significant 28b of the index base, bits 35:8
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_addrconvert_poolbaseindex_r_t
 *
 * Implemented by: 
 *      mpcq_alloc_addrconvert_pool
 *      dmm_alloc_addrconvert_pool
 *      dmm_dealloc_addrconvert_pool
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
          /* word 0 */
     unsigned      reserved0_107_76                          : 32;
          /* word 1 */
     unsigned      reserved0_75_44                           : 32;
          /* word 2 */
     unsigned      reserved0_43_12                           : 32;
          /* word 3 */
     unsigned      reserved0_11_0                            : 12;
     unsigned      poolmaxindex_35_16                        : 20;
          /* word 4 */
     unsigned      poolmaxindex_15_0                         : 16;
     unsigned      poolbaseindex256_27_12                    : 16;
          /* word 5 */
     unsigned      poolbaseindex256_11_0                     : 12;
     unsigned      poolbaseindex2k_27_8                      : 20;
          /* word 6 */
     unsigned      poolbaseindex2k_7_0                       :  8;
     unsigned      poolbaseindex16k_27_4                     : 24;
          /* word 7 */
     unsigned      poolbaseindex16k_3_0                      :  4;
     unsigned      poolbaseindex64k                          : 28;
#else    /* Little Endian */
          /* word 0 */
     unsigned      reserved0_107_76                          : 32;
          /* word 1 */
     unsigned      reserved0_75_44                           : 32;
          /* word 2 */
     unsigned      reserved0_43_12                           : 32;
          /* word 3 */
     unsigned      poolmaxindex_35_16                        : 20;
     unsigned      reserved0_11_0                            : 12;
          /* word 4 */
     unsigned      poolbaseindex256_27_12                    : 16;
     unsigned      poolmaxindex_15_0                         : 16;
          /* word 5 */
     unsigned      poolbaseindex2k_27_8                      : 20;
     unsigned      poolbaseindex256_11_0                     : 12;
          /* word 6 */
     unsigned      poolbaseindex16k_27_4                     : 24;
     unsigned      poolbaseindex2k_7_0                       :  8;
          /* word 7 */
     unsigned      poolbaseindex64k                          : 28;
     unsigned      poolbaseindex16k_3_0                      :  4;
#endif
} ncp_nca_mtp_addrconvert_poolbaseindex_r_t;

/*! @struct ncp_nca_mtp_addrconvert_virtualbase_r_t
 *  @brief Multi-word data structure
 *  <table width="70%" align="center">
 *   <tr>
 *     <td colspan="4" align="center">
 *       struct ncp_nca_mtp_addrconvert_virtualbase_r_t
 *     </td>
 *   </tr>
 *   <tr>
 *     <td width="30%"><b> Name </b></td>
 *     <td width="20%" align="center"><b> Width </b></td>
 *     <td width="20%" align="center"><b> Start Offset </b></td>
 *     <td width="30%"><b> Description </b></td>
 *   </tr>
 *   <tr>
 *     <td width="30%"> @param poolbase_63_32 </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 32 bits of poolbase. This is the pool virtual base
 *        address used to convert between VA and VI.
 *   </td>
 * </tr>
 *   <tr>
 *     <td width="30%"> @param poolbase_31_0 </td>
 *     <td width="20%" align="center"> 32 </td>
 *     <td width="20%" align="center"> 0 </td>
 *   <td width="30%"> 32 bits of poolbase. This is the pool virtual base
 *        address used to convert between VA and VI.
 *   </td>
 * </tr>
 * </table>
 * Applies to: xlf --> ncp_nca_mtp_addrconvert_virtualbase_r_t
 *
 * Implemented by: 
 *      mpcq_alloc_addrconvert_translate
 *      dmm_alloc_addrconvert_translate
 *      dmm_dealloc_addrconvert_translate
 */
 
typedef struct
{
#ifdef NCP_BIG_ENDIAN
          /* word 0 */
     unsigned      poolbase_63_32                            : 32;
          /* word 1 */
     unsigned      poolbase_31_0                             : 32;
#else    /* Little Endian */
          /* word 0 */
     unsigned      poolbase_63_32                            : 32;
          /* word 1 */
     unsigned      poolbase_31_0                             : 32;
#endif
} ncp_nca_mtp_addrconvert_virtualbase_r_t;

#ifdef __cplusplus
}
#endif

#endif /* _NCP_NCA_MTP_REGS_H_ */
